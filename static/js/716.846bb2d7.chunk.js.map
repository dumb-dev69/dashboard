{"version":3,"file":"static/js/716.846bb2d7.chunk.js","mappings":"iOAaMA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,6BAA6B,IAC/CC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,oDAAwC,IAoDnE,UAjDA,SAAqBE,GACjB,IAAMC,EAAwB,UACxBC,GAAwBC,EAAAA,EAAAA,MACxBC,GAAwBC,EAAAA,EAAAA,KACxBC,GAAwBC,EAAAA,EAAAA,MAC9BC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,GAASC,EAAAA,EAAAA,UAAQ,iBAAM,CACzB,CACIC,OAAO,EACPC,SACIC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACD,UAAQ,IAAIE,UACrCJ,EAAAA,EAAAA,KAACrB,EAAI,CAACI,QAASA,OAI3B,CACIsB,KAAM,OACNN,SACIC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAACD,UAAQ,IAAIE,UACrCJ,EAAAA,EAAAA,KAACnB,EAAO,CAACE,QAASA,OAIjC,GAAE,IAsBH,OApBAuB,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE8B7B,EAAY,CAAE8B,IAAK,6BAA8B,KAAD,EAAzD,GAARL,EAAQE,EAAAI,KAED,CAADJ,EAAAE,KAAA,eAAAF,EAAAK,OAAA,iBAEZlC,EAAYmC,EAAAA,GAAmBC,WAAW,CACtCC,WAAY,SACZC,QAASX,EAASY,YAAYC,KAAI,SAAAC,GAAG,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAE1C,QAAAA,GAAO,IAC3D4C,eAAgBhB,EAASiB,eAG7BjC,EAAUC,GAAQiB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,SAElBzB,EAAS,SAAU,CAAE0C,MAAO,CAAEC,OAAQlB,EAAAgB,GAAIE,OAAQC,KAAMnB,EAAAgB,GAAII,OAAS,yBAAApB,EAAAqB,OAAA,GAAAxB,EAAA,kBAd7EH,EAiBJ,GAAG,CAACvB,EAAYI,EAAUF,EAAaU,KAEhCuC,EAAAA,EAAAA,IAAUzC,EACrB,C","sources":["pages/SourcePages.js"],"sourcesContent":["// Functional Imports\r\nimport { useState, useMemo } from \"react\";\r\nimport { useRoutes } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { HeaderSliceActions } from \"../store/header-slice\";\r\nimport { useEffect, lazy, Suspense } from \"react\";\r\nimport { useHttpClientWithNavigate } from \"../utility/http-hook\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Components Imports\r\nimport Loading from \"../componets/Loading/Loading\";\r\n\r\n// Componets Imports (Lazy)\r\nconst Root = lazy(() => import(\"../Apps/Source/Root\"));\r\nconst ViewAll = lazy(() => import(\"../Apps/Source/ViewAll/ViewAll\"))\r\n\r\n\r\nfunction SourcePages(props){\r\n    const baseURL               = '/source';\r\n    const dispatcher            = useDispatch();\r\n    const sendRequest           = useHttpClientWithNavigate();\r\n    const navigate              = useNavigate();\r\n    const [router, setRouter]   = useState([]);\r\n\r\n    const routes = useMemo(() => [\r\n        { \r\n            index: true, \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <Root baseURL={baseURL} /> \r\n                </Suspense>\r\n            )\r\n        }, \r\n        {\r\n            path: 'view',\r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <ViewAll baseURL={baseURL} />\r\n                </Suspense>\r\n            )\r\n        }\r\n    ], []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try{\r\n                const response = await sendRequest({ url: '/apps/source/app-headers' });\r\n\r\n                if(!response) return\r\n            \r\n                dispatcher( HeaderSliceActions.setHeaders({ \r\n                    currentApp: 'Source', \r\n                    appTabs: response.allowedtabs.map(tab => ({ ...tab, baseURL })),\r\n                    appPermissions: response.permissions\r\n                }) );\r\n\r\n                setRouter(routes);\r\n            } catch( err ){\r\n                navigate('/error', { state: { status: err.status, data: err.msg } });\r\n            }\r\n        })();\r\n    }, [dispatcher, navigate, sendRequest, routes]);\r\n\r\n    return useRoutes(router);\r\n}\r\n\r\nexport default SourcePages;"],"names":["Root","lazy","ViewAll","props","baseURL","dispatcher","useDispatch","sendRequest","useHttpClientWithNavigate","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","router","setRouter","routes","useMemo","index","element","_jsx","Suspense","fallback","Loading","children","path","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","url","sent","abrupt","HeaderSliceActions","setHeaders","currentApp","appTabs","allowedtabs","map","tab","_objectSpread","appPermissions","permissions","t0","state","status","data","msg","stop","useRoutes"],"sourceRoot":""}
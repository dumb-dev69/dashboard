{"version":3,"file":"static/js/76.0826468f.chunk.js","mappings":"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","sources":["componets/PopupModel/PopupModel.js","webpack://my-admin/./src/componets/PopupModel/PopupModel.module.css?3bb1","Apps/BookingForm/ViewAll/TableView.js","webpack://my-admin/./src/Apps/BookingForm/ViewAll/TableView.module.css?dc62","webpack://my-admin/./src/Apps/BookingForm/ViewAll/ViewAll.module.css?18dd","Apps/BookingForm/CreateNew/FetchDataFromLeadsquare.js","Apps/BookingForm/CreateNew/SourceInfoHandler.js","Apps/BookingForm/CreateNew/CreateNew.js","webpack://my-admin/./src/Apps/BookingForm/CreateNew/CreateNew.module.css?ed40","Apps/BookingForm/ViewAll/ViewAll.js","Apps/BookingForm/View/ViewHelper.js","Apps/BookingForm/View/NoteHandlerComp.js","Apps/BookingForm/View/ApprovalsHandler.js","Apps/BookingForm/View/HeaderView.js","Apps/BookingForm/View/CreateUserShareableLink.js","Apps/BookingForm/View/View.js","webpack://my-admin/./src/Apps/BookingForm/View/View.module.css?6a72","pages/BookingFormPages.js","utility/tab-access-verifier.js"],"sourcesContent":["// Functional Imports\r\nimport cssNameSimplifier from \"../../utility/css-name-simplifier\";\r\n\r\n// Component Imports\r\nimport { Box, Modal, IconButton, useMediaQuery, Typography, Divider } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\n// Styled Imports\r\nimport importedStyles from './PopupModel.module.css';\r\n\r\nconst STYLES = cssNameSimplifier(importedStyles);\r\n\r\nconst boxStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '70vw',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    maxHeight: '85vh',\r\n    p: 4,\r\n};\r\n\r\n\r\nfunction PopupModel(props){\r\n    boxStyle.width  = useMediaQuery('(min-width:700px)')? '70vw' : '95vw';\r\n\r\n    return (\r\n        <Modal open={props.open}>\r\n            <Box sx={boxStyle} >\r\n                <IconButton className={STYLES.closeIcon} onClick={props?.handelModelClose}>\r\n                    <CloseIcon  />\r\n                </IconButton>\r\n\r\n                {\r\n                    props.title && (\r\n                        <>\r\n                            <Typography variant=\"h5\" component=\"h2\" textAlign=\"center\">\r\n                                <strong>\r\n                                    {props.title}\r\n                                </strong>\r\n                            </Typography>\r\n            \r\n                            <Divider variant='middle' sx={{ marginY: 2 }} />\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <div className={STYLES.childrenContainer}>\r\n                    <div style={{ marginRight: 10 }}>\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default PopupModel;","// extracted by mini-css-extract-plugin\nexport default {\"close-icon\":\"PopupModel_close-icon__toNv0\",\"children-container\":\"PopupModel_children-container__fbG7T\"};","// Functional Imports\r\nimport { useReducer } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useEffect } from \"react\";\r\nimport cssNameSimplifier from '../../../utility/css-name-simplifier';\r\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { Link } from 'react-router-dom';\r\nimport isEmpty from '../../../utility/is-empty';\r\nimport moment from 'moment';\r\n\r\n\r\n// Component Imports\r\nimport { Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\n// Style Imports\r\nimport importStyles from './TableView.module.css';\r\n\r\nconst styles = cssNameSimplifier(importStyles);\r\n\r\n// Table style config\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n\t[`&.${tableCellClasses.head}`]: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\t[`&.${tableCellClasses.body}`]: {\r\n\t\tfontSize: 14,\r\n\t},\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n\t'&:nth-of-type(odd)': {\r\n\t\tbackgroundColor: theme.palette.action.hover,\r\n\t},\r\n\t// hide last border\r\n\t'&:last-child td, &:last-child th': {\r\n\t\tborder: 0,\r\n\t},\r\n}));\r\n\r\n// BookingForm Data Reducer Function\r\nfunction bookingFormDataReducer(state, action){\r\n    if(action.type === 'NEW_DATA'){\r\n        const loadMore = action.data.length > 100\r\n        if(loadMore) action.data.pop()\r\n        if(isEmpty(action.data)) return { data: [...state.data], loadMore: false }\r\n        return { data: [...state.data, ...action.data], loadMore }\r\n    }\r\n\r\n    if(action.type === 'RESET'){\r\n        return state//{ data: [], loadMore: false }\r\n    }\r\n}\r\n\r\nfunction TableView(props){\r\n    const dispatch = useDispatch();\r\n    const sendRequest = useHttpClientWithNavigate();\r\n    const [bookingFromState, dispatchBookingFormState] = useReducer(bookingFormDataReducer, { data: [], loadMore: false });\r\n\r\n    async function fetchBookingFormData(){\r\n        const currentUrl = new URL(window.location);\r\n        const url = props.baseURL + '/view';\r\n        const urlWithFilters = url + currentUrl.search;\r\n        const headers = {};\r\n\r\n        headers['total_count'] = bookingFromState.data.length;\r\n\r\n        try{\r\n            const bookingFormData = await sendRequest({ url: urlWithFilters, headers });\r\n            dispatchBookingFormState({ type: 'NEW_DATA', data: bookingFormData });\r\n        }catch( err ){\r\n            // navigate(url);\r\n            dispatch( AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch booking form data!', title: 'Request Failed!', severity: 'error' }) )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => await fetchBookingFormData() )();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.tableContainer}>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell align=\"left\">Index</StyledTableCell>\r\n                            <StyledTableCell>Full Name</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Mobile Number</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Project Name</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Project Unit Name</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Status</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Submitted</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Created Date Time</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Created By</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {bookingFromState.data.map((row, index) => (\r\n                            <StyledTableRow key={row.id} className={styles.dataRow}>\r\n                                <StyledTableCell align=\"center\">\r\n                                    {++index}\r\n                                </StyledTableCell>\r\n\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <Link to={`${props.baseURL}/${row.id}/view`}>{row.fullName}</Link>\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.emailId}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.mobileNumber}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.Project.name}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.ProjectUnit.name}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.status}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.submittedByUser && <CheckIcon />}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {( moment(row.createdAt) !== 'Invalid Date') && moment(row.createdAt).format('DD/MM/YYYY HH:MM A')}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    <Link to={`/profile/${row.BookingFormCreatedBy.id}/info`}> {row.BookingFormCreatedBy.name}</Link>\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                {isEmpty(bookingFromState.data) && <h3 className={styles.noDataFound}>No Data Found</h3>}\r\n\r\n            </TableContainer>\r\n\r\n            {\r\n                bookingFromState.loadMore && \r\n                <Paper className={styles.loadMoreContainer} onClick={fetchBookingFormData}>\r\n                    <Button variant=\"outlined\">Load More</Button>\r\n                </Paper>\r\n            }\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default TableView;","// extracted by mini-css-extract-plugin\nexport default {\"table-container\":\"TableView_table-container__ONbVZ\",\"no-data-found\":\"TableView_no-data-found__7KN7I\",\"load-more-container\":\"TableView_load-more-container__KRG5d\",\"data-row\":\"TableView_data-row__zXZ-n\"};","// extracted by mini-css-extract-plugin\nexport default {\"view-container\":\"ViewAll_view-container__yELjO\",\"tool-bar\":\"ViewAll_tool-bar__f3byj\",\"right\":\"ViewAll_right__W9W8t\",\"search-conatiner\":\"ViewAll_search-conatiner__e2jVS\",\"icon\":\"ViewAll_icon__KTlA1\",\"input\":\"ViewAll_input__qeJzf\",\"active\":\"ViewAll_active__0wmK5\",\"searchbar-animation-in\":\"ViewAll_searchbar-animation-in__fNwbe\",\"drawer\":\"ViewAll_drawer__a-noz\",\"filter-actions\":\"ViewAll_filter-actions__QMsjq\",\"filters-list\":\"ViewAll_filters-list__eK8NN\",\"filter\":\"ViewAll_filter__Caf+r\"};","// Functional Imports\r\nimport { useState, useReducer, useEffect } from 'react';\r\nimport isEmpty from '../../../utility/is-empty';\r\nimport cssNameSimplifier from '../../../utility/css-name-simplifier';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\n\r\n// Components Imports\r\nimport { Typography, TextField, IconButton, Tooltip, ToggleButtonGroup, ToggleButton } from '@mui/material';\r\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n\r\n// Style Imports0\r\nimport viewAllStyles from '../ViewAll/ViewAll.module.css';\r\n\r\nconst TOOLBAR_STYLES = cssNameSimplifier(viewAllStyles);\r\n\r\nfunction userDataReducer(state, action){\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n\r\n    if(action.type === 'NEW'){\r\n        if(action.data.length > 1){\r\n            newState.dataList           = action.data;          \r\n            newState.currentDataIndex   = 0;\r\n            newState.showIterator       = true;    \r\n            newState.totalDataLength    = action.data.length; \r\n            return newState;\r\n        }\r\n\r\n        newState.dataList           = action.data;          \r\n        newState.currentDataIndex   = 0;\r\n        newState.showIterator       = false;    \r\n        newState.totalDataLength    = action.data.length; \r\n        return newState;\r\n    }\r\n\r\n    if(action.type === 'NEXT'){\r\n        if((newState.currentDataIndex + 1) >= newState.totalDataLength){\r\n            newState.currentDataIndex = 0;\r\n            return newState\r\n        }\r\n\r\n        ++newState.currentDataIndex;\r\n        return newState\r\n    }\r\n\r\n    if(action.type === 'PREV'){\r\n        if((newState.currentDataIndex - 1) < 0){\r\n            newState.currentDataIndex = newState.totalDataLength - 1;\r\n            return newState\r\n        }\r\n\r\n        --newState.currentDataIndex;\r\n        return newState\r\n    }\r\n}\r\n\r\nfunction FetchDataFromLeadSquare(props){\r\n    const styles                = props.styles;\r\n    const dispatch              = useDispatch();\r\n    const sendRequest           = useHttpClientWithNavigate();\r\n    const [fetchBy, setFetchBy] = useState('phone');\r\n    const [userData, userDataDispatcher] = useReducer(userDataReducer, { \r\n        dataList:           null, \r\n        currentDataIndex:   null, \r\n        showIterator:       false, \r\n        totalDataLength:    null \r\n    })\r\n\r\n    // Propogate leadsquare data to parent comp (CreateNew) on currentDataIndex change \r\n    useEffect(() => {\r\n        if(userData.currentDataIndex === null || userData.currentDataIndex === 0) return;\r\n        props.handelFetchedUserData(userData.dataList[userData.currentDataIndex]);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userData.currentDataIndex])\r\n\r\n\r\n    async function handelFormSubmission(event){\r\n        try{\r\n            event.preventDefault();\r\n            const userinfo = event.target.elements.userInfo.value;\r\n            const url = `${props.baseURL}/get-leadsquare-data?getby=${fetchBy}&userinfo=${userinfo}`;\r\n\r\n            if(isEmpty(userinfo)){\r\n                return dispatch(AlertSliceActions.showAlert({ message: 'User info cannot be empty', title: 'Invalid Request!', severity: 'warning' }))\r\n            } \r\n\r\n            const response = await sendRequest({url});\r\n\r\n            if(isEmpty(response)){\r\n                return dispatch(AlertSliceActions.showAlert({ message: '', title: 'No Records Found!', severity: 'error' }))\r\n            }\r\n\r\n            userDataDispatcher({ type: 'NEW', data: response })\r\n            props.handelFetchedUserData(response[0]);\r\n        } catch( err ){\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch user data!', title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    async function handelDataIteration(type){\r\n        userDataDispatcher({ type });\r\n    }\r\n\r\n    return (\r\n        <form action='#' method=\"POST\" autoComplete=\"off\" onSubmit={handelFormSubmission}>\r\n            <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\r\n                Fetch Data From Leadsquare \r\n                <Typography variant=\"caption\" display=\"inline-block\">\r\n                    &nbsp;(optional)\r\n                </Typography>\r\n            </Typography>\r\n            <div className={styles.inputGroup}>\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    exclusive\r\n                    value={fetchBy}\r\n                    onChange={(_, newFetchBy) => setFetchBy(newFetchBy)}\r\n                >\r\n                <ToggleButton value=\"phone\">Phone</ToggleButton>\r\n                <ToggleButton value=\"emailaddress\">Email</ToggleButton>\r\n                <ToggleButton value=\"id\">Leadsquare Id</ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </div>\r\n\r\n            <div className={styles.inputGroup} style={{ marginTop: 16 }}>\r\n                <TextField\r\n                    className={styles.input}\r\n                    label=\"User Info\"\r\n                    name=\"userInfo\"\r\n                    required\r\n                />\r\n\r\n                <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\r\n                    <Tooltip title=\"Sync Data\">\r\n                        <IconButton type=\"submit\" sx={{ bgcolor: '#5c5c5c14' }}  size='large'>\r\n                            <CloudSyncIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </span>\r\n            </div>\r\n\r\n            {\r\n                userData.showIterator && (\r\n                    <>\r\n                        <Typography variant=\"body2\" component=\"p\" textAlign=\"center\" color=\"tomato\"  sx={{ marginY: 2 }}>\r\n                            Multiple user records were discovered! Use the buttons below to navigate the data and find the relevant information.\r\n                        </Typography>\r\n                        <div className={`${styles.inputGroup} ${styles.fetchedDataIterator}`}>\r\n\r\n                            <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\r\n                                <Tooltip title=\"View Previous Data\">\r\n                                    <IconButton size='large' sx={{ bgcolor: '#5c5c5c14' }} onClick={e => handelDataIteration('PREV')} >\r\n                                        <ChevronLeftIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </span>\r\n\r\n                            <Typography variant=\"overline\" component=\"p\" textAlign=\"center\" display=\"inline\" sx={{ marginY: 2 }}>\r\n                                {userData.currentDataIndex + 1} of {userData.totalDataLength}  \r\n                            </Typography>\r\n\r\n                            <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\r\n                                <Tooltip title=\"View Next Data\">\r\n                                    <IconButton size='large' sx={{ bgcolor: '#5c5c5c14' }} onClick={e => handelDataIteration('NEXT')}>\r\n                                        <ChevronRightIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </span>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FetchDataFromLeadSquare;","// Functional Imports\r\nimport { useEffect, useState } from 'react';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\r\nimport isEmpty from '../../../utility/is-empty';\r\n\r\n// Components Imports\r\nimport { TextField, Autocomplete } from '@mui/material';\r\n\r\nfunction SourceInfoHandler(props){\r\n    const channelPartnerLabels = [\"cp\", \"c p\", \"channel partner\"];\r\n    const styles = props.styles;\r\n    const [sourceData, setSourceData] = useState({ sourceWithSubSource: [], currentSubSourceForSource: [] });\r\n    const dispatch = useDispatch();\r\n    const sendRequest = useHttpClientWithNavigate();\r\n    const [cpNameView, setCpNameViewState]  = useState(false);\r\n    const [channelPartnerData, setChannelPartnerData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            try {\r\n                const url = '/source/retrive-source-with-subsource';\r\n                const sourceData = await sendRequest({ url });\r\n                setSourceData(prev => ({ ...prev, sourceWithSubSource: sourceData }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Controlling Sub Source Field and Fethcing Channel Partner Information if cp is selected as source\r\n    useEffect(() => {\r\n        if(isEmpty(sourceData.sourceWithSubSource)) return;\r\n\r\n        if(isEmpty(props.userData?.source?.id)){\r\n            setSourceData(prev => ({ ...prev, currentSubSourceForSource: [] }))\r\n            return;\r\n        }\r\n\r\n        const source = sourceData.sourceWithSubSource.filter(source => source.id === props.userData.source.id);\r\n\r\n        // Fethcing channel partner information\r\n        if(channelPartnerLabels.includes(props.userData.source.label) && isEmpty(channelPartnerData)){\r\n            const channelPartnerUrl = '/channel-partner/view-all';\r\n            sendRequest({ url: channelPartnerUrl })\r\n            .then(responseData => {\r\n                const modifiedChannelPartner = responseData.map(cp => ({ ...cp, label: cp.name }))\r\n                setChannelPartnerData(modifiedChannelPartner);\r\n            })\r\n            .catch(err => {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\r\n            })\r\n        }\r\n\r\n        setSourceData(prev => ({ ...prev, currentSubSourceForSource: source[0]?.subsources || null }));\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.userData.source, sourceData.sourceWithSubSource])\r\n\r\n    useEffect(() => {\r\n        setCpNameViewState(channelPartnerLabels.includes(props.userData.source?.label?.toLowerCase()))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.userData.source])\r\n\r\n    function inputChangeHandler(key, value){\r\n        props.setUserData(prev => ({ ...prev, [key]: value }))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.inputGroup}>\r\n            <Autocomplete\r\n                className={styles.input}\r\n                disablePortal\r\n                options={sourceData.sourceWithSubSource.map(source => ({ id: source.id, label: source.label }))}\r\n                value={props.userData.source}\r\n                onChange={(_, val) => inputChangeHandler('source', val)}\r\n                isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                loadingText='Fetching source infromation'\r\n                renderInput={(params) => <TextField {...params} label=\"Source\" required />}\r\n            />\r\n            <Autocomplete\r\n                className={styles.input}\r\n                disablePortal\r\n                options={sourceData.currentSubSourceForSource}\r\n                value={props.userData.subSource}\r\n                onChange={(_, val) => inputChangeHandler('subSource', val)}\r\n                isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                noOptionsText = 'Select a source to fetch subsource information'\r\n                loadingText = 'Fetching subsource information'\r\n                renderInput={(params) => <TextField {...params} label=\"Sub Source\" />}\r\n            />\r\n            {\r\n                cpNameView && \r\n                <Autocomplete\r\n                    className={styles.input}\r\n                    disablePortal\r\n                    options={channelPartnerData}\r\n                    value={props.userData.channelpartner}\r\n                    onChange={(_, val) => inputChangeHandler('channelpartner', val)}\r\n                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                    renderInput={(params) => <TextField {...params} label=\"Channel Partner\" required />}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SourceInfoHandler;","// Functional Imports\r\nimport { useEffect, useState } from \"react\";\r\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport isEmpty from \"../../../utility/is-empty\";\r\n\r\n// Components Imports\r\nimport { Typography, TextField, Button, Divider, Autocomplete, styled, Alert } from '@mui/material';\r\nimport FetchDataFromLeadSquare from \"./FetchDataFromLeadsquare\";\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport FileIcon from '@mui/icons-material/InsertDriveFile';\r\nimport { LoaderSliceActions } from \"../../../store/loader-slice\";\r\nimport PopupModel from \"../../../componets/PopupModel/PopupModel\";\r\nimport SourceInfoHandler from \"./SourceInfoHandler\";\r\n\r\n// Styled Imports\r\nimport importedStyles from './CreateNew.module.css';\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst STYLES = cssNameSimplifier(importedStyles);\r\n\r\nfunction CreateNew(props) {\r\n    \r\n    const dispatch                          = useDispatch();\r\n    const sendRequest                       = useHttpClientWithNavigate();\r\n    const [projectState, setProjectState]   = useState({ projects: [], projectUnits: [] });\r\n    const [userData, setUserData]           = useState({ fullName: '', emailId: '', mobileNumber: '', project: '', projectUnit: '', source: '', subSource: '', channelPartner: '', priceSheet: {} });\r\n    \r\n    \r\n    useEffect(() => {\r\n        // Open is set to false do not make a callout\r\n        if(!(!!props.open)) return;\r\n\r\n        // fetching projects data\r\n        (async () => {\r\n            try {\r\n                const url = '/projects/list-all';\r\n                const projectsData = await sendRequest({ url });\r\n                setProjectState(prev => ({ ...prev, projects: projectsData.map(prj => ({ ...prj, label: prj.name })) }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.open]);\r\n\r\n    // Change in Project triggers a callout to fetch the related units of the selected project\r\n    useEffect(() => {\r\n        // fetching projects unit data\r\n        (async () => {\r\n            try {\r\n                if (!userData?.project?.id) return;\r\n\r\n                const url = `/projects/${userData.project.id}/fetch-units`;\r\n                const projectUnitsData = await sendRequest({ url });\r\n                setProjectState(prev => ({ \r\n                    ...prev, \r\n                    projectUnits: projectUnitsData.map(prjUnit => ({ \r\n                        ...prjUnit, \r\n                        // label: `${prjUnit.name} | ${prjUnit.type} | ${prjUnit.area}` \r\n                        label: prjUnit.name \r\n                    })) \r\n                }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects unit data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userData.project])\r\n\r\n    function projectChangeHandler(_, val) {\r\n        setUserData(prev => ({ ...prev, project: val, projectUnit: null }));\r\n        if (!val) setProjectState(prev => ({ ...prev, projectUnits: [] }))\r\n    }\r\n\r\n    function handelFetchedUserData(data){\r\n        const fullName          = ((!isEmpty(data.FirstName)? data.FirstName : '') + ' ' + \r\n                                    (!isEmpty(data.LastName)? data.LastName : '')).trim();\r\n\r\n        const emailId           = !isEmpty(data.EmailAddress)               ? data.EmailAddress : '';\r\n        const mobileNumber      = !isEmpty(data.Phone)                      ? data.Phone : '';\r\n        const project           = !isEmpty(data.mx_Project_Name)            ? data.mx_Project_Name : '';\r\n        const source            = !isEmpty(data.Source)                     ? data.Source : '';\r\n        const subSource         = !isEmpty(data.mx_Sub_Source)              ? data.mx_Sub_Source : '';\r\n        const channelPartner    = !isEmpty(data.mx_Channel_Partner_Name)    ? data.mx_Channel_Partner_Name : '';\r\n        const projectUnit       = '';\r\n        const priceSheet        = {};\r\n\r\n        setUserData({ fullName, emailId, mobileNumber, project, projectUnit, source, subSource, channelPartner, priceSheet });\r\n    }\r\n\r\n    function handelInputChange(event){\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        const type = event.target.type;\r\n\r\n        if(type === 'file'){\r\n            const file = event.target.files[0]\r\n            const type = file.type;\r\n            const fileName = file.name;\r\n\r\n            if (type !== 'application/pdf'){\r\n                return dispatch(AlertSliceActions.showAlert({ message: 'Only PDF file types are supported!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n\r\n            dispatch(LoaderSliceActions.setDisplayLoader({ from: 'PDF Loader', state: true }));\r\n                \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => { \r\n                const data = reader.result.split(',')[1]\r\n                setUserData(prev => ({ ...prev, priceSheet: { fileName, type, data } }))\r\n                dispatch(LoaderSliceActions.setDisplayLoader({ from: 'PDF Loader', state: false })); \r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        setUserData(prev => ({...prev, [name]: value}))\r\n    }\r\n\r\n    async function handelFormSubmission(event){\r\n        try{\r\n            event.preventDefault();\r\n            const url = props.baseURL + '/create-bookingform';\r\n            const method = 'POST';\r\n            const headers = { 'content-type': 'application/json' };\r\n            const body = JSON.stringify(userData);\r\n\r\n            const response = await sendRequest({url, method, headers, body});\r\n            \r\n            console.log(response);\r\n        } catch(err) {\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to create bookingform!', title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    function handelModelClose(event){\r\n        setUserData({ fullName: '', emailId: '', mobileNumber: '', project: '', projectUnit: '', source: '', subSource: '', channelPartner: '', priceSheet: '' })\r\n        props.onCloseEvent && props.onCloseEvent()\r\n    }\r\n\r\n    return (\r\n        <PopupModel \r\n            title=\"Create New Booking Form\" \r\n            open={props.open} \r\n            handelModelClose={handelModelClose}\r\n        >\r\n            <FetchDataFromLeadSquare baseURL={props.baseURL} styles={STYLES} handelFetchedUserData={handelFetchedUserData} />\r\n\r\n            <Divider variant='middle' sx={{ marginY: 2 }} />\r\n\r\n            <form autoComplete=\"false\" method=\"POST\" action=\"#\" onSubmit={handelFormSubmission}>\r\n                <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\r\n                    Personal Information\r\n                </Typography>\r\n\r\n                <div className={STYLES.inputGroup}>\r\n                    <TextField\r\n                        className={STYLES.input}\r\n                        label=\"Full Name\"\r\n                        name=\"fullName\"\r\n                        value={userData.fullName}\r\n                        onChange={handelInputChange}\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        className={STYLES.input}\r\n                        label=\"Email Id\"\r\n                        name=\"emailId\"\r\n                        value={userData.emailId}\r\n                        onChange={handelInputChange}\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        className={STYLES.input}\r\n                        label=\"Mobile Number\"\r\n                        name=\"mobileNumber\"\r\n                        value={userData.mobileNumber}\r\n                        onChange={handelInputChange}\r\n                    />\r\n                </div>\r\n\r\n                <Divider variant='middle' sx={{ marginY: 2 }} />\r\n\r\n                <div className={STYLES.inputContainer}>\r\n                    <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\r\n                        Project Information\r\n                    </Typography>\r\n\r\n                    <div className={STYLES.inputGroup}>\r\n                        <Autocomplete\r\n                            className={STYLES.input}\r\n                            disablePortal\r\n                            options={projectState.projects}\r\n                            value={userData.project}\r\n                            onChange={projectChangeHandler}\r\n                            isOptionEqualToValue={(opt, val) => opt.label === val}\r\n                            noOptionsText=\"Fetching Projects Data..\"\r\n                            renderInput={(params) => <TextField {...params} label=\"Projects\" required />}\r\n                        />\r\n\r\n                        <Autocomplete\r\n                            className={STYLES.input}\r\n                            disablePortal\r\n                            options={projectState.projectUnits}\r\n                            value={userData.projectUnit}\r\n                            onChange={(_, val) => setUserData(prev => ({ ...prev, projectUnit: val }))}\r\n                            isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                            noOptionsText=\"Please select a project to show its related units\"\r\n                            renderInput={(params) => <TextField {...params} label=\"Project Units\" required/>}\r\n                        />\r\n\r\n                        <Button\r\n                            component=\"label\"\r\n                            role={undefined}\r\n                            variant=\"outlined\"\r\n                            tabIndex={-1}\r\n                            startIcon={<CloudUploadIcon />}\r\n                        >\r\n                            Upload Price Sheet\r\n                            <VisuallyHiddenInput onChange={handelInputChange} type=\"file\" accept=\"application/pdf\" required/>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    userData.priceSheet?.data &&\r\n                    <div className={STYLES.inputContainer}>\r\n                        <Alert severity=\"info\" icon={<FileIcon />} sx={{ textAlign: 'center', margin: 'auto' }} className={STYLES.input} >\r\n                            File \"{userData.priceSheet?.fileName}\" has been selected!\r\n                        </Alert>\r\n                    </div>\r\n                }\r\n\r\n                <Divider variant='middle' sx={{ marginY: 2 }} />\r\n\r\n                <div className={STYLES.inputContainer}>\r\n                    <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\r\n                        Source Information\r\n                    </Typography>\r\n\r\n                    <SourceInfoHandler styles={STYLES} userData={userData} setUserData={setUserData} />\r\n                </div>\r\n\r\n                <Divider variant='middle' sx={{ marginY: 2 }} />\r\n\r\n                <div className={STYLES.inputGroup}>\r\n                    <Button variant=\"outlined\" onClick={handelModelClose}>Cancel</Button>\r\n                    <Button variant=\"contained\" type=\"submit\">Create</Button>\r\n                </div>\r\n            </form>\r\n        </PopupModel>\r\n    )\r\n}\r\n\r\nexport default CreateNew;","// extracted by mini-css-extract-plugin\nexport default {\"input-group\":\"CreateNew_input-group__W1fKb\",\"fetched-data-iterator\":\"CreateNew_fetched-data-iterator__3wWvV\",\"input\":\"CreateNew_input__EJurn\"};","// Functional Imports\r\nimport { useState, useEffect, useReducer, useRef } from \"react\";\r\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AlertSliceActions } from \"../../../store/alert-slice\";\r\nimport isEmpty from \"../../../utility/is-empty\";\r\nimport useTabAccessVerifier from \"../../../utility/tab-access-verifier\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HeaderSliceName } from \"../../../store/header-slice\";\r\n\r\n// Components Import\r\nimport { Tooltip, OutlinedInput, InputAdornment, Drawer, Box, Divider, Accordion, AccordionSummary, AccordionDetails } from \"@mui/material\";\r\nimport { ListItem, List, ListItemText, ListItemButton, Button, IconButton, Typography, Badge, ClickAwayListener } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n// import ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';    \r\nimport TableView from \"./TableView\";\r\nimport CreateNew from \"../CreateNew/CreateNew\";\r\n\r\n// Styles Import\r\nimport importStyles from './ViewAll.module.css';\r\n\r\nconst styles = cssNameSimplifier(importStyles);\r\n\r\n\r\nfunction View(props) {\r\n    const [searchState, setSearchState]     = useState(null);       // Handels showing and hiding of search box\r\n    const [filterDisplay, setFilterDisplay] = useState(false);      // Handels showing and hiding of filter data drawer \r\n    const [refreshState, setRefreshState]   = useState(0);          // Used to referesh TableView data by incrementing key value\r\n    const [filters, dispatchFilters]        = useReducer(           // Conatins filter data\r\n        reduceFilterDataProcess, { \r\n            search: null, \r\n            status: new Set(), \r\n            years: new Set(), \r\n            projects: new Set(), \r\n            submittedByUser: new Set(), \r\n            filterStatus: { displayBadge: false, filterApplied: true } \r\n        }\r\n    );\r\n    const [projectsList, setProjectlist]    = useState([]);                     // Contains user handeled projects             \r\n    const [filterParams]                    = useSearchParams();                // To access query params\r\n    const dispatch                          = useDispatch()                     // Redux-Dispatch\r\n    const sendRequest                       = useHttpClientWithNavigate();      // Used to send out a request\r\n    const searchBoxRef                      = useRef();                         // Used to focus search box on open\r\n    const [createNewView, setCreateNewView] = useState(false);\r\n    const [isAllowedToAccessTab]            = useTabAccessVerifier('view');\r\n    const navigate                          = useNavigate();\r\n    const headerSlice                       = useSelector(state => state[HeaderSliceName]);\r\n    const { isEditable }                    = headerSlice.appPermissions;\r\n\r\n    if(!isAllowedToAccessTab){\r\n        navigate('/error', { state: { status: 403, msg: 'Your not allowed to access \\'View\\' tab' } })\r\n    }\r\n\r\n    // Checking for filter params and fetching all the projects handled by user\r\n    useEffect(() => {\r\n        try{\r\n            (async () => {\r\n                const type              = 'INIT';\r\n                const status            = filterParams.get('status');\r\n                const years             = filterParams.get('years');\r\n                const projects          = filterParams.get('projects');\r\n                const submittedByUser   = filterParams.get('submittedByUser');\r\n\r\n                const responseData      = await sendRequest({ url: props.baseURL + '/user-handled-projects'});\r\n                setProjectlist(responseData);\r\n                \r\n                dispatchFilters({ type, status, years, projects, submittedByUser });\r\n            })()\r\n        }catch( err ){\r\n            dispatch( AlertSliceActions.showAlert({ message: 'Failed to fetch projects list!', title: 'Request Failed!', severity: 'error' }) )\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(filters.search === null) return;\r\n        const interval = setTimeout(applyFilter, 500);\r\n        return () => clearTimeout(interval); \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters.search])\r\n\r\n    function updateFilterCondition(filterType, value){\r\n        dispatchFilters({ type: 'PROCESS_FILTER', filterType, value })\r\n    }\r\n\r\n    function applyFilter(){\r\n        const urlWithfilters = composeFilterParams(filters);\r\n        dispatchFilters({ type: 'FILTER_APPLIED' });\r\n        window.history.pushState({}, '', urlWithfilters);\r\n        setRefreshState(prev => ++prev);\r\n    }\r\n\r\n    if( searchState ){\r\n        setTimeout(() => searchBoxRef.current.focus(), 100);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.viewContainer}>\r\n                <div className={styles.toolBar}>\r\n                    <div className={styles.left}>\r\n                        <ClickAwayListener onClickAway={ () => { if(searchState) setSearchState(prev => false) }}>\r\n                            <div className={styles.searchConatiner}>\r\n                                <span className={styles.icon} onClick={(e) => setSearchState(prev => !!!prev)}>\r\n                                    <IconButton>\r\n                                        {(searchState) ? \r\n                                            <CloseIcon /> : \r\n                                            <Badge variant=\"dot\" color=\"success\" invisible={isEmpty(filters.search)}>\r\n                                                <SearchIcon />\r\n                                            </Badge>\r\n                                        }\r\n                                    </IconButton>\r\n                                </span>\r\n                                <div className={`${styles.input} ${(searchState !== null) ? (searchState) ? styles.active : styles.notActive : ''}`}>\r\n                                    <OutlinedInput\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <Tooltip title='Search will be compared against Full Name, Mobile No, Email Id and Alternate Mobile No.'>\r\n                                                    <InfoOutlinedIcon fontSize=\"small\" />\r\n                                                </Tooltip>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        placeholder=\"Search\"\r\n                                        size=\"small\" \r\n                                        type=\"search\" \r\n                                        autoFocus={true}\r\n                                        inputRef={searchBoxRef}\r\n                                        onChange={e => updateFilterCondition('search', e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        </ClickAwayListener>\r\n                    </div>\r\n\r\n                    <div className={styles.right}>\r\n                        <span className={styles.icon}>\r\n                            <Tooltip title=\"Refresh\">\r\n                                <IconButton onClick={(e) => setRefreshState(prev => ++prev)}>\r\n                                    <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                        <span className={styles.icon}>\r\n                            <Tooltip title=\"Filters\">\r\n                                <IconButton onClick={(event) => setFilterDisplay(true)} >\r\n                                    <Badge variant=\"dot\" color={(filters.filterStatus.filterApplied)?'success':'warning'} invisible={!filters.filterStatus.displayBadge}>\r\n                                        <FilterAltIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                        <span className={styles.icon}>\r\n                            <Tooltip title=\"Download\">\r\n                                <IconButton disabled>\r\n                                    <DownloadIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                        {\r\n                            isEditable && \r\n                            <span className={styles.icon}>\r\n                                <Tooltip title=\"Create New\">\r\n                                    <IconButton onClick={e => setCreateNewView(true)}>\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <TableView baseURL={props.baseURL} key={refreshState} />\r\n            </div>\r\n\r\n            {/* Filter Menu / Drawer */}\r\n            <Drawer className={styles.drawer} anchor='right' open={filterDisplay} onClose={(e) => setFilterDisplay(false)} >\r\n                <main>\r\n                    <Box sx={{ width: 350 }} role=\"presentation\">\r\n                        <List className={styles.filtersList}>\r\n                            <ListItem>\r\n                                <h3>Filters</h3>\r\n                            </ListItem>\r\n\r\n                            <Divider variant=\"middle\" />\r\n\r\n                            <ListItem className={styles.filter}>\r\n                                <Accordion defaultExpanded>\r\n                                    <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                                        <Typography>Status</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <List\r\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 200, overflow: 'auto' }}\r\n                                            component=\"nav\"\r\n                                        >\r\n                                            {[\"Approved\", \"Rejected\", \"Pending\"].map(status => (\r\n                                                <ListItemButton key={status} onClick={e => updateFilterCondition('status', status)}>\r\n                                                    <ListItemText primary={status} />\r\n                                                    {filters.status?.has(status) && <CheckIcon />}\r\n                                                </ListItemButton>\r\n                                            ))}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </ListItem>\r\n\r\n                            <ListItem className={styles.filter}>\r\n                                <Accordion defaultExpanded={filters.years.size > 0}>\r\n                                    <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                                        <Typography>Years</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <List\r\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 400, overflow: 'auto' }}\r\n                                            component=\"nav\"\r\n                                        >\r\n                                            {[...Array(( new Date().getFullYear() + 1) - 1995)].map((_,index) => {\r\n                                                const year = new Date().getFullYear() - index;\r\n                                                return (\r\n                                                    <ListItemButton key={year} onClick={e => updateFilterCondition('years', `${year}`)}>\r\n                                                        <ListItemText primary={year} />\r\n                                                        {filters.years?.has(`${year}`) && <CheckIcon />}\r\n                                                    </ListItemButton>\r\n                                                )\r\n                                            })}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </ListItem>\r\n\r\n                            <ListItem className={styles.filter}>\r\n                                <Accordion disabled={projectsList.length <= 1} defaultExpanded={filters.projects.size > 1}>\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                    >\r\n                                        <Typography>Projects</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <List\r\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 350, overflow: 'auto' }}\r\n                                            component=\"nav\"\r\n                                        >\r\n                                            {projectsList.map(project => (\r\n                                                <ListItemButton key={project.id} disabled={projectsList.length <= 1}  onClick={e => updateFilterCondition('projects', project.id)} >\r\n                                                    <ListItemText primary={project.name} />\r\n                                                    {filters.projects?.has(project.id) && <CheckIcon />}\r\n                                                </ListItemButton>\r\n                                            ))}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </ListItem>\r\n\r\n                            <ListItem className={styles.filter}>\r\n                                <Accordion defaultExpanded={filters.submittedByUser.size > 0}>\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                    >\r\n                                        <Typography>Submitted By User</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <List\r\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 200, overflow: 'auto' }}\r\n                                            component=\"nav\"\r\n                                        >\r\n                                            {[{ key: \"Submitted\", value: 'true' }, { key: \"Not Submited\", value: 'false' }].map(submitted => (\r\n                                                <ListItemButton key={submitted.key} onClick={e => updateFilterCondition('submittedByUser', submitted.value )}>\r\n                                                    <ListItemText primary={submitted.key} />\r\n                                                    {filters.submittedByUser?.has(submitted.value) && <CheckIcon />}\r\n                                                </ListItemButton>\r\n                                            ))}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </ListItem>\r\n\r\n                        </List>\r\n                    </Box>\r\n                </main>\r\n\r\n                <footer>\r\n                    <Divider />\r\n                    <div className={styles.filterActions}>\r\n                        <Button variant=\"outlined\" onClick={e => dispatchFilters({type: 'RESET'})}>Reset</Button>\r\n                        <Button variant=\"contained\" onClick={applyFilter} disabled={filters.filterStatus.filterApplied}>Apply</Button>\r\n                    </div>\r\n                </footer>\r\n            </Drawer>\r\n\r\n            <CreateNew baseURL={props.baseURL} open={createNewView} onCloseEvent={e => setCreateNewView(false)} />\r\n\r\n            {/* Main Menu */}\r\n            {/* <StyledMenuList\r\n                anchorEl={uiFilterState.mainMenuAnchor}\r\n                open={Boolean(uiFilterState.mainMenuAnchor)}\r\n                onClose={e => dispatchUIFilterState({ type: 'CLOSE_ALL_MENU' })}\r\n            >\r\n                <MenuItem\r\n                    disableRipple\r\n                    onClick={(event) => dispatchUIFilterState({ type: 'STATUS_MENU_EVENT', event })}\r\n                >\r\n                    Status\r\n                    <ArrowRightIcon />\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} disableRipple>\r\n                    Year\r\n                    <ArrowRightIcon />\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} disableRipple>\r\n                    Project\r\n                    <ArrowRightIcon />\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} disableRipple>\r\n                    <Typography variant=\"inherit\" noWrap>\r\n                        Submitted By User\r\n                    </Typography>\r\n                    <ArrowRightIcon />\r\n                </MenuItem>\r\n            </StyledMenuList> */}\r\n\r\n            {/* Status Menu */}\r\n            {/* <StyledMenuList\r\n                anchorEl={uiFilterState.statusMenuAnchor}\r\n                open={Boolean(uiFilterState.statusMenuAnchor)}\r\n                onClose={e => dispatchUIFilterState({ type: 'CLOSE_ALL_MENU' })}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                <MenuItem>\r\n                    <CheckIcon />\r\n                    Approved\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <CheckIcon />\r\n                    Rejected\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <CheckIcon />\r\n                    Pending\r\n                </MenuItem>\r\n            </StyledMenuList> */}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction reduceFilterDataProcess(state, action){\r\n    const newState = {...state};\r\n\r\n    if(action.type === 'INIT'){\r\n        if(action.search){\r\n            newState.search = action.search.trim();\r\n        }\r\n\r\n        if(action.status){\r\n            newState.status = new Set(action.status.split(';').map(value => value.trim()));\r\n        }\r\n\r\n        if(action.years){\r\n            newState.years = new Set(action.years.split(';').map(value => value.trim()));\r\n        }\r\n\r\n        if(action.projects){\r\n            newState.projects = new Set(action.projects.split(';').map(value => value.trim()));\r\n        }\r\n\r\n        if(action.submittedByUser){\r\n            newState.submittedByUser = new Set(action.submittedByUser.split(';').map(value => value.trim()));\r\n        }\r\n    }\r\n\r\n    if(action.type === 'PROCESS_FILTER'){\r\n        if( action.filterType === 'search' ){\r\n            newState[action.filterType] = action.value\r\n        } else {\r\n            if( newState[action.filterType].has(action.value) ){\r\n                newState[action.filterType].delete(action.value);\r\n            } else {\r\n                newState[action.filterType].add(action.value);\r\n            }\r\n\r\n            newState.filterStatus.filterApplied = false;\r\n        }\r\n    }\r\n\r\n    if(action.type === 'RESET'){\r\n        return { \r\n            search: state.search, \r\n            status: new Set(),\r\n            years: new Set(), \r\n            projects: new Set(), \r\n            submittedByUser: new Set(), \r\n            filterStatus: { \r\n                displayBadge: false, \r\n                filterApplied: false \r\n            } \r\n        };\r\n    }\r\n\r\n    if(action.type === 'FILTER_APPLIED'){\r\n        newState.filterStatus.filterApplied = true;\r\n    }\r\n\r\n    newState.filterStatus.displayBadge = newState.status.size > 0 || newState.years.size > 0 || newState.projects.size > 0 || newState.submittedByUser.size > 0\r\n\r\n    return newState;\r\n}\r\n\r\nfunction composeFilterParams(filterData){\r\n    const currentURL = new URL(window.location);\r\n    const newURLWIthParams = new URL(currentURL.origin + currentURL.pathname);\r\n\r\n    Object.keys(filterData).forEach( filterName => {\r\n        if('filterStatus' === filterName) return;\r\n        if( filterData[filterName] === null || filterData[filterName].size <= 0 ) return;\r\n        if( 'search' === filterName && isEmpty( filterData[filterName] ) ) return;\r\n\r\n        const filterParam = ('search' === filterName)? filterData[filterName] : [...filterData[filterName]].join(';');\r\n\r\n        newURLWIthParams.searchParams.set(filterName, filterParam);\r\n    });\r\n\r\n    return newURLWIthParams;\r\n}\r\n\r\nexport default View;","export function openBase64NewTab(base64Pdf){\r\n    var blob = base64toBlob( base64Pdf );\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob ) {\r\n        window.navigator.msSaveOrOpenBlob(blob, \"pdfBase64.pdf\");\r\n    } else {\r\n        const blobUrl = URL.createObjectURL(blob);\r\n        window.open(blobUrl);\r\n    }\r\n}\r\n\r\nexport function base64toBlob(base64Data) {\r\n    const sliceSize = 1024;\r\n    const byteCharacters = atob(base64Data);\r\n    const bytesLength = byteCharacters.length;\r\n    const slicesCount = Math.ceil(bytesLength / sliceSize);\r\n    const byteArrays = new Array(slicesCount);\r\n\r\n    for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\r\n        const begin = sliceIndex * sliceSize;\r\n        const end = Math.min(begin + sliceSize, bytesLength);\r\n        const bytes = new Array(end - begin);\r\n\r\n        for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\r\n            bytes[i] = byteCharacters[offset].charCodeAt(0);\r\n        }\r\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\r\n    }\r\n    return new Blob(byteArrays, { type: \"application/pdf\" });\r\n}","// Functional Imports\r\nimport { useEffect, useState } from \"react\";\r\nimport isEmpty from \"../../../utility/is-empty\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { HeaderSliceName } from \"../../../store/header-slice\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Component Imports\r\nimport { IconButton, MenuItem, Menu, styled, alpha, Modal, TextField, FormControlLabel, Button, Checkbox, Divider } from \"@mui/material\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditNoteIcon from '@mui/icons-material/EditNote';\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport PendingActionsIcon from '@mui/icons-material/PendingActions';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst StyledMenu = styled(\r\n    props => (\r\n    <Menu\r\n        elevation={0}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}\r\n        {...props}\r\n    />\r\n    ))(({ theme }) => ({\r\n        '& .MuiPaper-root': {\r\n            borderRadius: 6,\r\n            marginTop: theme.spacing(1),\r\n            minWidth: 180,\r\n            color:\r\n                theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n            boxShadow:\r\n                'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n            '& .MuiMenu-list': {\r\n                padding: '4px 0',\r\n            },\r\n            '& .MuiMenuItem-root': {\r\n                '& .MuiSvgIcon-root': {\r\n                    fontSize: 18,\r\n                    color: theme.palette.text.secondary,\r\n                    marginRight: theme.spacing(1.5),\r\n                },\r\n                '&:active': {\r\n                    backgroundColor: alpha(\r\n                        theme.palette.primary.main,\r\n                        theme.palette.action.selectedOpacity,\r\n                    ),\r\n                },\r\n            },\r\n        },\r\n})\r\n);\r\n\r\nfunction NoteHandlerComp(props){\r\n    const STYLES                                            = props.styles;\r\n    const { bookingFormId }                                 = useParams();  \r\n    const dispatch                                          = useDispatch();\r\n    const [notesState, setNotesState]                       = useState([]);\r\n    const [noteMenuAndModalState, setNoteMenuAndModalState] = useState({ menuAnchor: null, modalType: null });\r\n    const [noteUserInputState, setNoteUserInputState]       = useState({ id: '', note: '', requriesApproval: false });\r\n    const sendRequest                                       = useHttpClientWithNavigate();\r\n    const headerSlice                                       = useSelector(state => state[HeaderSliceName].appPermissions);\r\n    const { noteApprover }                                  = headerSlice;\r\n    const [isEditable, setIsEditableState]                  = useState(null);\r\n\r\n    useEffect(() => {\r\n        setNotesState(props.bookingFormData.notes);\r\n    }, [props.bookingFormData])\r\n\r\n    useEffect(() => {\r\n        setIsEditableState(props.isEditable)\r\n    }, [props.isEditable])\r\n\r\n    async function handelNoteProcessing(type){\r\n        try{\r\n            const url = props.baseURL + '/' + bookingFormId + '/note';\r\n            const method = 'POST';\r\n            const headers = {\"Content-Type\": \"application/json\"};\r\n    \r\n            if(type === 'NEW'){\r\n                const newURL = url + '?type=NEW';\r\n                const body = JSON.stringify({ \r\n                    note: noteUserInputState.note, \r\n                    requriesApproval: noteUserInputState.requriesApproval \r\n                });\r\n                \r\n                const response = await sendRequest({ url: newURL, method, body, headers });\r\n    \r\n                if(response.notes) setNotesState(response.notes)\r\n    \r\n                return dispatch( AlertSliceActions.showAlert({ message: 'Record created', title: 'Request Completed!', severity: 'success' }) )\r\n            }\r\n    \r\n            if(type === 'EDIT'){\r\n                const newURL = url + '?type=EDIT';\r\n                const body = JSON.stringify({ \r\n                    id: noteUserInputState.id,\r\n                    note: noteUserInputState.note, \r\n                    requriesApproval: noteUserInputState.requriesApproval \r\n                });\r\n                \r\n                const response = await sendRequest({ url: newURL, method, body, headers });\r\n    \r\n                if(response.notes) setNotesState(response.notes)\r\n    \r\n                return dispatch( AlertSliceActions.showAlert({ message: 'Record updated!', title: 'Request Completed!', severity: 'success' }) )\r\n            }\r\n    \r\n            if(type === 'DELETE'){\r\n                const newURL = url + '?type=DELETE';\r\n                const body = JSON.stringify({ id: noteUserInputState.id });\r\n                const response = await sendRequest({ url: newURL, body, method, headers });\r\n    \r\n                if(response.notes) setNotesState(response.notes)\r\n                return dispatch( AlertSliceActions.showAlert({ message: 'Record deleted!', title: 'Request Completed!', severity: 'success' }) )\r\n            }\r\n\r\n            if(type === 'NOTE_APPROVE' || type === 'NOTE_REJECT'){\r\n                const newURL = props.baseURL + '/' + bookingFormId + '/note-processing';\r\n                const status = (type === 'NOTE_APPROVE')? 'APPROVE' : 'REJECT';\r\n                const noteId = noteUserInputState.id;\r\n                const body = JSON.stringify({ noteId, status });\r\n                const headers = {\"Content-Type\": \"application/json\"};\r\n\r\n                const response = await sendRequest({ url: newURL, body, method, headers });\r\n                \r\n                if(response.notes) setNotesState(response.notes)\r\n                return dispatch( AlertSliceActions.showAlert({ message: response.msg || 'Record processed!', title: 'Request Completed!', severity: 'success' }) )\r\n            }\r\n    \r\n            dispatch( AlertSliceActions.showAlert({ message: 'Type mismatch', title: 'Request Failed!', severity: 'warning' }) )\r\n        } catch ( err ){\r\n            dispatch( AlertSliceActions.showAlert({ message: err.msg ?? `Failed to process request`, title: 'Request Failed!', severity: 'error' }) )\r\n        }\r\n    }\r\n    \r\n    function handelNoteMenuAndModal({type, id, event}){\r\n        if(type === 'MENU_OPEN'){\r\n            const note = notesState.filter(note => note.id === id)[0];\r\n\r\n            if(!note) return alert('Failed to find note');\r\n\r\n            setNoteMenuAndModalState({ menuAnchor: event.currentTarget, modalType: null });\r\n            setNoteUserInputState({ id: note.id, note: note.note, requriesApproval: !!note.approval });\r\n        }\r\n        \r\n        if(type === 'MODAL_OPEN_IN_EDIT'){\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: 'EDIT' });\r\n        }\r\n        \r\n        if(type === 'MODAL_OPEN_IN_NEW'){\r\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: 'NEW' });\r\n        }\r\n\r\n        if(type === 'CLOSE'){\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\r\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\r\n        }\r\n\r\n        if(type === 'PROCESS_SUBMISSION'){\r\n            handelNoteProcessing(noteMenuAndModalState.modalType);\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\r\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\r\n        }\r\n\r\n        if(type === 'DELETE_RECORD'){\r\n            handelNoteProcessing('DELETE');\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\r\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\r\n        }\r\n\r\n        if(type === 'TRACK_NOTE_UPDATE'){\r\n            const name = event.target.name;\r\n            const value = (name === 'note')? event.target.value : event.target.checked;\r\n            setNoteUserInputState(prev => ({ ...prev, [name]: value }))\r\n        }\r\n\r\n        if(type === 'NOTE_APPROVE' || type === 'NOTE_REJECT'){\r\n            handelNoteProcessing(type);\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`${STYLES.container} ${STYLES.bfNotes}`}>\r\n                <section>\r\n                    <div className={STYLES.headerInformation}>\r\n                        <p>\r\n                            <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                <DoubleArrowIcon />\r\n                            </IconButton>\r\n                            Notes\r\n                        </p>\r\n                    </div>\r\n                    <div className={STYLES.data} style={{ justifyContent: \"flex-start\" }}>\r\n                        {\r\n                            isEmpty(notesState) && <p style={{ textAlign: 'center', width: '100%' }}>No notes found!</p>\r\n                        }\r\n                        { \r\n                            !isEmpty(notesState) && \r\n                            notesState.map( (note, index) => (\r\n                                <div className={STYLES.noteContainer} key={note.id}>\r\n                                    <div>\r\n                                        {\r\n                                            index > 0 && \r\n                                            notesState[index-1].from !== note.from && // Checks if the previous note is the same user or not\r\n                                            <div className={STYLES.noteFrom}>\r\n                                                <h3>{note.from}</h3> \r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            index <= 0 && \r\n                                            <div className={STYLES.noteFrom}>\r\n                                                <h3>{note.from}</h3> \r\n                                            </div>\r\n                                        }\r\n                                        <div className={STYLES.note}>\r\n                                            {\r\n                                                note.approval &&\r\n                                                <div className={STYLES.approvalInfo}>\r\n                                                    { \r\n                                                        note.approval.status === null &&\r\n                                                        <>\r\n                                                            <PendingActionsIcon className={STYLES.icon} /> \r\n                                                            <p>\r\n                                                                Approval Pending\r\n                                                            </p>\r\n                                                        </>\r\n                                                    }\r\n                                                    { \r\n                                                        note.approval.status === true && \r\n                                                        <>\r\n                                                            <CheckCircleOutlineIcon className={STYLES.icon} /> \r\n                                                            <p>\r\n                                                                Approved By {note.approval.updatedBy}\r\n                                                            </p>\r\n                                                        </>\r\n                                                    }\r\n                                                    { \r\n                                                        note.approval.status === false && \r\n                                                        <>\r\n                                                            <HighlightOffIcon className={STYLES.icon} /> \r\n                                                            <p>\r\n                                                                Rejected By {note.approval.updatedBy}\r\n                                                            </p>\r\n                                                        </>\r\n                                                    }\r\n                                                </div>\r\n                                            }\r\n                                            <p>{note.note}</p>    \r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <IconButton onClick={event => handelNoteMenuAndModal({ type: 'MENU_OPEN', id: note.id, event })}>\r\n                                            <MoreVertIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n                        <StyledMenu\r\n                            id=\"notes-menu\"\r\n                            anchorEl={noteMenuAndModalState.menuAnchor}\r\n                            open={Boolean(noteMenuAndModalState.menuAnchor)}\r\n                            onClose={e => handelNoteMenuAndModal({ type: 'CLOSE' })}\r\n                        >\r\n                            {\r\n                                noteApprover && noteUserInputState.requriesApproval && [\r\n                                    (\r\n                                        <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'NOTE_APPROVE' })} key=\"MenuItem_Approve\">\r\n                                            <CheckCircleIcon />\r\n                                            Approve\r\n                                        </MenuItem>\r\n                                    ), (\r\n                                        <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'NOTE_REJECT' })} key=\"MenuItem_Reject\">\r\n                                            <CancelIcon />\r\n                                            Reject\r\n                                        </MenuItem>\r\n                                    ), (\r\n                                        <Divider  key=\"MenuItem_Divider\"/>\r\n                                    )\r\n                                ]\r\n                            }\r\n                            <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'MODAL_OPEN_IN_EDIT' })}>\r\n                                <EditNoteIcon />\r\n                                Edit\r\n                            </MenuItem>\r\n                            <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'DELETE_RECORD' })}>\r\n                                <DeleteIcon />\r\n                                Delete\r\n                            </MenuItem>\r\n                        </StyledMenu>\r\n                    </div> \r\n                    {\r\n                        isEditable && (\r\n                            <div className={STYLES.data} style={{ justifyContent: \"flex-end\"}}>\r\n                                <IconButton style={{ backgroundColor: '#90caf9'}} onClick={e => handelNoteMenuAndModal({ type: 'MODAL_OPEN_IN_NEW' })}>\r\n                                    <AddIcon sx={{ color: '#000', fontSize: 30 }} />\r\n                                </IconButton>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n\r\n            {/* Notes Modal */}\r\n            <Modal open={Boolean(noteMenuAndModalState.modalType)} keepMounted={false} onClose={e => handelNoteMenuAndModal({type: 'CLOSE'})} >\r\n                <div className={STYLES.container + ' ' + STYLES.modalNoteConatiner}>\r\n                    <CloseIcon className={STYLES.closeIcon} onClick={e => handelNoteMenuAndModal({ type: 'CLOSE'})} />\r\n\r\n                    <div className={STYLES.noteInputsContainer}>\r\n                        <TextField \r\n                            className={STYLES.noteTextField}\r\n                            label=\"Note\"\r\n                            placeholder=\"Add a note\"  \r\n                            name=\"note\"\r\n                            fullWidth\r\n                            multiline \r\n                            minRows={2}\r\n                            maxRows={20}\r\n                            disabled={!isEditable}\r\n                            value={noteUserInputState.note}\r\n                            required\r\n                            onChange={event => handelNoteMenuAndModal({ type: 'TRACK_NOTE_UPDATE', event })}\r\n                        />\r\n\r\n                        <FormControlLabel \r\n                            className={STYLES.inputContainer} \r\n                            control={<Checkbox />} \r\n                            label=\"Requires Approval?\" \r\n                            labelPlacement=\"start\"\r\n                            name=\"requriesApproval\"\r\n                            disabled={!isEditable} \r\n                            sx={{ justifyContent: 'flex-end' }}\r\n                            checked={noteUserInputState.requriesApproval}\r\n                            onChange={event => handelNoteMenuAndModal({ type: 'TRACK_NOTE_UPDATE', event })}\r\n                        />\r\n                        {\r\n                            isEditable && \r\n                            <div className={STYLES.noteActionsContainer}>\r\n                                <Button data-mode=\"MODAL\" data-type=\"CLOSE\" onClick={e => handelNoteMenuAndModal({ type: 'CLOSE'})}>Cancel</Button>\r\n                                <Button \r\n                                    variant=\"contained\"\r\n                                    onClick={e => handelNoteMenuAndModal({ type: 'PROCESS_SUBMISSION' })}\r\n                                >\r\n                                    {noteMenuAndModalState.modalType === 'EDIT'? 'Update' : 'Submit'}\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NoteHandlerComp;\r\nexport { StyledMenu };","// Functional Imports\r\nimport { useState } from \"react\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HeaderSliceName } from \"../../../store/header-slice\";\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Component Imports\r\nimport { Button, IconButton, Modal, TextField } from \"@mui/material\";\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\nimport SettingsBackupRestoreIcon from '@mui/icons-material/SettingsBackupRestore';\r\nimport DoNotDisturbAltIcon from '@mui/icons-material/DoNotDisturbAlt';\r\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\n// Styles Import\r\n\r\nfunction ApprovalsHandler(props){\r\n    const styles = props.styles;\r\n    const sendRequest = useHttpClientWithNavigate();\r\n    const [status, setStatus] = useState();\r\n    const [note, setNote] = useState();\r\n    const dispatch = useDispatch();\r\n    const { bookingFormId } = useParams();  \r\n    const headerSlice = useSelector(state => state[HeaderSliceName]);\r\n    const employeeRole = headerSlice.employee.role;\r\n\r\n    async function submitApprovals(statusReq){\r\n        closeModal();\r\n        try {\r\n            const url = props.baseURL + '/' + bookingFormId + '/bookingform-processing';\r\n            const method = 'POST';\r\n            const headers = { \"Content-Type\": \"application/json\" };\r\n            \r\n            if((statusReq === 'RE_PROCESS' || statusReq === 'REJECT') && !status) return setStatus(statusReq);\r\n\r\n            const body = JSON.stringify({ status: statusReq, note });\r\n\r\n            const response = await sendRequest({ url, method, headers, body });\r\n\r\n            props.setReloadComp(prev => !prev);\r\n            dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Request processed', title: 'Request Submitted', severity: 'success' }));\r\n        } catch (err) {\r\n            if(err.status === 412){\r\n                return dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to submit request!', title: 'Request Failed!', severity: 'warning', autoclose: false }))\r\n            }\r\n\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to submit request!', title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    function closeModal(){\r\n        setStatus();\r\n        setNote();\r\n    }\r\n\r\n    return (props.isApprover || props.isApprover === false) && (\r\n        <>\r\n            <div className={`${styles.container} ${styles.bfActions}`}>\r\n                <section>\r\n                    <div className={styles.headerInformation}>\r\n                        <p>\r\n                            <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                <DoubleArrowIcon />\r\n                            </IconButton>\r\n                            Form Actions\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.data}>\r\n                        {\r\n                            employeeRole !== 'Project Head' &&\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                endIcon={<SettingsBackupRestoreIcon />}\r\n                                disabled={!props.isApprover}\r\n                                onClick={e => submitApprovals(\"RE_PROCESS\")}\r\n                            >\r\n                                Re-Process\r\n                            </Button>\r\n                        }\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            endIcon={<DoNotDisturbAltIcon />}\r\n                            disabled={!props.isApprover}\r\n                            onClick={e => submitApprovals(\"REJECT\")}\r\n                        >\r\n                            Reject\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            endIcon={<TaskAltIcon />}\r\n                            disabled={!props.isApprover}\r\n                            onClick={e => submitApprovals(\"APPROVE\")}\r\n                        >\r\n                            Approve\r\n                        </Button>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n                        \r\n            {/* Notes Modal */}\r\n            <Modal open={Boolean(status)} keepMounted={false} onClose={closeModal} >\r\n                <div className={styles.container + ' ' + styles.modalNoteConatiner}>\r\n                    <CloseIcon className={styles.closeIcon} onClick={closeModal} />\r\n\r\n                    <div className={styles.noteInputsContainer}>\r\n                        <p>\r\n                            <strong>Would you like to add a note for {(status === 'RE_PROCESS')? 're-processing' : 'rejection'}?</strong>\r\n                        </p>\r\n                        <TextField \r\n                            className={styles.noteTextField}\r\n                            placeholder=\"Add a note\"  \r\n                            name=\"note\"\r\n                            value={note}\r\n                            fullWidth\r\n                            multiline \r\n                            minRows={2}\r\n                            maxRows={15}\r\n                            onChange={e => setNote(e.target.value)}\r\n                        />\r\n \r\n                        <div className={styles.noteActionsContainer}>\r\n                            <Button data-mode=\"MODAL\" data-type=\"CLOSE\" onClick={closeModal}>Cancel</Button>\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                onClick={e => submitApprovals(status)}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApprovalsHandler;","// Functional imports\r\n\r\n\r\n// Components imports\r\nimport { Divider } from \"@mui/material\";\r\n\r\n// Styles imports\r\n\r\n\r\nfunction HeaderView(props){\r\n    const styles = props.styles;\r\n    const indianRupeesFormater = new Intl.NumberFormat('en-IN', { currency: 'INR' });\r\n\r\n\r\n    return (\r\n        <div className={styles.container + ' ' + styles.quickViewConatiner}>\r\n            <div>\r\n                <h3>Project</h3>\r\n                <p>{props?.bookingFormData?.Project?.name}</p>\r\n            </div>\r\n            \r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>Project Unit</h3>\r\n                <p>{props?.bookingFormData?.ProjectUnit?.name}</p>\r\n            </div>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>Current Unit Price</h3>\r\n                <p style={{ textAlign: 'center' }}>\r\n                    {\r\n                        (props?.bookingFormData?.currentUnitPrice)?\r\n                            indianRupeesFormater.format(props.bookingFormData.currentUnitPrice) : '-----'\r\n                    }\r\n                </p>\r\n            </div>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>Discount (₹)</h3>\r\n                <p style={{ textAlign: 'center' }}>\r\n                    {\r\n                        (props?.bookingFormData?.discount)?\r\n                            indianRupeesFormater.format(props.bookingFormData.discount) : '-----'\r\n                    }\r\n                </p>\r\n            </div>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>After Discount (₹)</h3>\r\n                <p style={{ textAlign: 'center' }}>\r\n                    {\r\n                        (props?.bookingFormData?.currentUnitPrice && props?.bookingFormData?.discount)?\r\n                            indianRupeesFormater.format((props?.bookingFormData.currentUnitPrice - props?.bookingFormData.discount)) : '-----'\r\n                    }\r\n                </p>\r\n            </div>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>Realization Price</h3>\r\n                <p style={{textAlign: 'center'}}>\r\n                    {\r\n                        (props?.bookingFormData?.totalCost && props?.bookingFormData?.sqft)? \r\n                            indianRupeesFormater.format((props?.bookingFormData.totalCost / props?.bookingFormData.sqft)) : '-----'\r\n                    }\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderView;","// Functional imports\r\nimport { useState, useMemo } from \"react\";\r\n\r\n// Components Import\r\nimport PopupModel from \"../../../componets/PopupModel/PopupModel\";\r\nimport { Link, IconButton, Tooltip } from \"@mui/material\";\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\n// Style Imports\r\n\r\n\r\nfunction CreateUserShareableLink(props){\r\n    const [copyIconState, setCopyIconState] = useState({ icon: <ContentCopyIcon />, copy: true, title: 'Copy Link' });\r\n\r\n    const userBookingFormLink = useMemo(() => {\r\n        const url = new URL(window.location);\r\n        // return url.protocol + '//' + url.host + '/U/boooking-form/' + url.pathname.split('/')[2] + '/email-verify'\r\n        return 'http://localhost:3001?f=' + url.pathname.split('/')[2];\r\n    }, []);\r\n\r\n\r\n    function handelModelClose(){\r\n        props.handelModelClose && props.handelModelClose();\r\n    }\r\n\r\n    function copyLink(){\r\n        if(!copyIconState.copy) return;\r\n\r\n        navigator.clipboard.writeText(userBookingFormLink);\r\n        setCopyIconState({ icon: <DoneIcon />, copy: false, title: 'Copied!' });\r\n\r\n        const timeout = setTimeout(() => {\r\n            setCopyIconState({ icon: <ContentCopyIcon />, copy: true, title: 'Copy Link' });\r\n            clearTimeout(timeout)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <PopupModel title=\"Shareable URL\" handelModelClose={handelModelClose} open={props.open}>\r\n            <Link \r\n                sx={{ display: 'block', textAlign: 'center', marginY: 2 }} \r\n                target=\"_blank\" \r\n                rel=\"noreferrer\" \r\n                href={userBookingFormLink}\r\n            >\r\n                {userBookingFormLink}\r\n            </Link>\r\n        \r\n            <div style={{ maxWidth: 'fit-content', marginInline: 'auto' }}>\r\n                <Tooltip title={copyIconState.title} >\r\n                    <IconButton onClick={copyLink}>\r\n                        {copyIconState.icon}\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        </PopupModel>\r\n    )\r\n}\r\n\r\nexport default CreateUserShareableLink;","// Functional imports\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\r\nimport isEmpty from \"../../../utility/is-empty\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { HeaderSliceName } from \"../../../store/header-slice\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport moment from \"moment\";\r\nimport { openBase64NewTab } from \"./ViewHelper\";\r\n\r\n// Comonents importd\r\nimport {\r\n    IconButton, InputLabel, MenuItem, FormControl, Select, Button, Modal, TextField, FormControlLabel, Checkbox, Autocomplete, Tooltip, FormGroup\r\n} from \"@mui/material\";\r\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport PendingActionsIcon from '@mui/icons-material/PendingActions';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport CampaignIcon from '@mui/icons-material/Campaign';\r\nimport NoteHandlerComp, { StyledMenu } from \"./NoteHandlerComp\";\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport ApprovalsHandler from \"./ApprovalsHandler\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\r\nimport AddLinkIcon from '@mui/icons-material/AddLink';\r\nimport HeaderView from \"./HeaderView\";\r\n\r\n// Styles imports\r\nimport importStyles from './View.module.css';\r\nimport viewAllStyles from '../ViewAll/ViewAll.module.css';\r\nimport CreateUserShareableLink from \"./CreateUserShareableLink\";\r\n\r\nconst STYLES = cssNameSimplifier(importStyles);\r\nconst TOOLBAR_STYLES = cssNameSimplifier(viewAllStyles);\r\n\r\nconst GENDERS = [\"Male\", \"Female\", \"Other\"];\r\nconst NATIONALITIES = ['Indian', 'NRI'];\r\nconst MARITAL_STATUS = ['Single', 'Married'];\r\nconst PERMANENT_ADDRESS_TYPES = ['Same As Present Address', 'Different'];\r\nconst MODE_OF_PAYMENT = ['Self', 'Home Loan'];\r\nconst PAYMENT_TYPE = ['UPI', 'Cheque', 'Online Banking', 'Cash Payment'];\r\nconst CO_APPLICANT_OPTIONS = ['Yes', 'No'];\r\n\r\nconst VIEW_DATA = { \r\n    aadhar: { fileName: null, data: null }, \r\n    panCard: { fileName: null, data: null }, \r\n    applicant: { fileName: null, data: null }, \r\n    priceSheet: { fileName: null, data: null }, \r\n    coApplicant: { fileName: null, data: null }, \r\n    paymentConfirmation: { fileName: null, data: null }, \r\n};\r\n\r\nfunction View(props) {\r\n    const { bookingFormId } = useParams();\r\n    const dispatch          = useDispatch();\r\n    const modelImgRef       = useRef();\r\n    const sendRequest       = useHttpClientWithNavigate();\r\n    const navigate          = useNavigate();\r\n    \r\n    const [modalImageState, setModalImageState]         = useState({ imgSrc: '', imgAlt: '', type: '' });\r\n    const [projectState, setProjectState]               = useState({ projects: [], projectUnits: [] });\r\n    const [bookingFormData, setBookingFormData]         = useState(); // Used to store bookingform data e.g.. { error: 'Error Message' } || {..data}\r\n    const [reloadComp, setReloadComp]                   = useState(null);\r\n    const [priceSheetMenuState, setPriceSheetMenuState] = useState();\r\n    const [cpNameView, setCpNameViewState]              = useState(false);\r\n    const [genShareableLink, setGenShareableLinkState]  = useState(false);\r\n\r\n    \r\n    const headerSlice                                       = useSelector(state => state[HeaderSliceName]);\r\n    const {isEditable: editable, displayApprovalHistory}    = headerSlice.appPermissions;\r\n    const [isEditable, setIsEditableState]                  = useState(null);\r\n    const [sourceData, setSourceData]                       = useState({ sourceWithSubSource: [], currentSubSourceForSource: [] });\r\n    const [channelPartnerData, setChannelPartnerData]       = useState([]);\r\n    const channelPartnerLabels                              = [\"cp\", \"c p\", \"channel partner\"];\r\n    \r\n    const approverContainerJSX = [];\r\n\r\n    const proceessApprovals = useCallback((status) => {\r\n        let containerClassName = STYLES.information + ' ';\r\n        let iconToDisplay = <></>;\r\n\r\n        // eslint-disable-next-line default-case\r\n        switch (status) {\r\n            case true:\r\n                containerClassName += STYLES.approved;\r\n                iconToDisplay = <CheckCircleOutlineIcon className={STYLES.icon} />\r\n                break;\r\n\r\n            case false:\r\n                containerClassName += STYLES.rejected;\r\n                iconToDisplay = <HighlightOffIcon className={STYLES.icon} />\r\n                break;\r\n\r\n            case null:\r\n                containerClassName += STYLES.pending;\r\n                iconToDisplay = <PendingActionsIcon className={STYLES.icon} />\r\n                break;\r\n        }\r\n\r\n        return { containerClassName, iconToDisplay };\r\n    }, []);\r\n\r\n    if (bookingFormData?.approvals) {\r\n        const projectHeadStatus = proceessApprovals(bookingFormData.approvals.projectHead.status);\r\n        \r\n        const salesAndmarketingHeadStatus = proceessApprovals(\r\n            bookingFormData.approvals.projectHead.status === null || bookingFormData.approvals.projectHead.status ?\r\n                bookingFormData.approvals.salesAndMarketingHead.status :\r\n                false\r\n        );\r\n        \r\n        const projectDirectorStatus = proceessApprovals(\r\n            (bookingFormData.approvals.projectHead.status === null || bookingFormData.approvals.projectHead.status) &&\r\n                (bookingFormData.approvals.salesAndMarketingHead.status === null || bookingFormData.approvals.salesAndMarketingHead.status) ?\r\n                bookingFormData.approvals.projectDirector.status :\r\n                false\r\n        );\r\n\r\n        approverContainerJSX.push((\r\n            <div className={STYLES.approverContainer} key={1}>\r\n                <div className={projectHeadStatus.containerClassName}>\r\n                    {projectHeadStatus.iconToDisplay}\r\n                    <p>{bookingFormData.approvals.projectHead.displayMessage}</p>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        approverContainerJSX.push((\r\n            <div className={STYLES.approverContainer} key={2}>\r\n                <div className={salesAndmarketingHeadStatus.containerClassName}>\r\n                    {salesAndmarketingHeadStatus.iconToDisplay}\r\n                    <p>{bookingFormData.approvals.salesAndMarketingHead.displayMessage}</p>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        approverContainerJSX.push((\r\n            <div className={STYLES.approverContainer} key={3}>\r\n                <div className={STYLES.noAfterContent + ' ' + projectDirectorStatus.containerClassName}>\r\n                    {projectDirectorStatus.iconToDisplay}\r\n                    <p>{bookingFormData.approvals.projectDirector.displayMessage}</p>\r\n                </div>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    // To reload window\r\n    useEffect(() => {\r\n        if(!reloadComp) return;\r\n        window.location.reload()\r\n    }, [reloadComp])\r\n\r\n    // Initial Load\r\n    useEffect(() => {\r\n        // Fetching booking form data\r\n        (async () => {\r\n            try {\r\n                const url = props.baseURL + '/' + bookingFormId + '/view';\r\n                const timeout = 1; //In Secs\r\n\r\n                const data = await sendRequest({ url, timeout });\r\n\r\n                const dateValuesToFormat = ['coApp_dateOfBirth', 'dateOfBirth'];\r\n                const jsonStringToParse = ['presentAddress', 'permanentAddress', 'coApp_presentAddress', 'coApp_permanentAddress', 'officeAddress', 'notes', 'approvalHistory'];\r\n                const autoSelectFormating = ['Project', 'ProjectUnit'];\r\n\r\n                if (isEmpty(data)) throw Error('No Data Found');\r\n\r\n                Object.keys(data).forEach(key => {\r\n                    if (data[key] === null) {\r\n                        data[key] = (dateValuesToFormat.includes(key)) ? null : '';\r\n                        return;\r\n                    }\r\n\r\n                    if (jsonStringToParse.includes(key) && typeof data[key] !== 'object') {\r\n                        data[key] = JSON.parse(data[key])\r\n                        return\r\n                    }\r\n\r\n                    if (dateValuesToFormat.includes(key)) {\r\n                        data[key] = moment(data[key])\r\n                        return\r\n                    }\r\n\r\n                    if (autoSelectFormating.includes(key)) {\r\n                        data[key] = { ...data[key], label: data[key].name }\r\n                    }\r\n                });\r\n\r\n                VIEW_DATA.paymentConfirmation   = { fileName: null, data: null };\r\n                VIEW_DATA.aadhar                = { fileName: null, data: null };\r\n                VIEW_DATA.panCard               = { fileName: null, data: null };\r\n                VIEW_DATA.applicant             = { fileName: null, data: null };\r\n                VIEW_DATA.coApplicant           = { fileName: null, data: null };\r\n                VIEW_DATA.priceSheet            = { fileName: null, data: null };\r\n\r\n                setBookingFormData(data);\r\n                setCpNameViewState(channelPartnerLabels.includes((data?.source?.label)? data.source.label.toLowerCase() : ''))\r\n            } catch (error) {\r\n                setBookingFormData({ error });\r\n            }\r\n        })();\r\n\r\n        // fetching projects data\r\n        (async () => {\r\n            try {\r\n                const url = '/projects/list-all';\r\n                const projectsData = await sendRequest({ url, showLoader: false });\r\n                setProjectState(prev => ({ ...prev, projects: projectsData.map(prj => ({ ...prj, label: prj.name })) }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })();\r\n\r\n        // fetching source data\r\n        (async() => {\r\n            try {\r\n                const url = '/source/retrive-source-with-subsource';\r\n                const sourceData = await sendRequest({ url, showLoader: false });\r\n                setSourceData(prev => ({ ...prev, sourceWithSubSource: sourceData }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Change in Project triggers a callout to fetch the related units of the selected project\r\n    useEffect(() => {\r\n        // fetching projects unit data\r\n        (async () => {\r\n            try {\r\n                if (!bookingFormData?.Project?.id) return;\r\n\r\n                const url = `/projects/${bookingFormData?.Project.id}/fetch-units`;\r\n                const projectUnitsData = await sendRequest({ url });\r\n                setProjectState(prev => ({ ...prev, projectUnits: projectUnitsData.map(prjUnit => ({ ...prjUnit, label: prjUnit.name })) }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects unit data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })()\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [bookingFormData?.Project])\r\n\r\n    // Input disable controller : Disables user input if the bookingform is approved or if the user does not have the edit access\r\n    useEffect(() => {\r\n        if (bookingFormData?.status === undefined || (editable && bookingFormData.status === isEditable)) return;\r\n        setIsEditableState(editable && bookingFormData.status !== 'Approved');\r\n    }, [editable, bookingFormData?.status, isEditable])\r\n\r\n    // Controlling Sub Source Field and Fethcing Channel Partner Information if cp is selected as source\r\n    useEffect(() => {\r\n        if(isEmpty(sourceData.sourceWithSubSource)) return;\r\n\r\n        if(isEmpty(bookingFormData?.source?.id)){\r\n            setSourceData(prev => ({ ...prev, currentSubSourceForSource: [] }))\r\n            return;\r\n        }\r\n\r\n        const source = sourceData.sourceWithSubSource.filter(source => source.id === bookingFormData.source.id);\r\n\r\n        // Fethcing channel partner information\r\n        if(channelPartnerLabels.includes(bookingFormData.source.label) && isEmpty(channelPartnerData)){\r\n            const channelPartnerUrl = '/channel-partner/view-all';\r\n            sendRequest({ url: channelPartnerUrl })\r\n            .then(responseData => {\r\n                const modifiedChannelPartner = responseData.map(cp => ({ ...cp, label: cp.name }))\r\n                setChannelPartnerData(modifiedChannelPartner);\r\n            })\r\n            .catch(err => {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\r\n            })\r\n        }\r\n\r\n        setSourceData(prev => ({ ...prev, currentSubSourceForSource: source[0]?.subsources || null }));\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [bookingFormData?.source, sourceData.sourceWithSubSource])\r\n\r\n    // Used to fetch or display locally cached user uploaded documents\r\n    async function viewUploadedDocuments(event) {\r\n        const type = event.target.dataset.type;\r\n        const modalPayload = { imgSrc: '', imgAlt: '', type };\r\n\r\n        async function fetchData() {\r\n            try {\r\n                const url = props.baseURL + '/' + bookingFormId + '/retrieve-attachments?retrieve=' + type;\r\n                return await sendRequest({ url });\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? `Failed to fetch ${type}!`, title: 'Request Failed!', severity: 'error' }))\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (type === 'PAYMENT_COPY') {\r\n            if (isEmpty(VIEW_DATA.paymentConfirmation.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.paymentConfirmation.fileName = responsePayload.fileName;\r\n                VIEW_DATA.paymentConfirmation.data = responsePayload.PAYMENT_COPY;\r\n            }\r\n\r\n            if (VIEW_DATA.paymentConfirmation.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.paymentConfirmation.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.paymentConfirmation.data;\r\n            modalPayload.imgAlt = 'Payment Confirmation: ' + VIEW_DATA.paymentConfirmation.fileName;\r\n        }\r\n\r\n        if (type === 'AADHAR_COPY') {\r\n            if (isEmpty(VIEW_DATA.aadhar.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.aadhar.fileName = responsePayload.fileName;\r\n                VIEW_DATA.aadhar.data = responsePayload.AADHAR_COPY;\r\n            }\r\n\r\n            if (VIEW_DATA.aadhar.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.aadhar.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.aadhar.data;\r\n            modalPayload.imgAlt = 'Aadhar Card: ' + VIEW_DATA.aadhar.fileName;\r\n        }\r\n\r\n        if (type === 'PAN_COPY') {\r\n            if (isEmpty(VIEW_DATA.panCard.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.panCard.fileName = responsePayload.fileName;\r\n                VIEW_DATA.panCard.data = responsePayload.PAN_COPY;\r\n            }\r\n\r\n            if (VIEW_DATA.panCard.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.panCard.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.panCard.data;\r\n            modalPayload.imgAlt = 'Pan Card: ' + VIEW_DATA.panCard.fileName;\r\n        }\r\n\r\n        if (type === 'PHOTO_OF_APPLICANT') {\r\n            if (isEmpty(VIEW_DATA.applicant.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.applicant.fileName = responsePayload.fileName;\r\n                VIEW_DATA.applicant.data = responsePayload.PHOTO_OF_APPLICANT;\r\n            }\r\n\r\n            if (VIEW_DATA.applicant.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.applicant.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.applicant.data;\r\n            modalPayload.imgAlt = 'Photo Of Applicant: ' + VIEW_DATA.applicant.fileName;\r\n        }\r\n\r\n        if (type === 'PHOTO_OF_CO_APPLICANT') {\r\n            if (isEmpty(VIEW_DATA.coApplicant.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.coApplicant.fileName = responsePayload.fileName;\r\n                VIEW_DATA.coApplicant.data = responsePayload.PHOTO_OF_CO_APPLICANT;\r\n            }\r\n\r\n            if (VIEW_DATA.coApplicant.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.coApplicant.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.coApplicant.data;\r\n            modalPayload.imgAlt = 'Photo Of Co-Applicant: ' + VIEW_DATA.coApplicant.fileName;\r\n        }\r\n\r\n        if (type === 'PRICE_SHEET') {\r\n                if (isEmpty(VIEW_DATA.priceSheet.data)) {\r\n                    const responsePayload = await fetchData();\r\n                    if (responsePayload === null) return;\r\n                    VIEW_DATA.priceSheet.fileName = responsePayload.fileName;\r\n                    VIEW_DATA.priceSheet.data = responsePayload.PRICE_SHEET;\r\n                }\r\n\r\n                setPriceSheetMenuState();\r\n                openBase64NewTab(VIEW_DATA.priceSheet.data);\r\n        }\r\n\r\n        setModalImageState(modalPayload);\r\n    }\r\n\r\n    function downloadCurrentlyViewingData(){\r\n        \r\n    }\r\n\r\n    // Submits the user form inputs\r\n    async function handelFormSubmission(event) {\r\n        try {\r\n            event.preventDefault();\r\n            const payload = { id: bookingFormId };\r\n\r\n            if(bookingFormData.dateOfBirth)         payload.dateOfBirth         = bookingFormData.dateOfBirth;\r\n            if(bookingFormData.coApp_dateOfBirth)   payload.coApp_dateOfBirth   = bookingFormData.coApp_dateOfBirth;\r\n            if(bookingFormData.Project)             payload.Project             = bookingFormData.Project;\r\n            if(bookingFormData.ProjectUnit)         payload.ProjectUnit         = bookingFormData.ProjectUnit;\r\n            if(bookingFormData.source)              payload.source              = bookingFormData.source;\r\n            if(bookingFormData.subsource)           payload.subsource           = bookingFormData.subsource;\r\n            if(bookingFormData.channelpartner)      payload.channelpartner      = bookingFormData.channelpartner;\r\n            if(bookingFormData.facing)              payload.facing              = bookingFormData.facing;\r\n\r\n            for (const el of event.target.elements) {\r\n                const type = el.type;\r\n                const name = el.name;\r\n                const value = el.value;\r\n\r\n                if (!['text', 'checkbox', 'number'].includes(type)) continue;\r\n\r\n                if (!name) continue;\r\n\r\n                if (name.includes('.')) {\r\n                    const processedName = name.split('.');\r\n                    if (!payload[processedName[0]]) payload[processedName[0]] = {};\r\n                    payload[processedName[0]][processedName[1]] = value;\r\n                    continue;\r\n                }\r\n\r\n                payload[name] = (type === 'checkbox') ? el.checked : value;\r\n            }\r\n\r\n            const url = props.baseURL + '/' + bookingFormId + '/update';\r\n            const method = 'POST';\r\n            const body = JSON.stringify(payload);\r\n            const headers = { \"Content-Type\": \"application/json\" };\r\n\r\n            const response = await sendRequest({ url, method, body, headers });\r\n\r\n            dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Record updated!', title: 'Request Completed!', severity: 'success' }))\r\n\r\n            // setReloadComp(prev => !prev);\r\n        } catch (err) {\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? `Failed to update record`, title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    function handelPriceSheetFileSelection(event) {\r\n        const from = event.target.dataset.from;\r\n\r\n        if (from === 'MENU_ITEM') {\r\n            const inputElement = document.createElement('input');\r\n            inputElement.style.display = 'none';\r\n            inputElement.type = 'file';\r\n            inputElement.accept = 'application/pdf';\r\n            inputElement.dataset['from'] = 'INPUT_ELEM';\r\n            const teardown = () => {\r\n                document.body.removeEventListener('focus', teardown, true);\r\n                setTimeout(() => {\r\n                    document.body.removeChild(inputElement);\r\n                }, 1000);\r\n            }\r\n            document.body.addEventListener('focus', teardown, true);\r\n            document.body.appendChild(inputElement);\r\n            inputElement.onchange = handelPriceSheetFileSelection;\r\n            inputElement.click();\r\n        }\r\n\r\n        if (from === 'INPUT_ELEM') {\r\n            const file = event.target.files[0]\r\n            const type = file.type;\r\n            const fileName = file.name;\r\n\r\n            if (type !== 'application/pdf')\r\n                return dispatch(AlertSliceActions.showAlert({ message: 'Only PDF file types are supported!', title: 'Request Failed!', severity: 'error' }))\r\n\r\n            if (!window.confirm(`Filename: ${fileName}\\nAre you sure that you want to upload this file?`)) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = async () => {\r\n                try {\r\n                    const url = props.baseURL + '/' + bookingFormId + '/upload-attachments?upload=PRICE_SHEET';\r\n                    const method = 'POST';\r\n                    const headers = { 'content-type': 'application/json' };\r\n                    const data = reader.result.split(',')[1];\r\n                    const body = JSON.stringify({ fileName, type, data });\r\n\r\n                    const response = await sendRequest({ url, method, body, headers });\r\n\r\n                    VIEW_DATA.priceSheet.fileName = fileName;\r\n                    VIEW_DATA.priceSheet.data = data;\r\n                    dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Document upload successfully', title: 'Request Completed!', severity: 'success' }));\r\n                    setPriceSheetMenuState();\r\n                } catch (error) {\r\n                    dispatch(AlertSliceActions.showAlert({ message: error.msg || 'Document upload failed', title: 'Request Failed!', severity: 'error' }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async function resetApprovalsForUnlockingBookingForm(){\r\n        try{\r\n            if(!window.confirm('All the approval\\'s progress will be lost. Would you like to proceed?')) return;\r\n\r\n            const url = props.baseURL + '/' + bookingFormId + '/reset-approvals-and-unlock-bookingform';\r\n            const method = 'POST';\r\n            const headers = { 'content-type': 'application/json' };\r\n\r\n            await sendRequest({ url, method, headers });\r\n\r\n            setReloadComp(prev => !prev);\r\n        } catch(err){\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg || 'Failed to process request', title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    function projectChangeHandler(_, val) {\r\n        setBookingFormData(prev => ({ ...prev, Project: val, ProjectUnit: null }));\r\n        if (!val) setProjectState(prev => ({ ...prev, projectUnits: [] }))\r\n    }\r\n\r\n    function sourceInputChangeHandler(_, val){        \r\n        const isCPSelected = channelPartnerLabels.includes(val.label.toLowerCase());\r\n        setCpNameViewState(isCPSelected);\r\n        setBookingFormData(prev => ({ \r\n            ...prev, \r\n            source: val, \r\n            subsource: null, \r\n            channelpartner: isCPSelected? prev.channelpartner : null\r\n        }))\r\n    }\r\n\r\n    function genShareableLinkPopupCtrl(event){\r\n        setGenShareableLinkState(Boolean(event?.target));\r\n    }\r\n\r\n    /* If error occured while fetcing the data rendering error msg instead of data view*/\r\n    if (bookingFormData?.error){\r\n        return (\r\n            <div className={STYLES.container}>\r\n                <h2 style={{ textAlign: 'center' }}>{bookingFormData.error.msg || `Failed to fetch booking form data from \"${bookingFormId}\"`}</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return bookingFormData && (\r\n        <>\r\n            <HeaderView styles={STYLES} bookingFormData={bookingFormData} />\r\n\r\n            <div className={STYLES.container}>\r\n                <div className={TOOLBAR_STYLES.toolBar}>\r\n                    <div className={TOOLBAR_STYLES.left} />\r\n\r\n                    <div className={TOOLBAR_STYLES.right}>\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"New shareable link\">\r\n                                <IconButton onClick={genShareableLinkPopupCtrl}>\r\n                                    <AddLinkIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Refresh\">\r\n                                <IconButton onClick={(e) => setReloadComp(prev => !prev)}>\r\n                                    <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Download\">\r\n                                <span>\r\n                                    <IconButton disabled>\r\n                                        <DownloadIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Re-Notify for approvals\">\r\n                                <span>\r\n                                    <IconButton disabled>\r\n                                        <CampaignIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Unlock Booking Form\">\r\n                                <span>\r\n                                    <IconButton disabled={bookingFormData.status === 'Pending'} onClick={resetApprovalsForUnlockingBookingForm}>\r\n                                        <LockOpenIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Soft Delete\">\r\n                                <span>\r\n                                    <IconButton disabled>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <main className={STYLES.bookingFormConainter}>\r\n                <form onSubmit={handelFormSubmission} onKeyDown={e => e.key === 'Enter' ? e.preventDefault() : ''}>\r\n                    <div className={`${STYLES.container} ${STYLES.bfData}`}>\r\n                        {/* Personal Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Personal Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Full Name\"\r\n                                    name=\"fullName\"\r\n                                    defaultValue={bookingFormData.fullName}\r\n                                    disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    required\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Email Id\"\r\n                                    name=\"emailId\"\r\n                                    defaultValue={bookingFormData.emailId}\r\n                                    disabled={!isEditable}\r\n                                // onChange={handelBookingFormDataChange}\r\n                                />\r\n\r\n                                <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                    <DatePicker\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Date Of Birth\"\r\n                                        defaultValue={bookingFormData.dateOfBirth}\r\n                                        name='dateOfBirth'\r\n                                        disabled={!isEditable}\r\n                                        disableFuture\r\n                                        onChange={date => setBookingFormData(prev => ({ ...prev, dateOfBirth: date }))}\r\n                                    />\r\n                                </LocalizationProvider>\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"Gender\">Gender</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"Gender\"\r\n                                        defaultValue={bookingFormData.gender}\r\n                                        name=\"gender\"\r\n                                        label=\"Gender\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    >\r\n                                        {GENDERS.map(gender => <MenuItem value={gender} key={`PI-${gender}`}>{gender}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"Nationality\">Nationality</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"Nationality\"\r\n                                        defaultValue={bookingFormData.nationality}\r\n                                        name=\"nationality\"\r\n                                        label=\"Nationality\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    >\r\n                                        {NATIONALITIES.map(nat => <MenuItem value={nat} key={`PI-${nat}`}>{nat}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Mobile Number\"\r\n                                    defaultValue={bookingFormData.mobileNumber}\r\n                                    name=\"mobileNumber\"\r\n                                    disabled={!isEditable}\r\n                                // onChange={handelBookingFormDataChange}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Alternate Mobile Number\"\r\n                                    defaultValue={bookingFormData.alternateMobileNumber}\r\n                                    name=\"alternateMobileNumber\"\r\n                                    disabled={!isEditable}\r\n                                // onChange={handelBookingFormDataChange}\r\n                                />\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"MaritalStatus\">Marital Status</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"MaritalStatus\"\r\n                                        label=\"MaritalStatus\"\r\n                                        defaultValue={bookingFormData.maritalStatus}\r\n                                        name=\"maritalStatus\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    >\r\n                                        {MARITAL_STATUS.map(ms => <MenuItem value={ms} key={`PI-${ms}`}>{ms}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"wantToAdd_CoApp\">Want to add Co Applicant?</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"wantToAdd_CoApp\"\r\n                                        label=\"PresentAddressType\"\r\n                                        defaultValue={bookingFormData.wantToAdd_CoApp}\r\n                                        name=\"wantToAdd_CoApp\"\r\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, wantToAdd_CoApp: e.target.value }))}\r\n                                    >\r\n                                        {CO_APPLICANT_OPTIONS.map(opt => <MenuItem value={opt} key={`PI-${opt}`}>{opt}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl className={STYLES.inputContainer} disabled>\r\n                                    <InputLabel id=\"PresentAddressType\" disabled>Present Address Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"PresentAddressType\"\r\n                                        label=\"PresentAddressType\"\r\n                                        defaultValue={bookingFormData.permanentAddressType}\r\n                                        name=\"permanentAddressType\"\r\n                                        disabled\r\n                                    >\r\n                                        {PERMANENT_ADDRESS_TYPES.map(type => <MenuItem value={type} key={`PI-${type}`}>{type}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={STYLES.data}>\r\n                                <div className={STYLES.addressMainContainer}>\r\n                                    <label>Present Address</label>\r\n                                    <div className={STYLES.addressContainer}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 1\"\r\n                                            defaultValue={bookingFormData.presentAddress?.addressLine1}\r\n                                            name=\"presentAddress.addressLine1\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 2\"\r\n                                            defaultValue={bookingFormData.presentAddress?.addressLine2}\r\n                                            name=\"presentAddress.addressLine2\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"City\"\r\n                                                defaultValue={bookingFormData.presentAddress?.city}\r\n                                                name=\"presentAddress.city\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"State\"\r\n                                                defaultValue={bookingFormData.presentAddress?.state}\r\n                                                name=\"presentAddress.state\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Country\"\r\n                                                defaultValue={bookingFormData.presentAddress?.country}\r\n                                                name=\"presentAddress.country\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Pincode\"\r\n                                                defaultValue={bookingFormData.presentAddress?.pincode}\r\n                                                name=\"presentAddress.pincode\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={STYLES.addressMainContainer}>\r\n                                    <label>Permanent Address</label>\r\n                                    <div className={STYLES.addressContainer}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 1\"\r\n                                            defaultValue={bookingFormData.permanentAddress?.addressLine1}\r\n                                            name=\"permanentAddress.addressLine1\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 2\"\r\n                                            defaultValue={bookingFormData.permanentAddress?.addressLine2}\r\n                                            name=\"permanentAddress.addressLine2\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"City\"\r\n                                                defaultValue={bookingFormData.permanentAddress?.city}\r\n                                                name=\"permanentAddress.city\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"State\"\r\n                                                defaultValue={bookingFormData.permanentAddress?.state}\r\n                                                name=\"permanentAddress.state\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Country\"\r\n                                                defaultValue={bookingFormData.permanentAddress?.country}\r\n                                                name=\"permanentAddress.country\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Pincode\"\r\n                                                defaultValue={bookingFormData.permanentAddress?.pincode}\r\n                                                name=\"permanentAddress.pincode\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Co-Applicant Information */}\r\n                        {\r\n                            bookingFormData.wantToAdd_CoApp === 'Yes' &&\r\n                            <section>\r\n                                <div className={STYLES.headerInformation}>\r\n                                    <p>\r\n                                        <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                            <DoubleArrowIcon />\r\n                                        </IconButton>\r\n                                        Co-Applicant Information\r\n                                    </p>\r\n                                </div>\r\n                                <div className={STYLES.data}>\r\n                                    <TextField\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Co-Applicant's Full Name\"\r\n                                        name=\"coApp_FullName\"\r\n                                        defaultValue={bookingFormData.coApp_FullName}\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Co-Applicant's Email Id\"\r\n                                        name=\"coApp_emailId\"\r\n                                        defaultValue={bookingFormData.coApp_emailId}\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    />\r\n\r\n                                    <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                        <DatePicker\r\n                                            className={STYLES.inputContainer}\r\n                                            label=\"Co-Applicant's Date Of Birth\"\r\n                                            defaultValue={bookingFormData.coApp_dateOfBirth}\r\n                                            name='coApp_dateOfBirth'\r\n                                            disabled={!isEditable}\r\n                                            disableFuture\r\n                                            onChange={date => setBookingFormData(prev => ({ ...prev, coApp_dateOfBirth: date }))}\r\n                                        />\r\n                                    </LocalizationProvider>\r\n\r\n                                    <FormControl className={STYLES.inputContainer}>\r\n                                        <InputLabel id=\"Co-Applicant's Gender\">Co-Applicant's Gender</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Co-Applicant's Gender\"\r\n                                            defaultValue={bookingFormData.coApp_gender}\r\n                                            name=\"coApp_gender\"\r\n                                            label=\"Co-Applicant's Gender\"\r\n                                            disabled={!isEditable}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        >\r\n                                            {GENDERS.map(gender => <MenuItem value={gender} key={`PI-${gender}`}>{gender}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={STYLES.inputContainer}>\r\n                                        <InputLabel id=\"Co-Applicant's Nationality\">Co-Applicant's Nationality</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Co-Applicant's Nationality\"\r\n                                            defaultValue={bookingFormData.coApp_nationality}\r\n                                            name=\"coApp_nationality\"\r\n                                            label=\"Co-Applicant's Nationality\"\r\n                                            disabled={!isEditable}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        >\r\n                                            {NATIONALITIES.map(nat => <MenuItem value={nat} key={`PI-${nat}`}>{nat}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <TextField\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Co-Applicant's Mobile Number\"\r\n                                        defaultValue={bookingFormData.coApp_mobileNumber}\r\n                                        name=\"coApp_mobileNumber\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Co-Applicant's Alternate Mobile Number\"\r\n                                        defaultValue={bookingFormData.coApp_alternateMobileNumber}\r\n                                        name=\"coApp_alternateMobileNumber\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    />\r\n\r\n                                    <FormControl className={STYLES.inputContainer}>\r\n                                        <InputLabel id=\"coApp_maritalStatus\">Co-Applicant's Marital Status</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"coApp_maritalStatus\"\r\n                                            label=\"Co-Applicant's Marital Status\"\r\n                                            defaultValue={bookingFormData.coApp_maritalStatus}\r\n                                            name=\"coApp_maritalStatus\"\r\n                                            disabled={!isEditable}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        >\r\n                                            {MARITAL_STATUS.map(ms => <MenuItem value={ms} key={`PI-${ms}`}>{ms}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={STYLES.inputContainer} disabled>\r\n                                        <InputLabel id=\"Co-Applicant's PresentAddressType\" disabled>Co-Applicant's PresentAddressType</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Co-Applicant's PresentAddressType\"\r\n                                            label=\"Co-Applicant's PresentAddressType\"\r\n                                            defaultValue={bookingFormData.coApp_permanentAddressType}\r\n                                            name=\"coApp_permanentAddressType\"\r\n                                            disabled\r\n                                        >\r\n                                            {PERMANENT_ADDRESS_TYPES.map(type => <MenuItem value={type} key={`PI-${type}`}>{type}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={STYLES.data}>\r\n                                    <div className={STYLES.addressMainContainer}>\r\n                                        <label>Co-Applicant's Present Address</label>\r\n                                        <div className={STYLES.addressContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Address Line 1\"\r\n                                                defaultValue={bookingFormData.coApp_presentAddress?.addressLine1}\r\n                                                name=\"coApp_presentAddress.addressLine1\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Address Line 2\"\r\n                                                defaultValue={bookingFormData.coApp_presentAddress?.addressLine2}\r\n                                                name=\"coApp_presentAddress.addressLine2\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <div className={STYLES.twoInputContainer}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"City\"\r\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.city}\r\n                                                    name=\"coApp_presentAddress.city\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"State\"\r\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.state}\r\n                                                    name=\"coApp_presentAddress.state\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                            </div>\r\n                                            <div className={STYLES.twoInputContainer}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Country\"\r\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.country}\r\n                                                    name=\"coApp_presentAddress.country\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Pincode\"\r\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.pincode}\r\n                                                    name=\"coApp_presentAddress.pincode\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={STYLES.addressMainContainer}>\r\n                                        <label>Co-Applicant's Permanent Address</label>\r\n                                        <div className={STYLES.addressContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Address Line 1\"\r\n                                                defaultValue={bookingFormData.coApp_permanentAddress?.addressLine1}\r\n                                                name=\"coApp_permanentAddress.addressLine1\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Address Line 2\"\r\n                                                defaultValue={bookingFormData.coApp_permanentAddress?.addressLine2}\r\n                                                name=\"coApp_permanentAddress.addressLine2\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <div className={STYLES.twoInputContainer}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"City\"\r\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.city}\r\n                                                    name=\"coApp_permanentAddress.city\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"State\"\r\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.state}\r\n                                                    name=\"coApp_permanentAddress.state\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                            </div>\r\n                                            <div className={STYLES.twoInputContainer}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Country\"\r\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.country}\r\n                                                    name=\"coApp_permanentAddress.country\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Pincode\"\r\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.pincode}\r\n                                                    name=\"coApp_permanentAddress.pincode\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        }\r\n\r\n                        {/* Project Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Project Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={projectState.projects}\r\n                                    value={bookingFormData.Project}\r\n                                    onChange={projectChangeHandler}\r\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                    noOptionsText=\"Fetching Projects Data..\"\r\n                                    renderInput={(params) => <TextField {...params} label=\"Projects\" required />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={projectState.projectUnits}\r\n                                    value={bookingFormData.ProjectUnit}\r\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, ProjectUnit: val }))}\r\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                    noOptionsText=\"Please select a project to show its related units\"\r\n                                    renderInput={(params) => <TextField {...params} label=\"Project Units\" required />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                            </div>\r\n                                \r\n                            <div className={STYLES.data}>\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Current Unit Price\"\r\n                                    name=\"currentUnitPrice\"\r\n                                    defaultValue={bookingFormData.currentUnitPrice}\r\n                                    type=\"number\"\r\n                                    disabled={!isEditable}\r\n                                    required\r\n                                />\r\n                            \r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Total cost\"\r\n                                    name=\"totalCost\"\r\n                                    defaultValue={bookingFormData.totalCost}\r\n                                    type=\"number\"\r\n                                    disabled={!isEditable}\r\n                                    required\r\n                                />\r\n                        \r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Land Area / BUA / SBA (Sft)\"\r\n                                    name=\"sqft\"\r\n                                    type=\"number\"\r\n                                    defaultValue={bookingFormData.sqft}\r\n                                    disabled={!isEditable}\r\n                                    required\r\n                                />\r\n\r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={['North', 'South', 'East', 'West']}\r\n                                    value={bookingFormData.facing}\r\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, facing: val }))}\r\n                                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Facing\" required />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={STYLES.data}>\r\n                                <FormGroup row sx={{ justifyContent: 'center', width: '50%', marginLeft: 15 }}>\r\n                                    <FormControlLabel\r\n                                        className={STYLES.inputContainer}\r\n                                        control={<Checkbox />}\r\n                                        label=\"Corner\"\r\n                                        labelPlacement=\"end\"\r\n                                        checked={bookingFormData.corner}\r\n                                        name=\"corner\"\r\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, corner: e.target.checked }))}\r\n                                        disabled={!isEditable}\r\n                                        // sx={{ width: 'auto'}}\r\n                                    />\r\n\r\n                                    {/* <Divider orientation=\"vertical\" flexItem /> */}\r\n\r\n                                    <FormControlLabel\r\n                                        className={STYLES.inputContainer}\r\n                                        control={<Checkbox />}\r\n                                        label=\"Park Facing\"\r\n                                        labelPlacement=\"end\"\r\n                                        checked={bookingFormData.parkFacing}\r\n                                        name=\"parkFacing\"\r\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, parkFacing: e.target.checked }))}\r\n                                        disabled={!isEditable}\r\n                                        // sx={{ width: 'auto', marginLeft: 1 }}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Payment Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Payment Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"ModeOfPayment\">Mode Of Payment</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"ModeOfPayment\"\r\n                                        label=\"ModeOfPayment\"\r\n                                        name=\"modeOfPayment\"\r\n                                        defaultValue={bookingFormData.modeOfPayment}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        disabled={!isEditable}\r\n                                    >\r\n                                        {MODE_OF_PAYMENT.map(mop => <MenuItem value={mop} key={mop}>{mop}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"PaymentType\">Payment Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"PaymentType\"\r\n                                        label=\"PaymentType\"\r\n                                        name=\"paymentType\"\r\n                                        defaultValue={bookingFormData.paymentType}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        disabled={!isEditable}\r\n                                    >\r\n                                        {PAYMENT_TYPE.map(pt => <MenuItem value={pt} key={pt}>{pt}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Booking Amount Paid\"\r\n                                    type=\"number\"\r\n                                    name=\"bookingAmountPaid\"\r\n                                    defaultValue={bookingFormData.bookingAmountPaid}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Discount In Rs (₹)\"\r\n                                    type=\"number\"\r\n                                    name=\"discount\"\r\n                                    defaultValue={bookingFormData.discount}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <Button variant=\"outlined\" data-type=\"PAYMENT_COPY\" onClick={viewUploadedDocuments}>View Payment Confirmation</Button>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={e => setPriceSheetMenuState(e.currentTarget)}\r\n                                    endIcon={<KeyboardArrowDownIcon />}\r\n                                >\r\n                                    Price Sheet\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <StyledMenu\r\n                                id=\"notes-menu\"\r\n                                anchorEl={priceSheetMenuState}\r\n                                open={Boolean(priceSheetMenuState)}\r\n                                onClose={e => setPriceSheetMenuState()}\r\n\r\n                            >\r\n                                <MenuItem data-type=\"PRICE_SHEET\" onClick={viewUploadedDocuments}>\r\n                                    <VisibilityIcon />\r\n                                    View\r\n                                </MenuItem>\r\n                                <MenuItem data-from=\"MENU_ITEM\" disabled={!isEditable} onClick={handelPriceSheetFileSelection}>\r\n                                    <FileUploadIcon />\r\n                                    Upload New\r\n                                </MenuItem>\r\n                            </StyledMenu>\r\n                        </section>\r\n\r\n                        {/* KYC Documents */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    KYC Documents\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Aadhar Number\"\r\n                                    name=\"aadharNumber\"\r\n                                    defaultValue={bookingFormData.aadharNumber}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"PAN Number\"\r\n                                    name=\"PANNumber\"\r\n                                    defaultValue={bookingFormData.PANNumber}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <Button variant=\"outlined\" data-type=\"AADHAR_COPY\" onClick={viewUploadedDocuments}>Photo Copy Of Aadhar</Button>\r\n                                <Button variant=\"outlined\" data-type=\"PAN_COPY\" onClick={viewUploadedDocuments}>Photo Copy Of PAN</Button>\r\n                                <Button variant=\"outlined\" data-type=\"PHOTO_OF_APPLICANT\" onClick={viewUploadedDocuments}>photo copy Of Applicant</Button>\r\n                                {\r\n                                    bookingFormData.wantToAdd_CoApp === 'Yes' &&\r\n                                    <Button variant=\"outlined\" data-type=\"PHOTO_OF_CO_APPLICANT\" onClick={viewUploadedDocuments}>photo copy Of co Applicant</Button>\r\n                                }\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Source / Channel Partner Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Source / Channel Partner Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={sourceData.sourceWithSubSource.map(source => ({ id: source.id, label: source.label }))}\r\n                                    value={bookingFormData.source}\r\n                                    onChange={sourceInputChangeHandler}\r\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                    loadingText='Fetching source infromation'\r\n                                    renderInput={(params) => <TextField {...params} label=\"Source\" required />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                                \r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={sourceData.currentSubSourceForSource}\r\n                                    value={bookingFormData.subsource}\r\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, subsource: val }))}\r\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Sub Source\" />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                                {\r\n                                    cpNameView && \r\n                                    <Autocomplete\r\n                                        className={STYLES.inputContainer}\r\n                                        disablePortal\r\n                                        options={channelPartnerData}\r\n                                        value={bookingFormData.channelpartner}\r\n                                        onChange={(_, val) => setBookingFormData(prev => ({ ...prev, channelpartner: val }))}\r\n                                        isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                        renderInput={(params) => <TextField {...params} label=\"Channel Partner\" required />}\r\n                                        disabled={!isEditable}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Professional Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Professional Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Company Name\"\r\n                                    defaultValue={bookingFormData.companyName}\r\n                                    name=\"companyName\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Profession\"\r\n                                    defaultValue={bookingFormData.profession}\r\n                                    name=\"profession\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Occupation\"\r\n                                    defaultValue={bookingFormData.occupation}\r\n                                    name=\"occupation\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Designation\"\r\n                                    defaultValue={bookingFormData.designation}\r\n                                    name=\"designation\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Industry\"\r\n                                    defaultValue={bookingFormData.industry}\r\n                                    name=\"industry\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Annual Income\"\r\n                                    defaultValue={bookingFormData.annualIncome}\r\n                                    name=\"annualIncome\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <div className={STYLES.addressMainContainer}>\r\n                                    <label>Office Address</label>\r\n                                    <div className={STYLES.addressContainer}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 1\"\r\n                                            defaultValue={bookingFormData.officeAddress?.addressLine1}\r\n                                            name=\"officeAddress.addressLine1\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 2\"\r\n                                            defaultValue={bookingFormData.officeAddress?.addressLine2}\r\n                                            name=\"officeAddress.addressLine2\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"City\"\r\n                                                defaultValue={bookingFormData.officeAddress?.city}\r\n                                                name=\"officeAddress.city\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"State\"\r\n                                                defaultValue={bookingFormData.officeAddress?.state}\r\n                                                name=\"officeAddress.state\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Country\"\r\n                                                defaultValue={bookingFormData.officeAddress?.country}\r\n                                                name=\"officeAddress.country\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Pincode\"\r\n                                                defaultValue={bookingFormData.officeAddress?.pincode}\r\n                                                name=\"officeAddress.pincode\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Other Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Other Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <FormControlLabel\r\n                                    className={STYLES.inputContainer}\r\n                                    control={<Checkbox />}\r\n                                    label=\"Submitted by user\"\r\n                                    labelPlacement=\"end\"\r\n                                    checked={bookingFormData.submittedByUser}\r\n                                    name=\"submittedByUser\"\r\n                                    onChange={e => setBookingFormData(prev => ({ ...prev, submittedByUser: e.target.checked }))}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <FormControlLabel\r\n                                    className={STYLES.inputContainer}\r\n                                    defaultValue={bookingFormData.agreedToTermsAndCondition}\r\n                                    control={<Checkbox />}\r\n                                    label=\"Agreed to terms & condition\"\r\n                                    disabled\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Purpose Of Purchase\"\r\n                                    name=\"purposeOfPurchase\"\r\n                                    defaultValue={bookingFormData.purposeOfPurchase}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField className={STYLES.inputContainer} label=\"Created By\" value={bookingFormData.BookingFormCreatedBy?.name} disabled />\r\n\r\n                                <TextField className={STYLES.inputContainer} label=\"Updated By\" value={bookingFormData.BookingFormUpdatedBy?.name} disabled />\r\n\r\n                                <TextField className={STYLES.inputContainer} label=\"Created At\" value={moment(bookingFormData.createdAt).format('DD/MM/YYYY HH:MM:SS A')} disabled />\r\n\r\n                                <TextField className={STYLES.inputContainer} label=\"Updated At\" value={moment(bookingFormData.updatedAt).format('DD/MM/YYYY HH:MM:SS A')} disabled />\r\n\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Save Information */}\r\n                        {\r\n                            isEditable && (\r\n                                <section>\r\n                                    <div className={STYLES.data}>\r\n                                        <Button variant=\"outlined\" onClick={e => navigate('..')}>Cancel</Button>\r\n                                        <Button variant=\"contained\" type=\"submit\">Save</Button>\r\n                                    </div>\r\n                                </section>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </form>\r\n\r\n                <aside>\r\n                    <div className={`${STYLES.container} ${STYLES.bfNotes}`}>\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Approvals\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                {approverContainerJSX}\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <NoteHandlerComp\r\n                        styles={STYLES}\r\n                        baseURL={props.baseURL}\r\n                        bookingFormData={bookingFormData}\r\n                        isEditable={isEditable}\r\n                    />\r\n\r\n                    <ApprovalsHandler  \r\n                        styles={STYLES}\r\n                        baseURL={props.baseURL}\r\n                        setReloadComp={setReloadComp}\r\n                        isApprover={bookingFormData.isApprover}\r\n                    />\r\n\r\n                    {\r\n                        !isEmpty(bookingFormData.approvalHistory) && displayApprovalHistory &&\r\n                        <div className={`${STYLES.container} ${STYLES.bfActions}`}>\r\n                            <section>\r\n                                <div className={STYLES.headerInformation}>\r\n                                    <p>\r\n                                        <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                            <DoubleArrowIcon />\r\n                                        </IconButton>\r\n                                        Approval History\r\n                                    </p>\r\n                                </div>\r\n                                <div className={STYLES.data} style={{ maxHeight: '40vh', overflow: 'auto' }}>\r\n                                    {\r\n                                        bookingFormData.approvalHistory.map(history => (\r\n                                            <div className={STYLES.approvalHistoryContainer} key={history.timestamp}>\r\n                                                <div>\r\n                                                    <div className={STYLES.note}>\r\n                                                        <p>\r\n                                                            {history.status + ' '}\r\n                                                            on \r\n                                                            {moment(history.timestamp).isValid(() => {})? moment(history.timestamp).utcOffset('+05:30').format(' DD/MM/YY [at] hh:mm A') : history.timestamp}\r\n                                                        </p>\r\n                                                            {(!isEmpty(history.note)) && <p><strong><em>Note</em> : </strong>{history.note}</p>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    }\r\n\r\n                </aside>\r\n            </main>\r\n\r\n            <CreateUserShareableLink open={genShareableLink} handelModelClose={genShareableLinkPopupCtrl}/>\r\n\r\n            {/* Image Modal */}\r\n            <Modal sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: 'rgba(0,0,0, .8)' }} open={Boolean(modalImageState.imgSrc)} onClose={() => setModalImageState({ imgSrc: '', imgAlt: '' })}>\r\n                <div>\r\n                    <DownloadIcon className={STYLES.downloadIcon} onClick={downloadCurrentlyViewingData} />\r\n                    <CloseIcon className={STYLES.closeIcon} onClick={() => setModalImageState({ imgSrc: '', imgAlt: '' })} />\r\n                    <img className={STYLES.imgViewer} ref={modelImgRef} src={'data:image/png;base64,' + modalImageState.imgSrc} alt={modalImageState.imgAlt} />\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View;\r\n\r\n\r\n\r\n// Email conf\r\n// Filtet\r\n// CP Conf\r\n// Id firld\r\n// payment\r\n// link exp\r\n// note with appr\r\n// send back\r\n// rec notifi\r\n\r\n// Source conf","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"View_container__sQgk9\",\"quick-view-conatiner\":\"View_quick-view-conatiner__45-CY\",\"booking-form-conainter\":\"View_booking-form-conainter__H0lTA\",\"bf-data\":\"View_bf-data__lQfgU\",\"bf-actions\":\"View_bf-actions__olGmT\",\"bf-notes\":\"View_bf-notes__ro1wl\",\"approval-history-container\":\"View_approval-history-container__3Zwp-\",\"note-container\":\"View_note-container__46qHo\",\"note-from\":\"View_note-from__OCOek\",\"note\":\"View_note__37jqP\",\"approval-info\":\"View_approval-info__cVPnW\",\"icon\":\"View_icon__nSRVe\",\"header-information\":\"View_header-information__23IvD\",\"data\":\"View_data__K17TZ\",\"address-main-container\":\"View_address-main-container__JDmxu\",\"input-container\":\"View_input-container__RqOjh\",\"approver-container\":\"View_approver-container__H+Lt2\",\"information\":\"View_information__xlilI\",\"rejected\":\"View_rejected__-zQ4j\",\"pending\":\"View_pending__atfyJ\",\"approved\":\"View_approved__k0V9v\",\"no-after-content\":\"View_no-after-content__Kag9e\",\"img-viewer\":\"View_img-viewer__0FG2C\",\"download-icon\":\"View_download-icon__ELeoh\",\"close-icon\":\"View_close-icon__sVMwx\",\"modal-note-conatiner\":\"View_modal-note-conatiner__bfoCJ\",\"note-inputs-container\":\"View_note-inputs-container__53sF9\",\"note-actions-container\":\"View_note-actions-container__PEmmn\",\"required\":\"View_required__obQNA\",\"address-container\":\"View_address-container__i7E2L\",\"two-input-container\":\"View_two-input-container__F5aH+\",\"wrong-input\":\"View_wrong-input__UFD2n\",\"disabled\":\"View_disabled__TMt2s\"};","// Functional Imports\r\nimport { useState, useMemo } from \"react\";\r\nimport { useRoutes, useNavigate, Navigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { HeaderSliceActions } from \"../store/header-slice\";\r\nimport { useEffect, lazy, Suspense } from \"react\";\r\nimport { useHttpClientWithNavigate } from \"../utility/http-hook\";\r\n\r\n// Component Imports\r\nimport Loading from \"../componets/Loading/Loading\";\r\nimport ViewAll from \"../Apps/BookingForm/ViewAll/ViewAll\";\r\nimport View from \"../Apps/BookingForm/View/View\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Components Imports (Lazy)\r\nconst Root = lazy(() => import(\"../Apps/BookingForm/Root\"))\r\n\r\nfunction BookingFormPages(){\r\n    const dispatcher            = useDispatch();\r\n    const sendRequest           = useHttpClientWithNavigate();\r\n    const navigate              = useNavigate();\r\n    const baseURL               = '/booking-form';\r\n    const [router, setRouter]   = useState([]);\r\n\r\n    const routes = useMemo(() => [\r\n        { \r\n            index: true, \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <Root baseURL={baseURL}/>,\r\n                </Suspense>\r\n            )\r\n        },\r\n        { \r\n            path: 'view', \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <ViewAll baseURL={baseURL}/> \r\n                </Suspense>\r\n            )\r\n        },    \r\n        { \r\n            path: '/:bookingFormId', \r\n            element: <RedirectToBookingFormView baseURL={baseURL}/> \r\n        },    \r\n        { \r\n            path: ':bookingFormId/view', \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <View baseURL={baseURL}/> \r\n                </Suspense>\r\n            )\r\n        },    \r\n        { \r\n            path: 'reports', \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <p>Will be added soon</p> \r\n                </Suspense>\r\n            )\r\n        },    \r\n        { \r\n            path: '*', \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <Navigate to='/error' state={{ statusText: 'Page Not Found!', status: 404 }} />\r\n                </Suspense>\r\n            )\r\n        }    \r\n    ], []);\r\n\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n            try{\r\n                const response = await sendRequest({ url: '/apps/booking-form/app-headers' });\r\n\r\n                if(!response) return\r\n            \r\n                dispatcher( HeaderSliceActions.setHeaders({ \r\n                    currentApp: 'Booking Form', \r\n                    appTabs: response.allowedtabs.map(tab => ({ ...tab, baseURL })),\r\n                    appPermissions: response.permissions\r\n                }) );\r\n\r\n                setRouter(routes);\r\n            } catch( err ){\r\n                navigate('/error', { state: { status: err.status, data: err.msg } });\r\n            }\r\n        })();\r\n        \r\n    }, [dispatcher, navigate, routes, sendRequest]);\r\n\r\n    ;\r\n    \r\n    return useRoutes(router);\r\n}\r\n\r\nfunction RedirectToBookingFormView(props){\r\n    const { bookingFormId } = useParams();\r\n    return <Navigate to={`${props.baseURL}/${bookingFormId}/view`}  replace={true} />\r\n}\r\n\r\nexport default BookingFormPages;","// Functional imports\r\nimport { HeaderSliceName } from \"../store/header-slice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/**\r\n * Checks whether the user is allowed to access the tab against the current headers \r\n * @param {String} tabEndpoint \r\n * @returns {[isAllowedToAccessTab: boolean, allowedTabs: [(Map<string, string>)]]}\r\n */\r\nfunction useTabAccessVerifier(tabEndpoint){\r\n    const allowedTabs = useSelector(state => state[HeaderSliceName]).appTabs;\r\n    const isAllowedToAccessTab = allowedTabs.filter(tab => tab.endpoint === tabEndpoint);\r\n\r\n    return [isAllowedToAccessTab.length > 0, allowedTabs];\r\n}\r\n\r\nexport default useTabAccessVerifier;"],"names":["STYLES","cssNameSimplifier","boxStyle","position","top","left","transform","width","bgcolor","border","boxShadow","maxHeight","p","props","useMediaQuery","_jsx","Modal","open","children","_jsxs","Box","sx","IconButton","className","closeIcon","onClick","handelModelClose","CloseIcon","title","_Fragment","Typography","variant","component","textAlign","Divider","marginY","childrenContainer","style","marginRight","styles","StyledTableCell","styled","TableCell","_ref","_ref2","theme","_defineProperty","concat","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","_ref3","action","hover","bookingFormDataReducer","state","type","loadMore","data","length","pop","isEmpty","_toConsumableArray","dispatch","useDispatch","sendRequest","useHttpClientWithNavigate","_useReducer","useReducer","_useReducer2","_slicedToArray","bookingFromState","dispatchBookingFormState","fetchBookingFormData","_fetchBookingFormData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","currentUrl","url","urlWithFilters","headers","bookingFormData","_err$msg","wrap","_context2","prev","next","URL","window","location","baseURL","search","sent","t0","AlertSliceActions","showAlert","message","msg","severity","stop","useEffect","_callee","_context","abrupt","tableContainer","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","map","row","index","dataRow","scope","Link","to","id","fullName","emailId","mobileNumber","Project","name","ProjectUnit","status","submittedByUser","CheckIcon","moment","createdAt","format","BookingFormCreatedBy","noDataFound","loadMoreContainer","Button","TOOLBAR_STYLES","viewAllStyles","userDataReducer","newState","JSON","parse","stringify","dataList","currentDataIndex","showIterator","totalDataLength","_useState","useState","_useState2","fetchBy","setFetchBy","userData","userDataDispatcher","_handelFormSubmission","event","userinfo","response","preventDefault","target","elements","userInfo","value","handelFetchedUserData","handelDataIteration","_x2","_handelDataIteration","method","autoComplete","onSubmit","_x","marginBottom","display","inputGroup","ToggleButtonGroup","exclusive","onChange","_","newFetchBy","ToggleButton","marginTop","TextField","input","label","required","icon","Tooltip","size","CloudSyncIcon","fetchedDataIterator","e","ChevronLeftIcon","ChevronRightIcon","channelPartnerLabels","sourceWithSubSource","currentSubSourceForSource","sourceData","setSourceData","_useState3","_useState4","cpNameView","setCpNameViewState","_useState5","_useState6","channelPartnerData","setChannelPartnerData","inputChangeHandler","key","setUserData","_objectSpread","_sourceData","_props$userData","_props$userData$sourc","source","filter","includes","then","responseData","modifiedChannelPartner","cp","catch","err","_err$msg2","_source$","subsources","_props$userData$sourc2","_props$userData$sourc3","toLowerCase","Autocomplete","disablePortal","options","val","isOptionEqualToValue","opt","loadingText","renderInput","params","subSource","noOptionsText","channelpartner","VisuallyHiddenInput","clip","clipPath","height","overflow","bottom","whiteSpace","_userData$priceSheet","_userData$priceSheet2","projects","projectUnits","projectState","setProjectState","project","projectUnit","channelPartner","priceSheet","handelInputChange","file","files","fileName","LoaderSliceActions","setDisplayLoader","from","reader","FileReader","readAsDataURL","onload","result","split","_callee3","_err$msg3","_context3","console","log","onCloseEvent","projectsData","prj","_userData$project","projectUnitsData","prjUnit","PopupModel","FetchDataFromLeadSquare","FirstName","LastName","trim","EmailAddress","Phone","mx_Project_Name","Source","mx_Sub_Source","mx_Channel_Partner_Name","inputContainer","role","undefined","tabIndex","startIcon","CloudUploadIcon","accept","Alert","FileIcon","margin","SourceInfoHandler","importStyles","reduceFilterDataProcess","Set","years","filterType","has","delete","add","filterStatus","filterApplied","displayBadge","searchState","setSearchState","filterDisplay","setFilterDisplay","refreshState","setRefreshState","filters","dispatchFilters","_useState7","_useState8","projectsList","setProjectlist","_useSearchParams","useSearchParams","filterParams","searchBoxRef","useRef","_useState9","_useState10","createNewView","setCreateNewView","_useTabAccessVerifier","useTabAccessVerifier","isAllowedToAccessTab","navigate","useNavigate","isEditable","useSelector","HeaderSliceName","appPermissions","updateFilterCondition","applyFilter","urlWithfilters","filterData","currentURL","newURLWIthParams","origin","pathname","Object","keys","forEach","filterName","filterParam","join","searchParams","set","composeFilterParams","history","pushState","get","interval","setTimeout","clearTimeout","current","focus","viewContainer","toolBar","ClickAwayListener","onClickAway","searchConatiner","Badge","invisible","SearchIcon","active","notActive","OutlinedInput","endAdornment","InputAdornment","InfoOutlinedIcon","placeholder","autoFocus","inputRef","right","RefreshIcon","FilterAltIcon","disabled","DownloadIcon","AddIcon","TableView","Drawer","drawer","anchor","onClose","List","filtersList","ListItem","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","_filters$status","ListItemButton","ListItemText","primary","Array","Date","getFullYear","_filters$years","year","_filters$projects","submitted","_filters$submittedByU","filterActions","CreateNew","openBase64NewTab","base64Pdf","blob","base64Data","sliceSize","byteCharacters","atob","bytesLength","slicesCount","Math","ceil","byteArrays","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","base64toBlob","navigator","msSaveOrOpenBlob","blobUrl","createObjectURL","StyledMenu","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","spacing","mode","grey","padding","text","secondary","alpha","main","selectedOpacity","bookingFormId","useParams","notesState","setNotesState","menuAnchor","modalType","noteMenuAndModalState","setNoteMenuAndModalState","note","requriesApproval","noteUserInputState","setNoteUserInputState","noteApprover","setIsEditableState","handelNoteProcessing","_handelNoteProcessing","newURL","_newURL","_body","_response","_newURL2","_body2","_response2","_newURL3","noteId","_body3","_headers","_response3","notes","handelNoteMenuAndModal","alert","currentTarget","approval","checked","container","bfNotes","headerInformation","disableFocusRipple","disableRipple","DoubleArrowIcon","justifyContent","noteContainer","noteFrom","approvalInfo","PendingActionsIcon","CheckCircleOutlineIcon","updatedBy","HighlightOffIcon","MoreVertIcon","anchorEl","Boolean","MenuItem","CheckCircleIcon","CancelIcon","EditNoteIcon","DeleteIcon","keepMounted","modalNoteConatiner","noteInputsContainer","noteTextField","fullWidth","multiline","minRows","maxRows","FormControlLabel","control","Checkbox","labelPlacement","noteActionsContainer","setStatus","setNote","employeeRole","employee","submitApprovals","_submitApprovals","statusReq","closeModal","setReloadComp","autoclose","isApprover","bfActions","endIcon","SettingsBackupRestoreIcon","DoNotDisturbAltIcon","TaskAltIcon","_props$bookingFormDat","_props$bookingFormDat2","_props$bookingFormDat3","_props$bookingFormDat4","_props$bookingFormDat5","_props$bookingFormDat6","_props$bookingFormDat7","_props$bookingFormDat8","_props$bookingFormDat9","_props$bookingFormDat10","indianRupeesFormater","Intl","NumberFormat","currency","quickViewConatiner","orientation","flexItem","currentUnitPrice","discount","totalCost","sqft","ContentCopyIcon","copy","copyIconState","setCopyIconState","userBookingFormLink","useMemo","rel","href","maxWidth","marginInline","clipboard","writeText","DoneIcon","timeout","GENDERS","NATIONALITIES","MARITAL_STATUS","PERMANENT_ADDRESS_TYPES","MODE_OF_PAYMENT","PAYMENT_TYPE","CO_APPLICANT_OPTIONS","VIEW_DATA","aadhar","panCard","applicant","coApplicant","paymentConfirmation","_bookingFormData$pres","_bookingFormData$pres2","_bookingFormData$pres3","_bookingFormData$pres4","_bookingFormData$pres5","_bookingFormData$pres6","_bookingFormData$perm","_bookingFormData$perm2","_bookingFormData$perm3","_bookingFormData$perm4","_bookingFormData$perm5","_bookingFormData$perm6","_bookingFormData$coAp","_bookingFormData$coAp2","_bookingFormData$coAp3","_bookingFormData$coAp4","_bookingFormData$coAp5","_bookingFormData$coAp6","_bookingFormData$coAp7","_bookingFormData$coAp8","_bookingFormData$coAp9","_bookingFormData$coAp10","_bookingFormData$coAp11","_bookingFormData$coAp12","_bookingFormData$offi","_bookingFormData$offi2","_bookingFormData$offi3","_bookingFormData$offi4","_bookingFormData$offi5","_bookingFormData$offi6","_bookingFormData$Book","_bookingFormData$Book2","modelImgRef","imgSrc","imgAlt","modalImageState","setModalImageState","setBookingFormData","reloadComp","priceSheetMenuState","setPriceSheetMenuState","_useState11","_useState12","_useState13","_useState14","genShareableLink","setGenShareableLinkState","_headerSlice$appPermi","editable","displayApprovalHistory","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","approverContainerJSX","proceessApprovals","useCallback","containerClassName","information","iconToDisplay","approved","rejected","pending","approvals","projectHeadStatus","projectHead","salesAndmarketingHeadStatus","salesAndMarketingHead","projectDirectorStatus","projectDirector","push","approverContainer","displayMessage","noAfterContent","viewUploadedDocuments","_viewUploadedDocuments","_callee7","modalPayload","fetchData","_fetchData","responsePayload","_responsePayload","_responsePayload2","_responsePayload3","_responsePayload4","_responsePayload5","_context7","_callee6","_err$msg5","_context6","dataset","PAYMENT_COPY","endsWith","AADHAR_COPY","PAN_COPY","PHOTO_OF_APPLICANT","PHOTO_OF_CO_APPLICANT","PRICE_SHEET","_callee8","payload","_iterator","_step","el","_type","processedName","_err$msg6","_context8","dateOfBirth","coApp_dateOfBirth","subsource","facing","_createForOfIteratorHelper","s","n","done","f","finish","t1","_resetApprovalsForUnlockingBookingForm","_callee9","_context9","confirm","genShareableLinkPopupCtrl","reload","_data$source","dateValuesToFormat","jsonStringToParse","autoSelectFormating","Error","error","showLoader","_callee4","_bookingFormData$Proj","_context4","_bookingFormData$sour","_err$msg4","HeaderView","AddLinkIcon","CampaignIcon","LockOpenIcon","bookingFormConainter","onKeyDown","bfData","defaultValue","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","disableFuture","date","FormControl","InputLabel","Select","labelId","gender","nationality","nat","alternateMobileNumber","maritalStatus","ms","wantToAdd_CoApp","permanentAddressType","addressMainContainer","addressContainer","presentAddress","addressLine1","addressLine2","twoInputContainer","city","country","pincode","permanentAddress","coApp_FullName","coApp_emailId","coApp_gender","coApp_nationality","coApp_mobileNumber","coApp_alternateMobileNumber","coApp_maritalStatus","coApp_permanentAddressType","coApp_presentAddress","coApp_permanentAddress","FormGroup","marginLeft","corner","parkFacing","modeOfPayment","mop","paymentType","pt","bookingAmountPaid","KeyboardArrowDownIcon","VisibilityIcon","handelPriceSheetFileSelection","inputElement","document","createElement","addEventListener","teardown","removeEventListener","removeChild","appendChild","onchange","click","_callee5","_context5","FileUploadIcon","aadharNumber","PANNumber","isCPSelected","companyName","profession","occupation","designation","industry","annualIncome","officeAddress","agreedToTermsAndCondition","purposeOfPurchase","BookingFormUpdatedBy","updatedAt","NoteHandlerComp","ApprovalsHandler","approvalHistory","approvalHistoryContainer","timestamp","isValid","utcOffset","CreateUserShareableLink","zIndex","downloadIcon","imgViewer","ref","src","alt","Root","lazy","RedirectToBookingFormView","Navigate","replace","dispatcher","router","setRouter","routes","element","Suspense","fallback","Loading","path","ViewAll","View","statusText","HeaderSliceActions","setHeaders","currentApp","appTabs","allowedtabs","tab","permissions","useRoutes","tabEndpoint","allowedTabs","endpoint"],"sourceRoot":""}
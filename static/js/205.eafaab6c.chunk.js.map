{"version":3,"file":"static/js/205.eafaab6c.chunk.js","mappings":"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","sources":["componets/PopupModel/PopupModel.js","webpack://my-admin/./src/componets/PopupModel/PopupModel.module.css?3bb1","Apps/BookingForm/ViewAll/TableView.js","webpack://my-admin/./src/Apps/BookingForm/ViewAll/TableView.module.css?dc62","webpack://my-admin/./src/Apps/BookingForm/ViewAll/ViewAll.module.css?18dd","Apps/BookingForm/CreateNew/FetchDataFromLeadsquare.js","Apps/BookingForm/CreateNew/SourceInfoHandler.js","Apps/BookingForm/CreateNew/CreateNew.js","webpack://my-admin/./src/Apps/BookingForm/CreateNew/CreateNew.module.css?ed40","Apps/BookingForm/ViewAll/ViewAll.js","Apps/BookingForm/View/ViewHelper.js","Apps/BookingForm/View/NoteHandlerComp.js","Apps/BookingForm/View/ApprovalsHandler.js","Apps/BookingForm/View/HeaderView.js","Apps/BookingForm/View/CreateUserShareableLink.js","Apps/BookingForm/View/View.js","webpack://my-admin/./src/Apps/BookingForm/View/View.module.css?6a72","pages/BookingFormPages.js","utility/tab-access-verifier.js"],"sourcesContent":["// Functional Imports\r\nimport cssNameSimplifier from \"../../utility/css-name-simplifier\";\r\n\r\n// Component Imports\r\nimport { Box, Modal, IconButton, useMediaQuery, Typography, Divider } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\n// Styled Imports\r\nimport importedStyles from './PopupModel.module.css';\r\n\r\nconst STYLES = cssNameSimplifier(importedStyles);\r\n\r\nconst boxStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '70vw',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    maxHeight: '85vh',\r\n    p: 4,\r\n};\r\n\r\n\r\nfunction PopupModel(props){\r\n    boxStyle.width  = useMediaQuery('(min-width:700px)')? '70vw' : '95vw';\r\n\r\n    return (\r\n        <Modal open={props.open}>\r\n            <Box sx={boxStyle} >\r\n                <IconButton className={STYLES.closeIcon} onClick={props?.handelModelClose}>\r\n                    <CloseIcon  />\r\n                </IconButton>\r\n\r\n                {\r\n                    props.title && (\r\n                        <>\r\n                            <Typography variant=\"h5\" component=\"h2\" textAlign=\"center\">\r\n                                <strong>\r\n                                    {props.title}\r\n                                </strong>\r\n                            </Typography>\r\n            \r\n                            <Divider variant='middle' sx={{ marginY: 2 }} />\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                <div className={STYLES.childrenContainer}>\r\n                    <div style={{ marginRight: 10 }}>\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default PopupModel;","// extracted by mini-css-extract-plugin\nexport default {\"close-icon\":\"PopupModel_close-icon__toNv0\",\"children-container\":\"PopupModel_children-container__fbG7T\"};","// Functional Imports\r\nimport { useReducer } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useEffect } from \"react\";\r\nimport cssNameSimplifier from '../../../utility/css-name-simplifier';\r\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { Link } from 'react-router-dom';\r\nimport isEmpty from '../../../utility/is-empty';\r\nimport moment from 'moment';\r\n\r\n\r\n// Component Imports\r\nimport { Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n\r\n// Style Imports\r\nimport importStyles from './TableView.module.css';\r\n\r\nconst styles = cssNameSimplifier(importStyles);\r\n\r\n// Table style config\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n\t[`&.${tableCellClasses.head}`]: {\r\n\t\tbackgroundColor: theme.palette.common.black,\r\n\t\tcolor: theme.palette.common.white,\r\n\t},\r\n\t[`&.${tableCellClasses.body}`]: {\r\n\t\tfontSize: 14,\r\n\t},\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n\t'&:nth-of-type(odd)': {\r\n\t\tbackgroundColor: theme.palette.action.hover,\r\n\t},\r\n\t// hide last border\r\n\t'&:last-child td, &:last-child th': {\r\n\t\tborder: 0,\r\n\t},\r\n}));\r\n\r\n// BookingForm Data Reducer Function\r\nfunction bookingFormDataReducer(state, action){\r\n    if(action.type === 'NEW_DATA'){\r\n        const loadMore = action.data.length > 100\r\n        if(loadMore) action.data.pop()\r\n        if(isEmpty(action.data)) return { data: [...state.data], loadMore: false }\r\n        return { data: [...state.data, ...action.data], loadMore }\r\n    }\r\n\r\n    if(action.type === 'RESET'){\r\n        return state//{ data: [], loadMore: false }\r\n    }\r\n}\r\n\r\nfunction TableView(props){\r\n    const dispatch = useDispatch();\r\n    const sendRequest = useHttpClientWithNavigate();\r\n    const [bookingFromState, dispatchBookingFormState] = useReducer(bookingFormDataReducer, { data: [], loadMore: false });\r\n\r\n    async function fetchBookingFormData(){\r\n        const currentUrl = new URL(window.location);\r\n        const url = props.baseURL + '/view';\r\n        const urlWithFilters = url + currentUrl.search;\r\n        const headers = {};\r\n\r\n        headers['total_count'] = bookingFromState.data.length;\r\n\r\n        try{\r\n            const bookingFormData = await sendRequest({ url: urlWithFilters, headers });\r\n            dispatchBookingFormState({ type: 'NEW_DATA', data: bookingFormData });\r\n        }catch( err ){\r\n            // navigate(url);\r\n            dispatch( AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch booking form data!', title: 'Request Failed!', severity: 'error' }) )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => await fetchBookingFormData() )();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.tableContainer}>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell align=\"left\">Index</StyledTableCell>\r\n                            <StyledTableCell>Full Name</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Mobile Number</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Project Name</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Project Unit Name</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Status</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Submitted</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Created Date Time</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Created By</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {bookingFromState.data.map((row, index) => (\r\n                            <StyledTableRow key={row.id} className={styles.dataRow}>\r\n                                <StyledTableCell align=\"center\">\r\n                                    {++index}\r\n                                </StyledTableCell>\r\n\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <Link to={`${props.baseURL}/${row.id}/view`}>{row.fullName}</Link>\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.emailId}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.mobileNumber}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.Project.name}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.ProjectUnit.name}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.status}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {row.submittedByUser && <CheckIcon />}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    {( moment(row.createdAt) !== 'Invalid Date') && moment(row.createdAt).format('DD/MM/YYYY HH:MM A')}\r\n                                </StyledTableCell>\r\n                                \r\n                                <StyledTableCell align=\"center\">\r\n                                    <Link to={`/profile/${row.BookingFormCreatedBy.id}/info`}> {row.BookingFormCreatedBy.name}</Link>\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                {isEmpty(bookingFromState.data) && <h3 className={styles.noDataFound}>No Data Found</h3>}\r\n\r\n            </TableContainer>\r\n\r\n            {\r\n                bookingFromState.loadMore && \r\n                <Paper className={styles.loadMoreContainer} onClick={fetchBookingFormData}>\r\n                    <Button variant=\"outlined\">Load More</Button>\r\n                </Paper>\r\n            }\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default TableView;","// extracted by mini-css-extract-plugin\nexport default {\"table-container\":\"TableView_table-container__ONbVZ\",\"no-data-found\":\"TableView_no-data-found__7KN7I\",\"load-more-container\":\"TableView_load-more-container__KRG5d\",\"data-row\":\"TableView_data-row__zXZ-n\"};","// extracted by mini-css-extract-plugin\nexport default {\"view-container\":\"ViewAll_view-container__yELjO\",\"tool-bar\":\"ViewAll_tool-bar__f3byj\",\"right\":\"ViewAll_right__W9W8t\",\"search-conatiner\":\"ViewAll_search-conatiner__e2jVS\",\"icon\":\"ViewAll_icon__KTlA1\",\"input\":\"ViewAll_input__qeJzf\",\"active\":\"ViewAll_active__0wmK5\",\"searchbar-animation-in\":\"ViewAll_searchbar-animation-in__fNwbe\",\"drawer\":\"ViewAll_drawer__a-noz\",\"filter-actions\":\"ViewAll_filter-actions__QMsjq\",\"filters-list\":\"ViewAll_filters-list__eK8NN\",\"filter\":\"ViewAll_filter__Caf+r\"};","// Functional Imports\r\nimport { useState, useReducer, useEffect } from 'react';\r\nimport isEmpty from '../../../utility/is-empty';\r\nimport cssNameSimplifier from '../../../utility/css-name-simplifier';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\n\r\n// Components Imports\r\nimport { Typography, TextField, IconButton, Tooltip, ToggleButtonGroup, ToggleButton } from '@mui/material';\r\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\n\r\n// Style Imports0\r\nimport viewAllStyles from '../ViewAll/ViewAll.module.css';\r\n\r\nconst TOOLBAR_STYLES = cssNameSimplifier(viewAllStyles);\r\n\r\nfunction userDataReducer(state, action){\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n\r\n    if(action.type === 'NEW'){\r\n        if(action.data.length > 1){\r\n            newState.dataList           = action.data;          \r\n            newState.currentDataIndex   = 0;\r\n            newState.showIterator       = true;    \r\n            newState.totalDataLength    = action.data.length; \r\n            return newState;\r\n        }\r\n\r\n        newState.dataList           = action.data;          \r\n        newState.currentDataIndex   = 0;\r\n        newState.showIterator       = false;    \r\n        newState.totalDataLength    = action.data.length; \r\n        return newState;\r\n    }\r\n\r\n    if(action.type === 'NEXT'){\r\n        if((newState.currentDataIndex + 1) >= newState.totalDataLength){\r\n            newState.currentDataIndex = 0;\r\n            return newState\r\n        }\r\n\r\n        ++newState.currentDataIndex;\r\n        return newState\r\n    }\r\n\r\n    if(action.type === 'PREV'){\r\n        if((newState.currentDataIndex - 1) < 0){\r\n            newState.currentDataIndex = newState.totalDataLength - 1;\r\n            return newState\r\n        }\r\n\r\n        --newState.currentDataIndex;\r\n        return newState\r\n    }\r\n}\r\n\r\nfunction FetchDataFromLeadSquare(props){\r\n    const styles                = props.styles;\r\n    const dispatch              = useDispatch();\r\n    const sendRequest           = useHttpClientWithNavigate();\r\n    const [fetchBy, setFetchBy] = useState('phone');\r\n    const [userData, userDataDispatcher] = useReducer(userDataReducer, { \r\n        dataList:           null, \r\n        currentDataIndex:   null, \r\n        showIterator:       false, \r\n        totalDataLength:    null \r\n    })\r\n\r\n    // Propogate leadsquare data to parent comp (CreateNew) on currentDataIndex change \r\n    useEffect(() => {\r\n        if(userData.currentDataIndex === null || userData.currentDataIndex === 0) return;\r\n        props.handelFetchedUserData(userData.dataList[userData.currentDataIndex]);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userData.currentDataIndex])\r\n\r\n\r\n    async function handelFormSubmission(event){\r\n        try{\r\n            event.preventDefault();\r\n            const userinfo = event.target.elements.userInfo.value;\r\n            const url = `${props.baseURL}/get-leadsquare-data?getby=${fetchBy}&userinfo=${userinfo}`;\r\n\r\n            if(isEmpty(userinfo)){\r\n                return dispatch(AlertSliceActions.showAlert({ message: 'User info cannot be empty', title: 'Invalid Request!', severity: 'warning' }))\r\n            } \r\n\r\n            const response = await sendRequest({url});\r\n\r\n            if(isEmpty(response)){\r\n                return dispatch(AlertSliceActions.showAlert({ message: '', title: 'No Records Found!', severity: 'error' }))\r\n            }\r\n\r\n            userDataDispatcher({ type: 'NEW', data: response })\r\n            props.handelFetchedUserData(response[0]);\r\n        } catch( err ){\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch user data!', title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    async function handelDataIteration(type){\r\n        userDataDispatcher({ type });\r\n    }\r\n\r\n    return (\r\n        <form action='#' method=\"POST\" autoComplete=\"off\" onSubmit={handelFormSubmission}>\r\n            <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\r\n                Fetch Data From Leadsquare \r\n                <Typography variant=\"caption\" display=\"inline-block\">\r\n                    &nbsp;(optional)\r\n                </Typography>\r\n            </Typography>\r\n            <div className={styles.inputGroup}>\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    exclusive\r\n                    value={fetchBy}\r\n                    onChange={(_, newFetchBy) => setFetchBy(newFetchBy)}\r\n                >\r\n                <ToggleButton value=\"phone\">Phone</ToggleButton>\r\n                <ToggleButton value=\"emailaddress\">Email</ToggleButton>\r\n                <ToggleButton value=\"id\">Leadsquare Id</ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </div>\r\n\r\n            <div className={styles.inputGroup} style={{ marginTop: 16 }}>\r\n                <TextField\r\n                    className={styles.input}\r\n                    label=\"User Info\"\r\n                    name=\"userInfo\"\r\n                    required\r\n                />\r\n\r\n                <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\r\n                    <Tooltip title=\"Sync Data\">\r\n                        <IconButton type=\"submit\" sx={{ bgcolor: '#5c5c5c14' }}  size='large'>\r\n                            <CloudSyncIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </span>\r\n            </div>\r\n\r\n            {\r\n                userData.showIterator && (\r\n                    <>\r\n                        <Typography variant=\"body2\" component=\"p\" textAlign=\"center\" color=\"tomato\"  sx={{ marginY: 2 }}>\r\n                            Multiple user records were discovered! Use the buttons below to navigate the data and find the relevant information.\r\n                        </Typography>\r\n                        <div className={`${styles.inputGroup} ${styles.fetchedDataIterator}`}>\r\n\r\n                            <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\r\n                                <Tooltip title=\"View Previous Data\">\r\n                                    <IconButton size='large' sx={{ bgcolor: '#5c5c5c14' }} onClick={e => handelDataIteration('PREV')} >\r\n                                        <ChevronLeftIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </span>\r\n\r\n                            <Typography variant=\"overline\" component=\"p\" textAlign=\"center\" display=\"inline\" sx={{ marginY: 2 }}>\r\n                                {userData.currentDataIndex + 1} of {userData.totalDataLength}  \r\n                            </Typography>\r\n\r\n                            <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\r\n                                <Tooltip title=\"View Next Data\">\r\n                                    <IconButton size='large' sx={{ bgcolor: '#5c5c5c14' }} onClick={e => handelDataIteration('NEXT')}>\r\n                                        <ChevronRightIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </span>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FetchDataFromLeadSquare;","// Functional Imports\r\nimport { useEffect, useState } from 'react';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\r\nimport isEmpty from '../../../utility/is-empty';\r\n\r\n// Components Imports\r\nimport { TextField, Autocomplete } from '@mui/material';\r\n\r\nfunction SourceInfoHandler(props){\r\n    const channelPartnerLabels = [\"cp\", \"c p\", \"channel partner\"];\r\n    const styles = props.styles;\r\n    const [sourceData, setSourceData] = useState({ sourceWithSubSource: [], currentSubSourceForSource: [] });\r\n    const dispatch = useDispatch();\r\n    const sendRequest = useHttpClientWithNavigate();\r\n    const [cpNameView, setCpNameViewState]  = useState(false);\r\n    const [channelPartnerData, setChannelPartnerData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            try {\r\n                const url = '/source/retrive-source-with-subsource';\r\n                const sourceData = await sendRequest({ url });\r\n                setSourceData(prev => ({ ...prev, sourceWithSubSource: sourceData }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Controlling Sub Source Field and Fethcing Channel Partner Information if cp is selected as source\r\n    useEffect(() => {\r\n        if(isEmpty(sourceData.sourceWithSubSource)) return;\r\n\r\n        if(isEmpty(props.userData?.source?.id)){\r\n            setSourceData(prev => ({ ...prev, currentSubSourceForSource: [] }))\r\n            return;\r\n        }\r\n\r\n        const source = sourceData.sourceWithSubSource.filter(source => source.id === props.userData.source.id);\r\n\r\n        // Fethcing channel partner information\r\n        if(channelPartnerLabels.includes(props.userData.source.label) && isEmpty(channelPartnerData)){\r\n            const channelPartnerUrl = '/channel-partner/view-all';\r\n            sendRequest({ url: channelPartnerUrl })\r\n            .then(responseData => {\r\n                const modifiedChannelPartner = responseData.map(cp => ({ ...cp, label: cp.name }))\r\n                setChannelPartnerData(modifiedChannelPartner);\r\n            })\r\n            .catch(err => {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\r\n            })\r\n        }\r\n\r\n        setSourceData(prev => ({ ...prev, currentSubSourceForSource: source[0]?.subsources || null }));\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.userData.source, sourceData.sourceWithSubSource])\r\n\r\n    useEffect(() => {\r\n        setCpNameViewState(channelPartnerLabels.includes(props.userData.source?.label?.toLowerCase()))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.userData.source])\r\n\r\n    function inputChangeHandler(key, value){\r\n        props.setUserData(prev => ({ ...prev, [key]: value }))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.inputGroup}>\r\n            <Autocomplete\r\n                className={styles.input}\r\n                disablePortal\r\n                options={sourceData.sourceWithSubSource.map(source => ({ id: source.id, label: source.label }))}\r\n                value={props.userData.source}\r\n                onChange={(_, val) => inputChangeHandler('source', val)}\r\n                isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                loadingText='Fetching source infromation'\r\n                renderInput={(params) => <TextField {...params} label=\"Source\" required />}\r\n            />\r\n            <Autocomplete\r\n                className={styles.input}\r\n                disablePortal\r\n                options={sourceData.currentSubSourceForSource}\r\n                value={props.userData.subSource}\r\n                onChange={(_, val) => inputChangeHandler('subSource', val)}\r\n                isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                noOptionsText = 'Select a source to fetch subsource information'\r\n                loadingText = 'Fetching subsource information'\r\n                renderInput={(params) => <TextField {...params} label=\"Sub Source\" />}\r\n            />\r\n            {\r\n                cpNameView && \r\n                <Autocomplete\r\n                    className={styles.input}\r\n                    disablePortal\r\n                    options={channelPartnerData}\r\n                    value={props.userData.channelpartner}\r\n                    onChange={(_, val) => inputChangeHandler('channelpartner', val)}\r\n                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                    renderInput={(params) => <TextField {...params} label=\"Channel Partner\" required />}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SourceInfoHandler;","// Functional Imports\r\nimport { useEffect, useState } from \"react\";\r\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport isEmpty from \"../../../utility/is-empty\";\r\n\r\n// Components Imports\r\nimport { Typography, TextField, Button, Divider, Autocomplete, styled, Alert } from '@mui/material';\r\nimport FetchDataFromLeadSquare from \"./FetchDataFromLeadsquare\";\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport FileIcon from '@mui/icons-material/InsertDriveFile';\r\nimport { LoaderSliceActions } from \"../../../store/loader-slice\";\r\nimport PopupModel from \"../../../componets/PopupModel/PopupModel\";\r\nimport SourceInfoHandler from \"./SourceInfoHandler\";\r\n\r\n// Styled Imports\r\nimport importedStyles from './CreateNew.module.css';\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst STYLES = cssNameSimplifier(importedStyles);\r\n\r\nfunction CreateNew(props) {\r\n    \r\n    const dispatch                          = useDispatch();\r\n    const sendRequest                       = useHttpClientWithNavigate();\r\n    const [projectState, setProjectState]   = useState({ projects: [], projectUnits: [] });\r\n    const [userData, setUserData]           = useState({ fullName: '', emailId: '', mobileNumber: '', project: '', projectUnit: '', source: '', subSource: '', channelPartner: '', priceSheet: {} });\r\n    \r\n    \r\n    useEffect(() => {\r\n        // Open is set to false do not make a callout\r\n        if(!(!!props.open)) return;\r\n\r\n        // fetching projects data\r\n        (async () => {\r\n            try {\r\n                const url = '/projects/list-all';\r\n                const projectsData = await sendRequest({ url });\r\n                setProjectState(prev => ({ ...prev, projects: projectsData.map(prj => ({ ...prj, label: prj.name })) }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.open]);\r\n\r\n    // Change in Project triggers a callout to fetch the related units of the selected project\r\n    useEffect(() => {\r\n        // fetching projects unit data\r\n        (async () => {\r\n            try {\r\n                if (!userData?.project?.id) return;\r\n\r\n                const url = `/projects/${userData.project.id}/fetch-units`;\r\n                const projectUnitsData = await sendRequest({ url });\r\n                setProjectState(prev => ({ \r\n                    ...prev, \r\n                    projectUnits: projectUnitsData.map(prjUnit => ({ \r\n                        ...prjUnit, \r\n                        // label: `${prjUnit.name} | ${prjUnit.type} | ${prjUnit.area}` \r\n                        label: prjUnit.name \r\n                    })) \r\n                }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects unit data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userData.project])\r\n\r\n    function projectChangeHandler(_, val) {\r\n        setUserData(prev => ({ ...prev, project: val, projectUnit: null }));\r\n        if (!val) setProjectState(prev => ({ ...prev, projectUnits: [] }))\r\n    }\r\n\r\n    function handelFetchedUserData(data){\r\n        const fullName          = ((!isEmpty(data.FirstName)? data.FirstName : '') + ' ' + \r\n                                    (!isEmpty(data.LastName)? data.LastName : '')).trim();\r\n\r\n        const emailId           = !isEmpty(data.EmailAddress)               ? data.EmailAddress : '';\r\n        const mobileNumber      = !isEmpty(data.Phone)                      ? data.Phone : '';\r\n        const project           = !isEmpty(data.mx_Project_Name)            ? data.mx_Project_Name : '';\r\n        const source            = !isEmpty(data.Source)                     ? data.Source : '';\r\n        const subSource         = !isEmpty(data.mx_Sub_Source)              ? data.mx_Sub_Source : '';\r\n        const channelPartner    = !isEmpty(data.mx_Channel_Partner_Name)    ? data.mx_Channel_Partner_Name : '';\r\n        const projectUnit       = '';\r\n        const priceSheet        = {};\r\n\r\n        setUserData({ fullName, emailId, mobileNumber, project, projectUnit, source, subSource, channelPartner, priceSheet });\r\n    }\r\n\r\n    function handelInputChange(event){\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        const type = event.target.type;\r\n\r\n        if(type === 'file'){\r\n            const file = event.target.files[0]\r\n            const type = file.type;\r\n            const fileName = file.name;\r\n\r\n            if (type !== 'application/pdf'){\r\n                return dispatch(AlertSliceActions.showAlert({ message: 'Only PDF file types are supported!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n\r\n            dispatch(LoaderSliceActions.setDisplayLoader({ from: 'PDF Loader', state: true }));\r\n                \r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => { \r\n                const data = reader.result.split(',')[1]\r\n                setUserData(prev => ({ ...prev, priceSheet: { fileName, type, data } }))\r\n                dispatch(LoaderSliceActions.setDisplayLoader({ from: 'PDF Loader', state: false })); \r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        setUserData(prev => ({...prev, [name]: value}))\r\n    }\r\n\r\n    async function handelFormSubmission(event){\r\n        try{\r\n            event.preventDefault();\r\n            const url = props.baseURL + '/create-bookingform';\r\n            const method = 'POST';\r\n            const headers = { 'content-type': 'application/json' };\r\n            const body = JSON.stringify(userData);\r\n\r\n            const response = await sendRequest({url, method, headers, body});\r\n            \r\n            console.log(response);\r\n        } catch(err) {\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to create bookingform!', title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    function handelModelClose(event){\r\n        setUserData({ fullName: '', emailId: '', mobileNumber: '', project: '', projectUnit: '', source: '', subSource: '', channelPartner: '', priceSheet: '' })\r\n        props.onCloseEvent && props.onCloseEvent()\r\n    }\r\n\r\n    return (\r\n        <PopupModel \r\n            title=\"Create New Booking Form\" \r\n            open={props.open} \r\n            handelModelClose={handelModelClose}\r\n        >\r\n            <FetchDataFromLeadSquare baseURL={props.baseURL} styles={STYLES} handelFetchedUserData={handelFetchedUserData} />\r\n\r\n            <Divider variant='middle' sx={{ marginY: 2 }} />\r\n\r\n            <form autoComplete=\"false\" method=\"POST\" action=\"#\" onSubmit={handelFormSubmission}>\r\n                <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\r\n                    Personal Information\r\n                </Typography>\r\n\r\n                <div className={STYLES.inputGroup}>\r\n                    <TextField\r\n                        className={STYLES.input}\r\n                        label=\"Full Name\"\r\n                        name=\"fullName\"\r\n                        value={userData.fullName}\r\n                        onChange={handelInputChange}\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        className={STYLES.input}\r\n                        label=\"Email Id\"\r\n                        name=\"emailId\"\r\n                        value={userData.emailId}\r\n                        onChange={handelInputChange}\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        className={STYLES.input}\r\n                        label=\"Mobile Number\"\r\n                        name=\"mobileNumber\"\r\n                        value={userData.mobileNumber}\r\n                        onChange={handelInputChange}\r\n                    />\r\n                </div>\r\n\r\n                <Divider variant='middle' sx={{ marginY: 2 }} />\r\n\r\n                <div className={STYLES.inputContainer}>\r\n                    <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\r\n                        Project Information\r\n                    </Typography>\r\n\r\n                    <div className={STYLES.inputGroup}>\r\n                        <Autocomplete\r\n                            className={STYLES.input}\r\n                            disablePortal\r\n                            options={projectState.projects}\r\n                            value={userData.project}\r\n                            onChange={projectChangeHandler}\r\n                            isOptionEqualToValue={(opt, val) => opt.label === val}\r\n                            noOptionsText=\"Fetching Projects Data..\"\r\n                            renderInput={(params) => <TextField {...params} label=\"Projects\" required />}\r\n                        />\r\n\r\n                        <Autocomplete\r\n                            className={STYLES.input}\r\n                            disablePortal\r\n                            options={projectState.projectUnits}\r\n                            value={userData.projectUnit}\r\n                            onChange={(_, val) => setUserData(prev => ({ ...prev, projectUnit: val }))}\r\n                            isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                            noOptionsText=\"Please select a project to show its related units\"\r\n                            renderInput={(params) => <TextField {...params} label=\"Project Units\" required/>}\r\n                        />\r\n\r\n                        <Button\r\n                            component=\"label\"\r\n                            role={undefined}\r\n                            variant=\"outlined\"\r\n                            tabIndex={-1}\r\n                            startIcon={<CloudUploadIcon />}\r\n                        >\r\n                            Upload Price Sheet\r\n                            <VisuallyHiddenInput onChange={handelInputChange} type=\"file\" accept=\"application/pdf\" required/>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    userData.priceSheet?.data &&\r\n                    <div className={STYLES.inputContainer}>\r\n                        <Alert severity=\"info\" icon={<FileIcon />} sx={{ textAlign: 'center', margin: 'auto' }} className={STYLES.input} >\r\n                            File \"{userData.priceSheet?.fileName}\" has been selected!\r\n                        </Alert>\r\n                    </div>\r\n                }\r\n\r\n                <Divider variant='middle' sx={{ marginY: 2 }} />\r\n\r\n                <div className={STYLES.inputContainer}>\r\n                    <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\r\n                        Source Information\r\n                    </Typography>\r\n\r\n                    <SourceInfoHandler styles={STYLES} userData={userData} setUserData={setUserData} />\r\n                </div>\r\n\r\n                <Divider variant='middle' sx={{ marginY: 2 }} />\r\n\r\n                <div className={STYLES.inputGroup}>\r\n                    <Button variant=\"outlined\" onClick={handelModelClose}>Cancel</Button>\r\n                    <Button variant=\"contained\" type=\"submit\">Create</Button>\r\n                </div>\r\n            </form>\r\n        </PopupModel>\r\n    )\r\n}\r\n\r\nexport default CreateNew;","// extracted by mini-css-extract-plugin\nexport default {\"input-group\":\"CreateNew_input-group__W1fKb\",\"fetched-data-iterator\":\"CreateNew_fetched-data-iterator__3wWvV\",\"input\":\"CreateNew_input__EJurn\"};","// Functional Imports\r\nimport { useState, useEffect, useReducer, useRef } from \"react\";\r\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AlertSliceActions } from \"../../../store/alert-slice\";\r\nimport isEmpty from \"../../../utility/is-empty\";\r\nimport useTabAccessVerifier from \"../../../utility/tab-access-verifier\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HeaderSliceName } from \"../../../store/header-slice\";\r\n\r\n// Components Import\r\nimport { Tooltip, OutlinedInput, InputAdornment, Drawer, Box, Divider, Accordion, AccordionSummary, AccordionDetails } from \"@mui/material\";\r\nimport { ListItem, List, ListItemText, ListItemButton, Button, IconButton, Typography, Badge, ClickAwayListener } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n// import ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';    \r\nimport TableView from \"./TableView\";\r\nimport CreateNew from \"../CreateNew/CreateNew\";\r\n\r\n// Styles Import\r\nimport importStyles from './ViewAll.module.css';\r\n\r\nconst styles = cssNameSimplifier(importStyles);\r\n\r\n\r\nfunction View(props) {\r\n    const [searchState, setSearchState]     = useState(null);       // Handels showing and hiding of search box\r\n    const [filterDisplay, setFilterDisplay] = useState(false);      // Handels showing and hiding of filter data drawer \r\n    const [refreshState, setRefreshState]   = useState(0);          // Used to referesh TableView data by incrementing key value\r\n    const [filters, dispatchFilters]        = useReducer(           // Conatins filter data\r\n        reduceFilterDataProcess, { \r\n            search: null, \r\n            status: new Set(), \r\n            years: new Set(), \r\n            projects: new Set(), \r\n            submittedByUser: new Set(), \r\n            filterStatus: { displayBadge: false, filterApplied: true } \r\n        }\r\n    );\r\n    const [projectsList, setProjectlist]    = useState([]);                     // Contains user handeled projects             \r\n    const [filterParams]                    = useSearchParams();                // To access query params\r\n    const dispatch                          = useDispatch()                     // Redux-Dispatch\r\n    const sendRequest                       = useHttpClientWithNavigate();      // Used to send out a request\r\n    const searchBoxRef                      = useRef();                         // Used to focus search box on open\r\n    const [createNewView, setCreateNewView] = useState(false);\r\n    const [isAllowedToAccessTab]            = useTabAccessVerifier('view');\r\n    const navigate                          = useNavigate();\r\n    const headerSlice                       = useSelector(state => state[HeaderSliceName]);\r\n    const { isEditable }                    = headerSlice.appPermissions;\r\n\r\n    if(!isAllowedToAccessTab){\r\n        navigate('/error', { state: { status: 403, msg: 'Your not allowed to access \\'View\\' tab' } })\r\n    }\r\n\r\n    // Checking for filter params and fetching all the projects handled by user\r\n    useEffect(() => {\r\n        try{\r\n            (async () => {\r\n                const type              = 'INIT';\r\n                const status            = filterParams.get('status');\r\n                const years             = filterParams.get('years');\r\n                const projects          = filterParams.get('projects');\r\n                const submittedByUser   = filterParams.get('submittedByUser');\r\n\r\n                const responseData      = await sendRequest({ url: props.baseURL + '/user-handled-projects'});\r\n                setProjectlist(responseData);\r\n                \r\n                dispatchFilters({ type, status, years, projects, submittedByUser });\r\n            })()\r\n        }catch( err ){\r\n            dispatch( AlertSliceActions.showAlert({ message: 'Failed to fetch projects list!', title: 'Request Failed!', severity: 'error' }) )\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(filters.search === null) return;\r\n        const interval = setTimeout(applyFilter, 500);\r\n        return () => clearTimeout(interval); \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters.search])\r\n\r\n    function updateFilterCondition(filterType, value){\r\n        dispatchFilters({ type: 'PROCESS_FILTER', filterType, value })\r\n    }\r\n\r\n    function applyFilter(){\r\n        const urlWithfilters = composeFilterParams(filters);\r\n        dispatchFilters({ type: 'FILTER_APPLIED' });\r\n        window.history.pushState({}, '', urlWithfilters);\r\n        setRefreshState(prev => ++prev);\r\n    }\r\n\r\n    if( searchState ){\r\n        setTimeout(() => searchBoxRef.current.focus(), 100);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.viewContainer}>\r\n                <div className={styles.toolBar}>\r\n                    <div className={styles.left}>\r\n                        <ClickAwayListener onClickAway={ () => { if(searchState) setSearchState(prev => false) }}>\r\n                            <div className={styles.searchConatiner}>\r\n                                <span className={styles.icon} onClick={(e) => setSearchState(prev => !!!prev)}>\r\n                                    <IconButton>\r\n                                        {(searchState) ? \r\n                                            <CloseIcon /> : \r\n                                            <Badge variant=\"dot\" color=\"success\" invisible={isEmpty(filters.search)}>\r\n                                                <SearchIcon />\r\n                                            </Badge>\r\n                                        }\r\n                                    </IconButton>\r\n                                </span>\r\n                                <div className={`${styles.input} ${(searchState !== null) ? (searchState) ? styles.active : styles.notActive : ''}`}>\r\n                                    <OutlinedInput\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <Tooltip title='Search will be compared against Full Name, Mobile No, Email Id and Alternate Mobile No.'>\r\n                                                    <InfoOutlinedIcon fontSize=\"small\" />\r\n                                                </Tooltip>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        placeholder=\"Search\"\r\n                                        size=\"small\" \r\n                                        type=\"search\" \r\n                                        autoFocus={true}\r\n                                        inputRef={searchBoxRef}\r\n                                        onChange={e => updateFilterCondition('search', e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        </ClickAwayListener>\r\n                    </div>\r\n\r\n                    <div className={styles.right}>\r\n                        <span className={styles.icon}>\r\n                            <Tooltip title=\"Refresh\">\r\n                                <IconButton onClick={(e) => setRefreshState(prev => ++prev)}>\r\n                                    <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                        <span className={styles.icon}>\r\n                            <Tooltip title=\"Filters\">\r\n                                <IconButton onClick={(event) => setFilterDisplay(true)} >\r\n                                    <Badge variant=\"dot\" color={(filters.filterStatus.filterApplied)?'success':'warning'} invisible={!filters.filterStatus.displayBadge}>\r\n                                        <FilterAltIcon />\r\n                                    </Badge>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                        <span className={styles.icon}>\r\n                            <Tooltip title=\"Download\">\r\n                                <IconButton disabled>\r\n                                    <DownloadIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                        {\r\n                            isEditable && \r\n                            <span className={styles.icon}>\r\n                                <Tooltip title=\"Create New\">\r\n                                    <IconButton onClick={e => setCreateNewView(true)}>\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <TableView baseURL={props.baseURL} key={refreshState} />\r\n            </div>\r\n\r\n            {/* Filter Menu / Drawer */}\r\n            <Drawer className={styles.drawer} anchor='right' open={filterDisplay} onClose={(e) => setFilterDisplay(false)} >\r\n                <main>\r\n                    <Box sx={{ width: 350 }} role=\"presentation\">\r\n                        <List className={styles.filtersList}>\r\n                            <ListItem>\r\n                                <h3>Filters</h3>\r\n                            </ListItem>\r\n\r\n                            <Divider variant=\"middle\" />\r\n\r\n                            <ListItem className={styles.filter}>\r\n                                <Accordion defaultExpanded>\r\n                                    <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                                        <Typography>Status</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <List\r\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 200, overflow: 'auto' }}\r\n                                            component=\"nav\"\r\n                                        >\r\n                                            {[\"Approved\", \"Rejected\", \"Pending\"].map(status => (\r\n                                                <ListItemButton key={status} onClick={e => updateFilterCondition('status', status)}>\r\n                                                    <ListItemText primary={status} />\r\n                                                    {filters.status?.has(status) && <CheckIcon />}\r\n                                                </ListItemButton>\r\n                                            ))}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </ListItem>\r\n\r\n                            <ListItem className={styles.filter}>\r\n                                <Accordion defaultExpanded={filters.years.size > 0}>\r\n                                    <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                                        <Typography>Years</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <List\r\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 400, overflow: 'auto' }}\r\n                                            component=\"nav\"\r\n                                        >\r\n                                            {[...Array(( new Date().getFullYear() + 1) - 1995)].map((_,index) => {\r\n                                                const year = new Date().getFullYear() - index;\r\n                                                return (\r\n                                                    <ListItemButton key={year} onClick={e => updateFilterCondition('years', `${year}`)}>\r\n                                                        <ListItemText primary={year} />\r\n                                                        {filters.years?.has(`${year}`) && <CheckIcon />}\r\n                                                    </ListItemButton>\r\n                                                )\r\n                                            })}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </ListItem>\r\n\r\n                            <ListItem className={styles.filter}>\r\n                                <Accordion disabled={projectsList.length <= 1} defaultExpanded={filters.projects.size > 1}>\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                    >\r\n                                        <Typography>Projects</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <List\r\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 350, overflow: 'auto' }}\r\n                                            component=\"nav\"\r\n                                        >\r\n                                            {projectsList.map(project => (\r\n                                                <ListItemButton key={project.id} disabled={projectsList.length <= 1}  onClick={e => updateFilterCondition('projects', project.id)} >\r\n                                                    <ListItemText primary={project.name} />\r\n                                                    {filters.projects?.has(project.id) && <CheckIcon />}\r\n                                                </ListItemButton>\r\n                                            ))}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </ListItem>\r\n\r\n                            <ListItem className={styles.filter}>\r\n                                <Accordion defaultExpanded={filters.submittedByUser.size > 0}>\r\n                                    <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                    >\r\n                                        <Typography>Submitted By User</Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                        <List\r\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 200, overflow: 'auto' }}\r\n                                            component=\"nav\"\r\n                                        >\r\n                                            {[{ key: \"Submitted\", value: 'true' }, { key: \"Not Submited\", value: 'false' }].map(submitted => (\r\n                                                <ListItemButton key={submitted.key} onClick={e => updateFilterCondition('submittedByUser', submitted.value )}>\r\n                                                    <ListItemText primary={submitted.key} />\r\n                                                    {filters.submittedByUser?.has(submitted.value) && <CheckIcon />}\r\n                                                </ListItemButton>\r\n                                            ))}\r\n                                        </List>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            </ListItem>\r\n\r\n                        </List>\r\n                    </Box>\r\n                </main>\r\n\r\n                <footer>\r\n                    <Divider />\r\n                    <div className={styles.filterActions}>\r\n                        <Button variant=\"outlined\" onClick={e => dispatchFilters({type: 'RESET'})}>Reset</Button>\r\n                        <Button variant=\"contained\" onClick={applyFilter} disabled={filters.filterStatus.filterApplied}>Apply</Button>\r\n                    </div>\r\n                </footer>\r\n            </Drawer>\r\n\r\n            <CreateNew baseURL={props.baseURL} open={createNewView} onCloseEvent={e => setCreateNewView(false)} />\r\n\r\n            {/* Main Menu */}\r\n            {/* <StyledMenuList\r\n                anchorEl={uiFilterState.mainMenuAnchor}\r\n                open={Boolean(uiFilterState.mainMenuAnchor)}\r\n                onClose={e => dispatchUIFilterState({ type: 'CLOSE_ALL_MENU' })}\r\n            >\r\n                <MenuItem\r\n                    disableRipple\r\n                    onClick={(event) => dispatchUIFilterState({ type: 'STATUS_MENU_EVENT', event })}\r\n                >\r\n                    Status\r\n                    <ArrowRightIcon />\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} disableRipple>\r\n                    Year\r\n                    <ArrowRightIcon />\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} disableRipple>\r\n                    Project\r\n                    <ArrowRightIcon />\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} disableRipple>\r\n                    <Typography variant=\"inherit\" noWrap>\r\n                        Submitted By User\r\n                    </Typography>\r\n                    <ArrowRightIcon />\r\n                </MenuItem>\r\n            </StyledMenuList> */}\r\n\r\n            {/* Status Menu */}\r\n            {/* <StyledMenuList\r\n                anchorEl={uiFilterState.statusMenuAnchor}\r\n                open={Boolean(uiFilterState.statusMenuAnchor)}\r\n                onClose={e => dispatchUIFilterState({ type: 'CLOSE_ALL_MENU' })}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n            >\r\n                <MenuItem>\r\n                    <CheckIcon />\r\n                    Approved\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <CheckIcon />\r\n                    Rejected\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <CheckIcon />\r\n                    Pending\r\n                </MenuItem>\r\n            </StyledMenuList> */}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction reduceFilterDataProcess(state, action){\r\n    const newState = {...state};\r\n\r\n    if(action.type === 'INIT'){\r\n        if(action.search){\r\n            newState.search = action.search.trim();\r\n        }\r\n\r\n        if(action.status){\r\n            newState.status = new Set(action.status.split(';').map(value => value.trim()));\r\n        }\r\n\r\n        if(action.years){\r\n            newState.years = new Set(action.years.split(';').map(value => value.trim()));\r\n        }\r\n\r\n        if(action.projects){\r\n            newState.projects = new Set(action.projects.split(';').map(value => value.trim()));\r\n        }\r\n\r\n        if(action.submittedByUser){\r\n            newState.submittedByUser = new Set(action.submittedByUser.split(';').map(value => value.trim()));\r\n        }\r\n    }\r\n\r\n    if(action.type === 'PROCESS_FILTER'){\r\n        if( action.filterType === 'search' ){\r\n            newState[action.filterType] = action.value\r\n        } else {\r\n            if( newState[action.filterType].has(action.value) ){\r\n                newState[action.filterType].delete(action.value);\r\n            } else {\r\n                newState[action.filterType].add(action.value);\r\n            }\r\n\r\n            newState.filterStatus.filterApplied = false;\r\n        }\r\n    }\r\n\r\n    if(action.type === 'RESET'){\r\n        return { \r\n            search: state.search, \r\n            status: new Set(),\r\n            years: new Set(), \r\n            projects: new Set(), \r\n            submittedByUser: new Set(), \r\n            filterStatus: { \r\n                displayBadge: false, \r\n                filterApplied: false \r\n            } \r\n        };\r\n    }\r\n\r\n    if(action.type === 'FILTER_APPLIED'){\r\n        newState.filterStatus.filterApplied = true;\r\n    }\r\n\r\n    newState.filterStatus.displayBadge = newState.status.size > 0 || newState.years.size > 0 || newState.projects.size > 0 || newState.submittedByUser.size > 0\r\n\r\n    return newState;\r\n}\r\n\r\nfunction composeFilterParams(filterData){\r\n    const currentURL = new URL(window.location);\r\n    const newURLWIthParams = new URL(currentURL.origin + currentURL.pathname);\r\n\r\n    Object.keys(filterData).forEach( filterName => {\r\n        if('filterStatus' === filterName) return;\r\n        if( filterData[filterName] === null || filterData[filterName].size <= 0 ) return;\r\n        if( 'search' === filterName && isEmpty( filterData[filterName] ) ) return;\r\n\r\n        const filterParam = ('search' === filterName)? filterData[filterName] : [...filterData[filterName]].join(';');\r\n\r\n        newURLWIthParams.searchParams.set(filterName, filterParam);\r\n    });\r\n\r\n    return newURLWIthParams;\r\n}\r\n\r\nexport default View;","export function openBase64NewTab(base64Pdf){\r\n    var blob = base64toBlob( base64Pdf );\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob ) {\r\n        window.navigator.msSaveOrOpenBlob(blob, \"pdfBase64.pdf\");\r\n    } else {\r\n        const blobUrl = URL.createObjectURL(blob);\r\n        window.open(blobUrl);\r\n    }\r\n}\r\n\r\nexport function base64toBlob(base64Data) {\r\n    const sliceSize = 1024;\r\n    const byteCharacters = atob(base64Data);\r\n    const bytesLength = byteCharacters.length;\r\n    const slicesCount = Math.ceil(bytesLength / sliceSize);\r\n    const byteArrays = new Array(slicesCount);\r\n\r\n    for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\r\n        const begin = sliceIndex * sliceSize;\r\n        const end = Math.min(begin + sliceSize, bytesLength);\r\n        const bytes = new Array(end - begin);\r\n\r\n        for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\r\n            bytes[i] = byteCharacters[offset].charCodeAt(0);\r\n        }\r\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\r\n    }\r\n    return new Blob(byteArrays, { type: \"application/pdf\" });\r\n}","// Functional Imports\r\nimport { useEffect, useState } from \"react\";\r\nimport isEmpty from \"../../../utility/is-empty\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { HeaderSliceName } from \"../../../store/header-slice\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Component Imports\r\nimport { IconButton, MenuItem, Menu, styled, alpha, Modal, TextField, FormControlLabel, Button, Checkbox, Divider } from \"@mui/material\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditNoteIcon from '@mui/icons-material/EditNote';\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport PendingActionsIcon from '@mui/icons-material/PendingActions';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst StyledMenu = styled(\r\n    props => (\r\n    <Menu\r\n        elevation={0}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n        }}\r\n        {...props}\r\n    />\r\n    ))(({ theme }) => ({\r\n        '& .MuiPaper-root': {\r\n            borderRadius: 6,\r\n            marginTop: theme.spacing(1),\r\n            minWidth: 180,\r\n            color:\r\n                theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n            boxShadow:\r\n                'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n            '& .MuiMenu-list': {\r\n                padding: '4px 0',\r\n            },\r\n            '& .MuiMenuItem-root': {\r\n                '& .MuiSvgIcon-root': {\r\n                    fontSize: 18,\r\n                    color: theme.palette.text.secondary,\r\n                    marginRight: theme.spacing(1.5),\r\n                },\r\n                '&:active': {\r\n                    backgroundColor: alpha(\r\n                        theme.palette.primary.main,\r\n                        theme.palette.action.selectedOpacity,\r\n                    ),\r\n                },\r\n            },\r\n        },\r\n})\r\n);\r\n\r\nfunction NoteHandlerComp(props){\r\n    const STYLES                                            = props.styles;\r\n    const { bookingFormId }                                 = useParams();  \r\n    const dispatch                                          = useDispatch();\r\n    const [notesState, setNotesState]                       = useState([]);\r\n    const [noteMenuAndModalState, setNoteMenuAndModalState] = useState({ menuAnchor: null, modalType: null });\r\n    const [noteUserInputState, setNoteUserInputState]       = useState({ id: '', note: '', requriesApproval: false });\r\n    const sendRequest                                       = useHttpClientWithNavigate();\r\n    const headerSlice                                       = useSelector(state => state[HeaderSliceName].appPermissions);\r\n    const { noteApprover }                                  = headerSlice;\r\n    const [isEditable, setIsEditableState]                  = useState(null);\r\n\r\n    useEffect(() => {\r\n        setNotesState(props.bookingFormData.notes);\r\n    }, [props.bookingFormData])\r\n\r\n    useEffect(() => {\r\n        setIsEditableState(props.isEditable)\r\n    }, [props.isEditable])\r\n\r\n    async function handelNoteProcessing(type){\r\n        try{\r\n            const url = props.baseURL + '/' + bookingFormId + '/note';\r\n            const method = 'POST';\r\n            const headers = {\"Content-Type\": \"application/json\"};\r\n    \r\n            if(type === 'NEW'){\r\n                const newURL = url + '?type=NEW';\r\n                const body = JSON.stringify({ \r\n                    note: noteUserInputState.note, \r\n                    requriesApproval: noteUserInputState.requriesApproval \r\n                });\r\n                \r\n                const response = await sendRequest({ url: newURL, method, body, headers });\r\n    \r\n                if(response.notes) setNotesState(response.notes)\r\n    \r\n                return dispatch( AlertSliceActions.showAlert({ message: 'Record created', title: 'Request Completed!', severity: 'success' }) )\r\n            }\r\n    \r\n            if(type === 'EDIT'){\r\n                const newURL = url + '?type=EDIT';\r\n                const body = JSON.stringify({ \r\n                    id: noteUserInputState.id,\r\n                    note: noteUserInputState.note, \r\n                    requriesApproval: noteUserInputState.requriesApproval \r\n                });\r\n                \r\n                const response = await sendRequest({ url: newURL, method, body, headers });\r\n    \r\n                if(response.notes) setNotesState(response.notes)\r\n    \r\n                return dispatch( AlertSliceActions.showAlert({ message: 'Record updated!', title: 'Request Completed!', severity: 'success' }) )\r\n            }\r\n    \r\n            if(type === 'DELETE'){\r\n                const newURL = url + '?type=DELETE';\r\n                const body = JSON.stringify({ id: noteUserInputState.id });\r\n                const response = await sendRequest({ url: newURL, body, method, headers });\r\n    \r\n                if(response.notes) setNotesState(response.notes)\r\n                return dispatch( AlertSliceActions.showAlert({ message: 'Record deleted!', title: 'Request Completed!', severity: 'success' }) )\r\n            }\r\n\r\n            if(type === 'NOTE_APPROVE' || type === 'NOTE_REJECT'){\r\n                const newURL = props.baseURL + '/' + bookingFormId + '/note-processing';\r\n                const status = (type === 'NOTE_APPROVE')? 'APPROVE' : 'REJECT';\r\n                const noteId = noteUserInputState.id;\r\n                const body = JSON.stringify({ noteId, status });\r\n                const headers = {\"Content-Type\": \"application/json\"};\r\n\r\n                const response = await sendRequest({ url: newURL, body, method, headers });\r\n                \r\n                if(response.notes) setNotesState(response.notes)\r\n                return dispatch( AlertSliceActions.showAlert({ message: response.msg || 'Record processed!', title: 'Request Completed!', severity: 'success' }) )\r\n            }\r\n    \r\n            dispatch( AlertSliceActions.showAlert({ message: 'Type mismatch', title: 'Request Failed!', severity: 'warning' }) )\r\n        } catch ( err ){\r\n            dispatch( AlertSliceActions.showAlert({ message: err.msg ?? `Failed to process request`, title: 'Request Failed!', severity: 'error' }) )\r\n        }\r\n    }\r\n    \r\n    function handelNoteMenuAndModal({type, id, event}){\r\n        if(type === 'MENU_OPEN'){\r\n            const note = notesState.filter(note => note.id === id)[0];\r\n\r\n            if(!note) return alert('Failed to find note');\r\n\r\n            setNoteMenuAndModalState({ menuAnchor: event.currentTarget, modalType: null });\r\n            setNoteUserInputState({ id: note.id, note: note.note, requriesApproval: !!note.approval });\r\n        }\r\n        \r\n        if(type === 'MODAL_OPEN_IN_EDIT'){\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: 'EDIT' });\r\n        }\r\n        \r\n        if(type === 'MODAL_OPEN_IN_NEW'){\r\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: 'NEW' });\r\n        }\r\n\r\n        if(type === 'CLOSE'){\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\r\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\r\n        }\r\n\r\n        if(type === 'PROCESS_SUBMISSION'){\r\n            handelNoteProcessing(noteMenuAndModalState.modalType);\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\r\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\r\n        }\r\n\r\n        if(type === 'DELETE_RECORD'){\r\n            handelNoteProcessing('DELETE');\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\r\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\r\n        }\r\n\r\n        if(type === 'TRACK_NOTE_UPDATE'){\r\n            const name = event.target.name;\r\n            const value = (name === 'note')? event.target.value : event.target.checked;\r\n            setNoteUserInputState(prev => ({ ...prev, [name]: value }))\r\n        }\r\n\r\n        if(type === 'NOTE_APPROVE' || type === 'NOTE_REJECT'){\r\n            handelNoteProcessing(type);\r\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`${STYLES.container} ${STYLES.bfNotes}`}>\r\n                <section>\r\n                    <div className={STYLES.headerInformation}>\r\n                        <p>\r\n                            <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                <DoubleArrowIcon />\r\n                            </IconButton>\r\n                            Notes\r\n                        </p>\r\n                    </div>\r\n                    <div className={STYLES.data} style={{ justifyContent: \"flex-start\" }}>\r\n                        {\r\n                            isEmpty(notesState) && <p style={{ textAlign: 'center', width: '100%' }}>No notes found!</p>\r\n                        }\r\n                        { \r\n                            !isEmpty(notesState) && \r\n                            notesState.map( (note, index) => (\r\n                                <div className={STYLES.noteContainer} key={note.id}>\r\n                                    <div>\r\n                                        {\r\n                                            index > 0 && \r\n                                            notesState[index-1].from !== note.from && // Checks if the previous note is the same user or not\r\n                                            <div className={STYLES.noteFrom}>\r\n                                                <h3>{note.from}</h3> \r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            index <= 0 && \r\n                                            <div className={STYLES.noteFrom}>\r\n                                                <h3>{note.from}</h3> \r\n                                            </div>\r\n                                        }\r\n                                        <div className={STYLES.note}>\r\n                                            {\r\n                                                note.approval &&\r\n                                                <div className={STYLES.approvalInfo}>\r\n                                                    { \r\n                                                        note.approval.status === null &&\r\n                                                        <>\r\n                                                            <PendingActionsIcon className={STYLES.icon} /> \r\n                                                            <p>\r\n                                                                Approval Pending\r\n                                                            </p>\r\n                                                        </>\r\n                                                    }\r\n                                                    { \r\n                                                        note.approval.status === true && \r\n                                                        <>\r\n                                                            <CheckCircleOutlineIcon className={STYLES.icon} /> \r\n                                                            <p>\r\n                                                                Approved By {note.approval.updatedBy}\r\n                                                            </p>\r\n                                                        </>\r\n                                                    }\r\n                                                    { \r\n                                                        note.approval.status === false && \r\n                                                        <>\r\n                                                            <HighlightOffIcon className={STYLES.icon} /> \r\n                                                            <p>\r\n                                                                Rejected By {note.approval.updatedBy}\r\n                                                            </p>\r\n                                                        </>\r\n                                                    }\r\n                                                </div>\r\n                                            }\r\n                                            <p>{note.note}</p>    \r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <IconButton onClick={event => handelNoteMenuAndModal({ type: 'MENU_OPEN', id: note.id, event })}>\r\n                                            <MoreVertIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n                        <StyledMenu\r\n                            id=\"notes-menu\"\r\n                            anchorEl={noteMenuAndModalState.menuAnchor}\r\n                            open={Boolean(noteMenuAndModalState.menuAnchor)}\r\n                            onClose={e => handelNoteMenuAndModal({ type: 'CLOSE' })}\r\n                        >\r\n                            {\r\n                                noteApprover && noteUserInputState.requriesApproval && [\r\n                                    (\r\n                                        <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'NOTE_APPROVE' })} key=\"MenuItem_Approve\">\r\n                                            <CheckCircleIcon />\r\n                                            Approve\r\n                                        </MenuItem>\r\n                                    ), (\r\n                                        <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'NOTE_REJECT' })} key=\"MenuItem_Reject\">\r\n                                            <CancelIcon />\r\n                                            Reject\r\n                                        </MenuItem>\r\n                                    ), (\r\n                                        <Divider  key=\"MenuItem_Divider\"/>\r\n                                    )\r\n                                ]\r\n                            }\r\n                            <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'MODAL_OPEN_IN_EDIT' })}>\r\n                                <EditNoteIcon />\r\n                                Edit\r\n                            </MenuItem>\r\n                            <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'DELETE_RECORD' })}>\r\n                                <DeleteIcon />\r\n                                Delete\r\n                            </MenuItem>\r\n                        </StyledMenu>\r\n                    </div> \r\n                    {\r\n                        isEditable && (\r\n                            <div className={STYLES.data} style={{ justifyContent: \"flex-end\"}}>\r\n                                <IconButton style={{ backgroundColor: '#90caf9'}} onClick={e => handelNoteMenuAndModal({ type: 'MODAL_OPEN_IN_NEW' })}>\r\n                                    <AddIcon sx={{ color: '#000', fontSize: 30 }} />\r\n                                </IconButton>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n\r\n            {/* Notes Modal */}\r\n            <Modal open={Boolean(noteMenuAndModalState.modalType)} keepMounted={false} onClose={e => handelNoteMenuAndModal({type: 'CLOSE'})} >\r\n                <div className={STYLES.container + ' ' + STYLES.modalNoteConatiner}>\r\n                    <CloseIcon className={STYLES.closeIcon} onClick={e => handelNoteMenuAndModal({ type: 'CLOSE'})} />\r\n\r\n                    <div className={STYLES.noteInputsContainer}>\r\n                        <TextField \r\n                            className={STYLES.noteTextField}\r\n                            label=\"Note\"\r\n                            placeholder=\"Add a note\"  \r\n                            name=\"note\"\r\n                            fullWidth\r\n                            multiline \r\n                            minRows={2}\r\n                            maxRows={20}\r\n                            disabled={!isEditable}\r\n                            value={noteUserInputState.note}\r\n                            required\r\n                            onChange={event => handelNoteMenuAndModal({ type: 'TRACK_NOTE_UPDATE', event })}\r\n                        />\r\n\r\n                        <FormControlLabel \r\n                            className={STYLES.inputContainer} \r\n                            control={<Checkbox />} \r\n                            label=\"Requires Approval?\" \r\n                            labelPlacement=\"start\"\r\n                            name=\"requriesApproval\"\r\n                            disabled={!isEditable} \r\n                            sx={{ justifyContent: 'flex-end' }}\r\n                            checked={noteUserInputState.requriesApproval}\r\n                            onChange={event => handelNoteMenuAndModal({ type: 'TRACK_NOTE_UPDATE', event })}\r\n                        />\r\n                        {\r\n                            isEditable && \r\n                            <div className={STYLES.noteActionsContainer}>\r\n                                <Button data-mode=\"MODAL\" data-type=\"CLOSE\" onClick={e => handelNoteMenuAndModal({ type: 'CLOSE'})}>Cancel</Button>\r\n                                <Button \r\n                                    variant=\"contained\"\r\n                                    onClick={e => handelNoteMenuAndModal({ type: 'PROCESS_SUBMISSION' })}\r\n                                >\r\n                                    {noteMenuAndModalState.modalType === 'EDIT'? 'Update' : 'Submit'}\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NoteHandlerComp;\r\nexport { StyledMenu };","// Functional Imports\r\nimport { useState } from \"react\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HeaderSliceName } from \"../../../store/header-slice\";\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Component Imports\r\nimport { Button, IconButton, Modal, TextField } from \"@mui/material\";\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\nimport SettingsBackupRestoreIcon from '@mui/icons-material/SettingsBackupRestore';\r\nimport DoNotDisturbAltIcon from '@mui/icons-material/DoNotDisturbAlt';\r\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\n// Styles Import\r\n\r\nfunction ApprovalsHandler(props){\r\n    const styles = props.styles;\r\n    const sendRequest = useHttpClientWithNavigate();\r\n    const [status, setStatus] = useState();\r\n    const [note, setNote] = useState();\r\n    const dispatch = useDispatch();\r\n    const { bookingFormId } = useParams();  \r\n    const headerSlice = useSelector(state => state[HeaderSliceName]);\r\n    const employeeRole = headerSlice.employee.role;\r\n\r\n    async function submitApprovals(statusReq){\r\n        closeModal();\r\n        try {\r\n            const url = props.baseURL + '/' + bookingFormId + '/bookingform-processing';\r\n            const method = 'POST';\r\n            const headers = { \"Content-Type\": \"application/json\" };\r\n            \r\n            if((statusReq === 'RE_PROCESS' || statusReq === 'REJECT') && !status) return setStatus(statusReq);\r\n\r\n            const body = JSON.stringify({ status: statusReq, note });\r\n\r\n            const response = await sendRequest({ url, method, headers, body });\r\n\r\n            props.setReloadComp(prev => !prev);\r\n            dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Request processed', title: 'Request Submitted', severity: 'success' }));\r\n        } catch (err) {\r\n            if(err.status === 412){\r\n                return dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to submit request!', title: 'Request Failed!', severity: 'warning', autoclose: false }))\r\n            }\r\n\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to submit request!', title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    function closeModal(){\r\n        setStatus();\r\n        setNote();\r\n    }\r\n\r\n    return (props.isApprover || props.isApprover === false) && (\r\n        <>\r\n            <div className={`${styles.container} ${styles.bfActions}`}>\r\n                <section>\r\n                    <div className={styles.headerInformation}>\r\n                        <p>\r\n                            <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                <DoubleArrowIcon />\r\n                            </IconButton>\r\n                            Form Actions\r\n                        </p>\r\n                    </div>\r\n                    <div className={styles.data}>\r\n                        {\r\n                            employeeRole !== 'Project Head' &&\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                endIcon={<SettingsBackupRestoreIcon />}\r\n                                disabled={!props.isApprover}\r\n                                onClick={e => submitApprovals(\"RE_PROCESS\")}\r\n                            >\r\n                                Re-Process\r\n                            </Button>\r\n                        }\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            endIcon={<DoNotDisturbAltIcon />}\r\n                            disabled={!props.isApprover}\r\n                            onClick={e => submitApprovals(\"REJECT\")}\r\n                        >\r\n                            Reject\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            endIcon={<TaskAltIcon />}\r\n                            disabled={!props.isApprover}\r\n                            onClick={e => submitApprovals(\"APPROVE\")}\r\n                        >\r\n                            Approve\r\n                        </Button>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n                        \r\n            {/* Notes Modal */}\r\n            <Modal open={Boolean(status)} keepMounted={false} onClose={closeModal} >\r\n                <div className={styles.container + ' ' + styles.modalNoteConatiner}>\r\n                    <CloseIcon className={styles.closeIcon} onClick={closeModal} />\r\n\r\n                    <div className={styles.noteInputsContainer}>\r\n                        <p>\r\n                            <strong>Would you like to add a note for {(status === 'RE_PROCESS')? 're-processing' : 'rejection'}?</strong>\r\n                        </p>\r\n                        <TextField \r\n                            className={styles.noteTextField}\r\n                            placeholder=\"Add a note\"  \r\n                            name=\"note\"\r\n                            value={note}\r\n                            fullWidth\r\n                            multiline \r\n                            minRows={2}\r\n                            maxRows={15}\r\n                            onChange={e => setNote(e.target.value)}\r\n                        />\r\n \r\n                        <div className={styles.noteActionsContainer}>\r\n                            <Button data-mode=\"MODAL\" data-type=\"CLOSE\" onClick={closeModal}>Cancel</Button>\r\n                            <Button \r\n                                variant=\"contained\"\r\n                                onClick={e => submitApprovals(status)}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApprovalsHandler;","// Functional imports\r\n\r\n\r\n// Components imports\r\nimport { Divider } from \"@mui/material\";\r\n\r\n// Styles imports\r\n\r\n\r\nfunction HeaderView(props){\r\n    const styles = props.styles;\r\n    const indianRupeesFormater = new Intl.NumberFormat('en-IN', { currency: 'INR' });\r\n\r\n\r\n    return (\r\n        <div className={styles.container + ' ' + styles.quickViewConatiner}>\r\n            <div>\r\n                <h3>Project</h3>\r\n                <p>{props?.bookingFormData?.Project?.name}</p>\r\n            </div>\r\n            \r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>Project Unit</h3>\r\n                <p>{props?.bookingFormData?.ProjectUnit?.name}</p>\r\n            </div>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>Current Unit Price</h3>\r\n                <p style={{ textAlign: 'center' }}>\r\n                    {\r\n                        (props?.bookingFormData?.currentUnitPrice)?\r\n                            indianRupeesFormater.format(props.bookingFormData.currentUnitPrice) : '-----'\r\n                    }\r\n                </p>\r\n            </div>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>Discount (₹)</h3>\r\n                <p style={{ textAlign: 'center' }}>\r\n                    {\r\n                        (props?.bookingFormData?.discount)?\r\n                            indianRupeesFormater.format(props.bookingFormData.discount) : '-----'\r\n                    }\r\n                </p>\r\n            </div>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>After Discount (₹)</h3>\r\n                <p style={{ textAlign: 'center' }}>\r\n                    {\r\n                        (props?.bookingFormData?.currentUnitPrice && props?.bookingFormData?.discount)?\r\n                            indianRupeesFormater.format((props?.bookingFormData.currentUnitPrice - props?.bookingFormData.discount)) : '-----'\r\n                    }\r\n                </p>\r\n            </div>\r\n\r\n            <Divider orientation=\"vertical\" flexItem />\r\n\r\n            <div>\r\n                <h3>Realization Price</h3>\r\n                <p style={{textAlign: 'center'}}>\r\n                    {\r\n                        (props?.bookingFormData?.totalCost && props?.bookingFormData?.sqft)? \r\n                            indianRupeesFormater.format((props?.bookingFormData.totalCost / props?.bookingFormData.sqft)) : '-----'\r\n                    }\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderView;","// Functional imports\r\nimport { useState, useMemo } from \"react\";\r\n\r\n// Components Import\r\nimport PopupModel from \"../../../componets/PopupModel/PopupModel\";\r\nimport { Link, IconButton, Tooltip } from \"@mui/material\";\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\n// Style Imports\r\n\r\n\r\nfunction CreateUserShareableLink(props){\r\n    const [copyIconState, setCopyIconState] = useState({ icon: <ContentCopyIcon />, copy: true, title: 'Copy Link' });\r\n\r\n    const userBookingFormLink = useMemo(() => {\r\n        const url = new URL(window.location);\r\n        // return url.protocol + '//' + url.host + '/U/boooking-form/' + url.pathname.split('/')[2] + '/email-verify'\r\n        return 'http://localhost:3001?f=' + url.pathname.split('/')[2];\r\n    }, []);\r\n\r\n\r\n    function handelModelClose(){\r\n        props.handelModelClose && props.handelModelClose();\r\n    }\r\n\r\n    function copyLink(){\r\n        if(!copyIconState.copy) return;\r\n\r\n        navigator.clipboard.writeText(userBookingFormLink);\r\n        setCopyIconState({ icon: <DoneIcon />, copy: false, title: 'Copied!' });\r\n\r\n        const timeout = setTimeout(() => {\r\n            setCopyIconState({ icon: <ContentCopyIcon />, copy: true, title: 'Copy Link' });\r\n            clearTimeout(timeout)\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <PopupModel title=\"Shareable URL\" handelModelClose={handelModelClose} open={props.open}>\r\n            <Link \r\n                sx={{ display: 'block', textAlign: 'center', marginY: 2 }} \r\n                target=\"_blank\" \r\n                rel=\"noreferrer\" \r\n                href={userBookingFormLink}\r\n            >\r\n                {userBookingFormLink}\r\n            </Link>\r\n        \r\n            <div style={{ maxWidth: 'fit-content', marginInline: 'auto' }}>\r\n                <Tooltip title={copyIconState.title} >\r\n                    <IconButton onClick={copyLink}>\r\n                        {copyIconState.icon}\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        </PopupModel>\r\n    )\r\n}\r\n\r\nexport default CreateUserShareableLink;","// Functional imports\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\r\nimport isEmpty from \"../../../utility/is-empty\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AlertSliceActions } from '../../../store/alert-slice';\r\nimport { HeaderSliceName } from \"../../../store/header-slice\";\r\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\r\nimport moment from \"moment\";\r\nimport { openBase64NewTab } from \"./ViewHelper\";\r\n\r\n// Comonents importd\r\nimport {\r\n    IconButton, InputLabel, MenuItem, FormControl, Select, Button, Modal, TextField, FormControlLabel, Checkbox, Autocomplete, Tooltip, FormGroup\r\n} from \"@mui/material\";\r\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport PendingActionsIcon from '@mui/icons-material/PendingActions';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport CampaignIcon from '@mui/icons-material/Campaign';\r\nimport NoteHandlerComp, { StyledMenu } from \"./NoteHandlerComp\";\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport ApprovalsHandler from \"./ApprovalsHandler\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\r\nimport AddLinkIcon from '@mui/icons-material/AddLink';\r\nimport HeaderView from \"./HeaderView\";\r\n\r\n// Styles imports\r\nimport importStyles from './View.module.css';\r\nimport viewAllStyles from '../ViewAll/ViewAll.module.css';\r\nimport CreateUserShareableLink from \"./CreateUserShareableLink\";\r\n\r\nconst STYLES = cssNameSimplifier(importStyles);\r\nconst TOOLBAR_STYLES = cssNameSimplifier(viewAllStyles);\r\n\r\nconst GENDERS = [\"Male\", \"Female\", \"Other\"];\r\nconst NATIONALITIES = ['Indian', 'NRI'];\r\nconst MARITAL_STATUS = ['Single', 'Married'];\r\nconst PERMANENT_ADDRESS_TYPES = ['Same As Present Address', 'Different'];\r\nconst MODE_OF_PAYMENT = ['Self', 'Home Loan'];\r\nconst PAYMENT_TYPE = ['UPI', 'Cheque', 'Online Banking', 'Cash Payment'];\r\nconst CO_APPLICANT_OPTIONS = ['Yes', 'No'];\r\n\r\nconst VIEW_DATA = { \r\n    aadhar: { fileName: null, data: null }, \r\n    panCard: { fileName: null, data: null }, \r\n    applicant: { fileName: null, data: null }, \r\n    priceSheet: { fileName: null, data: null }, \r\n    coApplicant: { fileName: null, data: null }, \r\n    paymentConfirmation: { fileName: null, data: null }, \r\n};\r\n\r\nfunction View(props) {\r\n    const { bookingFormId } = useParams();\r\n    const dispatch          = useDispatch();\r\n    const modelImgRef       = useRef();\r\n    const sendRequest       = useHttpClientWithNavigate();\r\n    const navigate          = useNavigate();\r\n    \r\n    const [modalImageState, setModalImageState]         = useState({ imgSrc: '', imgAlt: '', type: '' });\r\n    const [projectState, setProjectState]               = useState({ projects: [], projectUnits: [] });\r\n    const [bookingFormData, setBookingFormData]         = useState(); // Used to store bookingform data e.g.. { error: 'Error Message' } || {..data}\r\n    const [reloadComp, setReloadComp]                   = useState(null);\r\n    const [priceSheetMenuState, setPriceSheetMenuState] = useState();\r\n    const [cpNameView, setCpNameViewState]              = useState(false);\r\n    const [genShareableLink, setGenShareableLinkState]  = useState(false);\r\n\r\n    \r\n    const headerSlice                                       = useSelector(state => state[HeaderSliceName]);\r\n    const {isEditable: editable, displayApprovalHistory}    = headerSlice.appPermissions;\r\n    const [isEditable, setIsEditableState]                  = useState(null);\r\n    const [sourceData, setSourceData]                       = useState({ sourceWithSubSource: [], currentSubSourceForSource: [] });\r\n    const [channelPartnerData, setChannelPartnerData]       = useState([]);\r\n    const channelPartnerLabels                              = [\"cp\", \"c p\", \"channel partner\"];\r\n    \r\n    const approverContainerJSX = [];\r\n\r\n    const proceessApprovals = useCallback((status) => {\r\n        let containerClassName = STYLES.information + ' ';\r\n        let iconToDisplay = <></>;\r\n\r\n        // eslint-disable-next-line default-case\r\n        switch (status) {\r\n            case true:\r\n                containerClassName += STYLES.approved;\r\n                iconToDisplay = <CheckCircleOutlineIcon className={STYLES.icon} />\r\n                break;\r\n\r\n            case false:\r\n                containerClassName += STYLES.rejected;\r\n                iconToDisplay = <HighlightOffIcon className={STYLES.icon} />\r\n                break;\r\n\r\n            case null:\r\n                containerClassName += STYLES.pending;\r\n                iconToDisplay = <PendingActionsIcon className={STYLES.icon} />\r\n                break;\r\n        }\r\n\r\n        return { containerClassName, iconToDisplay };\r\n    }, []);\r\n\r\n    if (bookingFormData?.approvals) {\r\n        const projectHeadStatus = proceessApprovals(bookingFormData.approvals.projectHead.status);\r\n        \r\n        const salesAndmarketingHeadStatus = proceessApprovals(\r\n            bookingFormData.approvals.projectHead.status === null || bookingFormData.approvals.projectHead.status ?\r\n                bookingFormData.approvals.salesAndMarketingHead.status :\r\n                false\r\n        );\r\n        \r\n        const projectDirectorStatus = proceessApprovals(\r\n            (bookingFormData.approvals.projectHead.status === null || bookingFormData.approvals.projectHead.status) &&\r\n                (bookingFormData.approvals.salesAndMarketingHead.status === null || bookingFormData.approvals.salesAndMarketingHead.status) ?\r\n                bookingFormData.approvals.projectDirector.status :\r\n                false\r\n        );\r\n\r\n        approverContainerJSX.push((\r\n            <div className={STYLES.approverContainer} key={1}>\r\n                <div className={projectHeadStatus.containerClassName}>\r\n                    {projectHeadStatus.iconToDisplay}\r\n                    <p>{bookingFormData.approvals.projectHead.displayMessage}</p>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        approverContainerJSX.push((\r\n            <div className={STYLES.approverContainer} key={2}>\r\n                <div className={salesAndmarketingHeadStatus.containerClassName}>\r\n                    {salesAndmarketingHeadStatus.iconToDisplay}\r\n                    <p>{bookingFormData.approvals.salesAndMarketingHead.displayMessage}</p>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        approverContainerJSX.push((\r\n            <div className={STYLES.approverContainer} key={3}>\r\n                <div className={STYLES.noAfterContent + ' ' + projectDirectorStatus.containerClassName}>\r\n                    {projectDirectorStatus.iconToDisplay}\r\n                    <p>{bookingFormData.approvals.projectDirector.displayMessage}</p>\r\n                </div>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    // To reload window\r\n    useEffect(() => {\r\n        if(!reloadComp) return;\r\n        window.location.reload()\r\n    }, [reloadComp])\r\n\r\n    // Initial Load\r\n    useEffect(() => {\r\n        // Fetching booking form data\r\n        (async () => {\r\n            try {\r\n                const url = props.baseURL + '/' + bookingFormId + '/view';\r\n                const timeout = 1; //In Secs\r\n\r\n                const data = await sendRequest({ url, timeout });\r\n\r\n                const dateValuesToFormat = ['coApp_dateOfBirth', 'dateOfBirth'];\r\n                const jsonStringToParse = ['presentAddress', 'permanentAddress', 'coApp_presentAddress', 'coApp_permanentAddress', 'officeAddress', 'notes', 'approvalHistory'];\r\n                const autoSelectFormating = ['Project', 'ProjectUnit'];\r\n\r\n                if (isEmpty(data)) throw Error('No Data Found');\r\n\r\n                Object.keys(data).forEach(key => {\r\n                    if (data[key] === null) {\r\n                        data[key] = (dateValuesToFormat.includes(key)) ? null : '';\r\n                        return;\r\n                    }\r\n\r\n                    if (jsonStringToParse.includes(key) && typeof data[key] !== 'object') {\r\n                        data[key] = JSON.parse(data[key])\r\n                        return\r\n                    }\r\n\r\n                    if (dateValuesToFormat.includes(key)) {\r\n                        data[key] = moment(data[key])\r\n                        return\r\n                    }\r\n\r\n                    if (autoSelectFormating.includes(key)) {\r\n                        data[key] = { ...data[key], label: data[key].name }\r\n                    }\r\n                });\r\n\r\n                VIEW_DATA.paymentConfirmation   = { fileName: null, data: null };\r\n                VIEW_DATA.aadhar                = { fileName: null, data: null };\r\n                VIEW_DATA.panCard               = { fileName: null, data: null };\r\n                VIEW_DATA.applicant             = { fileName: null, data: null };\r\n                VIEW_DATA.coApplicant           = { fileName: null, data: null };\r\n                VIEW_DATA.priceSheet            = { fileName: null, data: null };\r\n\r\n                setBookingFormData(data);\r\n                setCpNameViewState(channelPartnerLabels.includes((data?.source?.label)? data.source.label.toLowerCase() : ''))\r\n            } catch (error) {\r\n                setBookingFormData({ error });\r\n            }\r\n        })();\r\n\r\n        // fetching projects data\r\n        (async () => {\r\n            try {\r\n                const url = '/projects/list-all';\r\n                const projectsData = await sendRequest({ url, showLoader: false });\r\n                setProjectState(prev => ({ ...prev, projects: projectsData.map(prj => ({ ...prj, label: prj.name })) }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })();\r\n\r\n        // fetching source data\r\n        (async() => {\r\n            try {\r\n                const url = '/source/retrive-source-with-subsource';\r\n                const sourceData = await sendRequest({ url, showLoader: false });\r\n                setSourceData(prev => ({ ...prev, sourceWithSubSource: sourceData }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Change in Project triggers a callout to fetch the related units of the selected project\r\n    useEffect(() => {\r\n        // fetching projects unit data\r\n        (async () => {\r\n            try {\r\n                if (!bookingFormData?.Project?.id) return;\r\n\r\n                const url = `/projects/${bookingFormData?.Project.id}/fetch-units`;\r\n                const projectUnitsData = await sendRequest({ url });\r\n                setProjectState(prev => ({ ...prev, projectUnits: projectUnitsData.map(prjUnit => ({ ...prjUnit, label: prjUnit.name })) }))\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects unit data!', title: 'Request Failed!', severity: 'error' }))\r\n            }\r\n        })()\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [bookingFormData?.Project])\r\n\r\n    // Input disable controller : Disables user input if the bookingform is approved or if the user does not have the edit access\r\n    useEffect(() => {\r\n        if (bookingFormData?.status === undefined || (editable && bookingFormData.status === isEditable)) return;\r\n        setIsEditableState(editable && bookingFormData.status !== 'Approved');\r\n    }, [editable, bookingFormData?.status, isEditable])\r\n\r\n    // Controlling Sub Source Field and Fethcing Channel Partner Information if cp is selected as source\r\n    useEffect(() => {\r\n        if(isEmpty(sourceData.sourceWithSubSource)) return;\r\n\r\n        if(isEmpty(bookingFormData?.source?.id)){\r\n            setSourceData(prev => ({ ...prev, currentSubSourceForSource: [] }))\r\n            return;\r\n        }\r\n\r\n        const source = sourceData.sourceWithSubSource.filter(source => source.id === bookingFormData.source.id);\r\n\r\n        // Fethcing channel partner information\r\n        if(channelPartnerLabels.includes(bookingFormData.source.label) && isEmpty(channelPartnerData)){\r\n            const channelPartnerUrl = '/channel-partner/view-all';\r\n            sendRequest({ url: channelPartnerUrl })\r\n            .then(responseData => {\r\n                const modifiedChannelPartner = responseData.map(cp => ({ ...cp, label: cp.name }))\r\n                setChannelPartnerData(modifiedChannelPartner);\r\n            })\r\n            .catch(err => {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\r\n            })\r\n        }\r\n\r\n        setSourceData(prev => ({ ...prev, currentSubSourceForSource: source[0]?.subsources || null }));\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [bookingFormData?.source, sourceData.sourceWithSubSource])\r\n\r\n    // Used to fetch or display locally cached user uploaded documents\r\n    async function viewUploadedDocuments(event) {\r\n        const type = event.target.dataset.type;\r\n        const modalPayload = { imgSrc: '', imgAlt: '', type };\r\n\r\n        async function fetchData() {\r\n            try {\r\n                const url = props.baseURL + '/' + bookingFormId + '/retrieve-attachments?retrieve=' + type;\r\n                return await sendRequest({ url });\r\n            } catch (err) {\r\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? `Failed to fetch ${type}!`, title: 'Request Failed!', severity: 'error' }))\r\n                return null;\r\n            }\r\n        }\r\n\r\n        if (type === 'PAYMENT_COPY') {\r\n            if (isEmpty(VIEW_DATA.paymentConfirmation.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.paymentConfirmation.fileName = responsePayload.fileName;\r\n                VIEW_DATA.paymentConfirmation.data = responsePayload.PAYMENT_COPY;\r\n            }\r\n\r\n            if (VIEW_DATA.paymentConfirmation.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.paymentConfirmation.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.paymentConfirmation.data;\r\n            modalPayload.imgAlt = 'Payment Confirmation: ' + VIEW_DATA.paymentConfirmation.fileName;\r\n        }\r\n\r\n        if (type === 'AADHAR_COPY') {\r\n            if (isEmpty(VIEW_DATA.aadhar.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.aadhar.fileName = responsePayload.fileName;\r\n                VIEW_DATA.aadhar.data = responsePayload.AADHAR_COPY;\r\n            }\r\n\r\n            if (VIEW_DATA.aadhar.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.aadhar.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.aadhar.data;\r\n            modalPayload.imgAlt = 'Aadhar Card: ' + VIEW_DATA.aadhar.fileName;\r\n        }\r\n\r\n        if (type === 'PAN_COPY') {\r\n            if (isEmpty(VIEW_DATA.panCard.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.panCard.fileName = responsePayload.fileName;\r\n                VIEW_DATA.panCard.data = responsePayload.PAN_COPY;\r\n            }\r\n\r\n            if (VIEW_DATA.panCard.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.panCard.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.panCard.data;\r\n            modalPayload.imgAlt = 'Pan Card: ' + VIEW_DATA.panCard.fileName;\r\n        }\r\n\r\n        if (type === 'PHOTO_OF_APPLICANT') {\r\n            if (isEmpty(VIEW_DATA.applicant.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.applicant.fileName = responsePayload.fileName;\r\n                VIEW_DATA.applicant.data = responsePayload.PHOTO_OF_APPLICANT;\r\n            }\r\n\r\n            if (VIEW_DATA.applicant.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.applicant.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.applicant.data;\r\n            modalPayload.imgAlt = 'Photo Of Applicant: ' + VIEW_DATA.applicant.fileName;\r\n        }\r\n\r\n        if (type === 'PHOTO_OF_CO_APPLICANT') {\r\n            if (isEmpty(VIEW_DATA.coApplicant.data)) {\r\n                const responsePayload = await fetchData();\r\n                if (responsePayload === null) return;\r\n                VIEW_DATA.coApplicant.fileName = responsePayload.fileName;\r\n                VIEW_DATA.coApplicant.data = responsePayload.PHOTO_OF_CO_APPLICANT;\r\n            }\r\n\r\n            if (VIEW_DATA.coApplicant.fileName.endsWith('.pdf')){\r\n                openBase64NewTab(VIEW_DATA.coApplicant.data);\r\n                return;\r\n            }\r\n\r\n            modalPayload.imgSrc = VIEW_DATA.coApplicant.data;\r\n            modalPayload.imgAlt = 'Photo Of Co-Applicant: ' + VIEW_DATA.coApplicant.fileName;\r\n        }\r\n\r\n        if (type === 'PRICE_SHEET') {\r\n                if (isEmpty(VIEW_DATA.priceSheet.data)) {\r\n                    const responsePayload = await fetchData();\r\n                    if (responsePayload === null) return;\r\n                    VIEW_DATA.priceSheet.fileName = responsePayload.fileName;\r\n                    VIEW_DATA.priceSheet.data = responsePayload.PRICE_SHEET;\r\n                }\r\n\r\n                setPriceSheetMenuState();\r\n                openBase64NewTab(VIEW_DATA.priceSheet.data);\r\n        }\r\n\r\n        setModalImageState(modalPayload);\r\n    }\r\n\r\n    function downloadCurrentlyViewingData(){\r\n        \r\n    }\r\n\r\n    // Submits the user form inputs\r\n    async function handelFormSubmission(event) {\r\n        try {\r\n            event.preventDefault();\r\n            const payload = { id: bookingFormId };\r\n\r\n            if(bookingFormData.dateOfBirth)         payload.dateOfBirth         = bookingFormData.dateOfBirth;\r\n            if(bookingFormData.coApp_dateOfBirth)   payload.coApp_dateOfBirth   = bookingFormData.coApp_dateOfBirth;\r\n            if(bookingFormData.Project)             payload.Project             = bookingFormData.Project;\r\n            if(bookingFormData.ProjectUnit)         payload.ProjectUnit         = bookingFormData.ProjectUnit;\r\n            if(bookingFormData.source)              payload.source              = bookingFormData.source;\r\n            if(bookingFormData.subsource)           payload.subsource           = bookingFormData.subsource;\r\n            if(bookingFormData.channelpartner)      payload.channelpartner      = bookingFormData.channelpartner;\r\n            if(bookingFormData.facing)              payload.facing              = bookingFormData.facing;\r\n\r\n            for (const el of event.target.elements) {\r\n                const type = el.type;\r\n                const name = el.name;\r\n                const value = el.value;\r\n\r\n                if (!['text', 'checkbox', 'number'].includes(type)) continue;\r\n\r\n                if (!name) continue;\r\n\r\n                if (name.includes('.')) {\r\n                    const processedName = name.split('.');\r\n                    if (!payload[processedName[0]]) payload[processedName[0]] = {};\r\n                    payload[processedName[0]][processedName[1]] = value;\r\n                    continue;\r\n                }\r\n\r\n                payload[name] = (type === 'checkbox') ? el.checked : value;\r\n            }\r\n\r\n            const url = props.baseURL + '/' + bookingFormId + '/update';\r\n            const method = 'POST';\r\n            const body = JSON.stringify(payload);\r\n            const headers = { \"Content-Type\": \"application/json\" };\r\n\r\n            const response = await sendRequest({ url, method, body, headers });\r\n\r\n            dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Record updated!', title: 'Request Completed!', severity: 'success' }))\r\n\r\n            // setReloadComp(prev => !prev);\r\n        } catch (err) {\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? `Failed to update record`, title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    function handelPriceSheetFileSelection(event) {\r\n        const from = event.target.dataset.from;\r\n\r\n        if (from === 'MENU_ITEM') {\r\n            const inputElement = document.createElement('input');\r\n            inputElement.style.display = 'none';\r\n            inputElement.type = 'file';\r\n            inputElement.accept = 'application/pdf';\r\n            inputElement.dataset['from'] = 'INPUT_ELEM';\r\n            const teardown = () => {\r\n                document.body.removeEventListener('focus', teardown, true);\r\n                setTimeout(() => {\r\n                    document.body.removeChild(inputElement);\r\n                }, 1000);\r\n            }\r\n            document.body.addEventListener('focus', teardown, true);\r\n            document.body.appendChild(inputElement);\r\n            inputElement.onchange = handelPriceSheetFileSelection;\r\n            inputElement.click();\r\n        }\r\n\r\n        if (from === 'INPUT_ELEM') {\r\n            const file = event.target.files[0]\r\n            const type = file.type;\r\n            const fileName = file.name;\r\n\r\n            if (type !== 'application/pdf')\r\n                return dispatch(AlertSliceActions.showAlert({ message: 'Only PDF file types are supported!', title: 'Request Failed!', severity: 'error' }))\r\n\r\n            if (!window.confirm(`Filename: ${fileName}\\nAre you sure that you want to upload this file?`)) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = async () => {\r\n                try {\r\n                    const url = props.baseURL + '/' + bookingFormId + '/upload-attachments?upload=PRICE_SHEET';\r\n                    const method = 'POST';\r\n                    const headers = { 'content-type': 'application/json' };\r\n                    const data = reader.result.split(',')[1];\r\n                    const body = JSON.stringify({ fileName, type, data });\r\n\r\n                    const response = await sendRequest({ url, method, body, headers });\r\n\r\n                    VIEW_DATA.priceSheet.fileName = fileName;\r\n                    VIEW_DATA.priceSheet.data = data;\r\n                    dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Document upload successfully', title: 'Request Completed!', severity: 'success' }));\r\n                    setPriceSheetMenuState();\r\n                } catch (error) {\r\n                    dispatch(AlertSliceActions.showAlert({ message: error.msg || 'Document upload failed', title: 'Request Failed!', severity: 'error' }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async function resetApprovalsForUnlockingBookingForm(){\r\n        try{\r\n            if(!window.confirm('All the approval\\'s progress will be lost. Would you like to proceed?')) return;\r\n\r\n            const url = props.baseURL + '/' + bookingFormId + '/reset-approvals-and-unlock-bookingform';\r\n            const method = 'POST';\r\n            const headers = { 'content-type': 'application/json' };\r\n\r\n            await sendRequest({ url, method, headers });\r\n\r\n            setReloadComp(prev => !prev);\r\n        } catch(err){\r\n            dispatch(AlertSliceActions.showAlert({ message: err.msg || 'Failed to process request', title: 'Request Failed!', severity: 'error' }))\r\n        }\r\n    }\r\n\r\n    function projectChangeHandler(_, val) {\r\n        setBookingFormData(prev => ({ ...prev, Project: val, ProjectUnit: null }));\r\n        if (!val) setProjectState(prev => ({ ...prev, projectUnits: [] }))\r\n    }\r\n\r\n    function sourceInputChangeHandler(_, val){        \r\n        const isCPSelected = channelPartnerLabels.includes(val.label.toLowerCase());\r\n        setCpNameViewState(isCPSelected);\r\n        setBookingFormData(prev => ({ \r\n            ...prev, \r\n            source: val, \r\n            subsource: null, \r\n            channelpartner: isCPSelected? prev.channelpartner : null\r\n        }))\r\n    }\r\n\r\n    function genShareableLinkPopupCtrl(event){\r\n        setGenShareableLinkState(Boolean(event?.target));\r\n    }\r\n\r\n    /* If error occured while fetcing the data rendering error msg instead of data view*/\r\n    if (bookingFormData?.error){\r\n        return (\r\n            <div className={STYLES.container}>\r\n                <h2 style={{ textAlign: 'center' }}>{bookingFormData.error.msg || `Failed to fetch booking form data from \"${bookingFormId}\"`}</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return bookingFormData && (\r\n        <>\r\n            <HeaderView styles={STYLES} bookingFormData={bookingFormData} />\r\n\r\n            <div className={STYLES.container}>\r\n                <div className={TOOLBAR_STYLES.toolBar}>\r\n                    <div className={TOOLBAR_STYLES.left} />\r\n\r\n                    <div className={TOOLBAR_STYLES.right}>\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"New shareable link\">\r\n                                <IconButton onClick={genShareableLinkPopupCtrl}>\r\n                                    <AddLinkIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Refresh\">\r\n                                <IconButton onClick={(e) => setReloadComp(prev => !prev)}>\r\n                                    <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Download\">\r\n                                <span>\r\n                                    <IconButton disabled>\r\n                                        <DownloadIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Re-Notify for approvals\">\r\n                                <span>\r\n                                    <IconButton disabled>\r\n                                        <CampaignIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Unlock Booking Form\">\r\n                                <span>\r\n                                    <IconButton disabled={bookingFormData.status === 'Pending'} onClick={resetApprovalsForUnlockingBookingForm}>\r\n                                        <LockOpenIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </span>\r\n\r\n                        <span className={TOOLBAR_STYLES.icon}>\r\n                            <Tooltip title=\"Soft Delete\">\r\n                                <span>\r\n                                    <IconButton disabled>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <main className={STYLES.bookingFormConainter}>\r\n                <form onSubmit={handelFormSubmission} onKeyDown={e => e.key === 'Enter' ? e.preventDefault() : ''}>\r\n                    <div className={`${STYLES.container} ${STYLES.bfData}`}>\r\n                        {/* Personal Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Personal Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Full Name\"\r\n                                    name=\"fullName\"\r\n                                    defaultValue={bookingFormData.fullName}\r\n                                    disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    required\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Email Id\"\r\n                                    name=\"emailId\"\r\n                                    defaultValue={bookingFormData.emailId}\r\n                                    disabled={!isEditable}\r\n                                // onChange={handelBookingFormDataChange}\r\n                                />\r\n\r\n                                <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                    <DatePicker\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Date Of Birth\"\r\n                                        defaultValue={bookingFormData.dateOfBirth}\r\n                                        name='dateOfBirth'\r\n                                        disabled={!isEditable}\r\n                                        disableFuture\r\n                                        onChange={date => setBookingFormData(prev => ({ ...prev, dateOfBirth: date }))}\r\n                                    />\r\n                                </LocalizationProvider>\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"Gender\">Gender</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"Gender\"\r\n                                        defaultValue={bookingFormData.gender}\r\n                                        name=\"gender\"\r\n                                        label=\"Gender\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    >\r\n                                        {GENDERS.map(gender => <MenuItem value={gender} key={`PI-${gender}`}>{gender}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"Nationality\">Nationality</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"Nationality\"\r\n                                        defaultValue={bookingFormData.nationality}\r\n                                        name=\"nationality\"\r\n                                        label=\"Nationality\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    >\r\n                                        {NATIONALITIES.map(nat => <MenuItem value={nat} key={`PI-${nat}`}>{nat}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Mobile Number\"\r\n                                    defaultValue={bookingFormData.mobileNumber}\r\n                                    name=\"mobileNumber\"\r\n                                    disabled={!isEditable}\r\n                                // onChange={handelBookingFormDataChange}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Alternate Mobile Number\"\r\n                                    defaultValue={bookingFormData.alternateMobileNumber}\r\n                                    name=\"alternateMobileNumber\"\r\n                                    disabled={!isEditable}\r\n                                // onChange={handelBookingFormDataChange}\r\n                                />\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"MaritalStatus\">Marital Status</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"MaritalStatus\"\r\n                                        label=\"MaritalStatus\"\r\n                                        defaultValue={bookingFormData.maritalStatus}\r\n                                        name=\"maritalStatus\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    >\r\n                                        {MARITAL_STATUS.map(ms => <MenuItem value={ms} key={`PI-${ms}`}>{ms}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"wantToAdd_CoApp\">Want to add Co Applicant?</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"wantToAdd_CoApp\"\r\n                                        label=\"PresentAddressType\"\r\n                                        defaultValue={bookingFormData.wantToAdd_CoApp}\r\n                                        name=\"wantToAdd_CoApp\"\r\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, wantToAdd_CoApp: e.target.value }))}\r\n                                    >\r\n                                        {CO_APPLICANT_OPTIONS.map(opt => <MenuItem value={opt} key={`PI-${opt}`}>{opt}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl className={STYLES.inputContainer} disabled>\r\n                                    <InputLabel id=\"PresentAddressType\" disabled>Present Address Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"PresentAddressType\"\r\n                                        label=\"PresentAddressType\"\r\n                                        defaultValue={bookingFormData.permanentAddressType}\r\n                                        name=\"permanentAddressType\"\r\n                                        disabled\r\n                                    >\r\n                                        {PERMANENT_ADDRESS_TYPES.map(type => <MenuItem value={type} key={`PI-${type}`}>{type}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={STYLES.data}>\r\n                                <div className={STYLES.addressMainContainer}>\r\n                                    <label>Present Address</label>\r\n                                    <div className={STYLES.addressContainer}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 1\"\r\n                                            defaultValue={bookingFormData.presentAddress?.addressLine1}\r\n                                            name=\"presentAddress.addressLine1\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 2\"\r\n                                            defaultValue={bookingFormData.presentAddress?.addressLine2}\r\n                                            name=\"presentAddress.addressLine2\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"City\"\r\n                                                defaultValue={bookingFormData.presentAddress?.city}\r\n                                                name=\"presentAddress.city\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"State\"\r\n                                                defaultValue={bookingFormData.presentAddress?.state}\r\n                                                name=\"presentAddress.state\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Country\"\r\n                                                defaultValue={bookingFormData.presentAddress?.country}\r\n                                                name=\"presentAddress.country\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Pincode\"\r\n                                                defaultValue={bookingFormData.presentAddress?.pincode}\r\n                                                name=\"presentAddress.pincode\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={STYLES.addressMainContainer}>\r\n                                    <label>Permanent Address</label>\r\n                                    <div className={STYLES.addressContainer}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 1\"\r\n                                            defaultValue={bookingFormData.permanentAddress?.addressLine1}\r\n                                            name=\"permanentAddress.addressLine1\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 2\"\r\n                                            defaultValue={bookingFormData.permanentAddress?.addressLine2}\r\n                                            name=\"permanentAddress.addressLine2\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"City\"\r\n                                                defaultValue={bookingFormData.permanentAddress?.city}\r\n                                                name=\"permanentAddress.city\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"State\"\r\n                                                defaultValue={bookingFormData.permanentAddress?.state}\r\n                                                name=\"permanentAddress.state\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Country\"\r\n                                                defaultValue={bookingFormData.permanentAddress?.country}\r\n                                                name=\"permanentAddress.country\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Pincode\"\r\n                                                defaultValue={bookingFormData.permanentAddress?.pincode}\r\n                                                name=\"permanentAddress.pincode\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Co-Applicant Information */}\r\n                        {\r\n                            bookingFormData.wantToAdd_CoApp === 'Yes' &&\r\n                            <section>\r\n                                <div className={STYLES.headerInformation}>\r\n                                    <p>\r\n                                        <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                            <DoubleArrowIcon />\r\n                                        </IconButton>\r\n                                        Co-Applicant Information\r\n                                    </p>\r\n                                </div>\r\n                                <div className={STYLES.data}>\r\n                                    <TextField\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Co-Applicant's Full Name\"\r\n                                        name=\"coApp_FullName\"\r\n                                        defaultValue={bookingFormData.coApp_FullName}\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Co-Applicant's Email Id\"\r\n                                        name=\"coApp_emailId\"\r\n                                        defaultValue={bookingFormData.coApp_emailId}\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    />\r\n\r\n                                    <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                                        <DatePicker\r\n                                            className={STYLES.inputContainer}\r\n                                            label=\"Co-Applicant's Date Of Birth\"\r\n                                            defaultValue={bookingFormData.coApp_dateOfBirth}\r\n                                            name='coApp_dateOfBirth'\r\n                                            disabled={!isEditable}\r\n                                            disableFuture\r\n                                            onChange={date => setBookingFormData(prev => ({ ...prev, coApp_dateOfBirth: date }))}\r\n                                        />\r\n                                    </LocalizationProvider>\r\n\r\n                                    <FormControl className={STYLES.inputContainer}>\r\n                                        <InputLabel id=\"Co-Applicant's Gender\">Co-Applicant's Gender</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Co-Applicant's Gender\"\r\n                                            defaultValue={bookingFormData.coApp_gender}\r\n                                            name=\"coApp_gender\"\r\n                                            label=\"Co-Applicant's Gender\"\r\n                                            disabled={!isEditable}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        >\r\n                                            {GENDERS.map(gender => <MenuItem value={gender} key={`PI-${gender}`}>{gender}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={STYLES.inputContainer}>\r\n                                        <InputLabel id=\"Co-Applicant's Nationality\">Co-Applicant's Nationality</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Co-Applicant's Nationality\"\r\n                                            defaultValue={bookingFormData.coApp_nationality}\r\n                                            name=\"coApp_nationality\"\r\n                                            label=\"Co-Applicant's Nationality\"\r\n                                            disabled={!isEditable}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        >\r\n                                            {NATIONALITIES.map(nat => <MenuItem value={nat} key={`PI-${nat}`}>{nat}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <TextField\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Co-Applicant's Mobile Number\"\r\n                                        defaultValue={bookingFormData.coApp_mobileNumber}\r\n                                        name=\"coApp_mobileNumber\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        className={STYLES.inputContainer}\r\n                                        label=\"Co-Applicant's Alternate Mobile Number\"\r\n                                        defaultValue={bookingFormData.coApp_alternateMobileNumber}\r\n                                        name=\"coApp_alternateMobileNumber\"\r\n                                        disabled={!isEditable}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    />\r\n\r\n                                    <FormControl className={STYLES.inputContainer}>\r\n                                        <InputLabel id=\"coApp_maritalStatus\">Co-Applicant's Marital Status</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"coApp_maritalStatus\"\r\n                                            label=\"Co-Applicant's Marital Status\"\r\n                                            defaultValue={bookingFormData.coApp_maritalStatus}\r\n                                            name=\"coApp_maritalStatus\"\r\n                                            disabled={!isEditable}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        >\r\n                                            {MARITAL_STATUS.map(ms => <MenuItem value={ms} key={`PI-${ms}`}>{ms}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <FormControl className={STYLES.inputContainer} disabled>\r\n                                        <InputLabel id=\"Co-Applicant's PresentAddressType\" disabled>Co-Applicant's PresentAddressType</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"Co-Applicant's PresentAddressType\"\r\n                                            label=\"Co-Applicant's PresentAddressType\"\r\n                                            defaultValue={bookingFormData.coApp_permanentAddressType}\r\n                                            name=\"coApp_permanentAddressType\"\r\n                                            disabled\r\n                                        >\r\n                                            {PERMANENT_ADDRESS_TYPES.map(type => <MenuItem value={type} key={`PI-${type}`}>{type}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={STYLES.data}>\r\n                                    <div className={STYLES.addressMainContainer}>\r\n                                        <label>Co-Applicant's Present Address</label>\r\n                                        <div className={STYLES.addressContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Address Line 1\"\r\n                                                defaultValue={bookingFormData.coApp_presentAddress?.addressLine1}\r\n                                                name=\"coApp_presentAddress.addressLine1\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Address Line 2\"\r\n                                                defaultValue={bookingFormData.coApp_presentAddress?.addressLine2}\r\n                                                name=\"coApp_presentAddress.addressLine2\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <div className={STYLES.twoInputContainer}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"City\"\r\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.city}\r\n                                                    name=\"coApp_presentAddress.city\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"State\"\r\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.state}\r\n                                                    name=\"coApp_presentAddress.state\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                            </div>\r\n                                            <div className={STYLES.twoInputContainer}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Country\"\r\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.country}\r\n                                                    name=\"coApp_presentAddress.country\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Pincode\"\r\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.pincode}\r\n                                                    name=\"coApp_presentAddress.pincode\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={STYLES.addressMainContainer}>\r\n                                        <label>Co-Applicant's Permanent Address</label>\r\n                                        <div className={STYLES.addressContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Address Line 1\"\r\n                                                defaultValue={bookingFormData.coApp_permanentAddress?.addressLine1}\r\n                                                name=\"coApp_permanentAddress.addressLine1\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Address Line 2\"\r\n                                                defaultValue={bookingFormData.coApp_permanentAddress?.addressLine2}\r\n                                                name=\"coApp_permanentAddress.addressLine2\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <div className={STYLES.twoInputContainer}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"City\"\r\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.city}\r\n                                                    name=\"coApp_permanentAddress.city\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"State\"\r\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.state}\r\n                                                    name=\"coApp_permanentAddress.state\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                            </div>\r\n                                            <div className={STYLES.twoInputContainer}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Country\"\r\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.country}\r\n                                                    name=\"coApp_permanentAddress.country\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Pincode\"\r\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.pincode}\r\n                                                    name=\"coApp_permanentAddress.pincode\"\r\n                                                    // onChange={handelBookingFormDataChange}\r\n                                                    disabled={!isEditable}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        }\r\n\r\n                        {/* Project Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Project Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={projectState.projects}\r\n                                    value={bookingFormData.Project}\r\n                                    onChange={projectChangeHandler}\r\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                    noOptionsText=\"Fetching Projects Data..\"\r\n                                    renderInput={(params) => <TextField {...params} label=\"Projects\" required />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={projectState.projectUnits}\r\n                                    value={bookingFormData.ProjectUnit}\r\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, ProjectUnit: val }))}\r\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                    noOptionsText=\"Please select a project to show its related units\"\r\n                                    renderInput={(params) => <TextField {...params} label=\"Project Units\" required />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                            </div>\r\n                                \r\n                            <div className={STYLES.data}>\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Current Unit Price\"\r\n                                    name=\"currentUnitPrice\"\r\n                                    defaultValue={bookingFormData.currentUnitPrice}\r\n                                    type=\"number\"\r\n                                    disabled={!isEditable}\r\n                                    required\r\n                                />\r\n                            \r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Total cost\"\r\n                                    name=\"totalCost\"\r\n                                    defaultValue={bookingFormData.totalCost}\r\n                                    type=\"number\"\r\n                                    disabled={!isEditable}\r\n                                    required\r\n                                />\r\n                        \r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Land Area / BUA / SBA (Sft)\"\r\n                                    name=\"sqft\"\r\n                                    type=\"number\"\r\n                                    defaultValue={bookingFormData.sqft}\r\n                                    disabled={!isEditable}\r\n                                    required\r\n                                />\r\n\r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={['North', 'South', 'East', 'West']}\r\n                                    value={bookingFormData.facing}\r\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, facing: val }))}\r\n                                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Facing\" required />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={STYLES.data}>\r\n                                <FormGroup row sx={{ justifyContent: 'center', width: '50%', marginLeft: 15 }}>\r\n                                    <FormControlLabel\r\n                                        className={STYLES.inputContainer}\r\n                                        control={<Checkbox />}\r\n                                        label=\"Corner\"\r\n                                        labelPlacement=\"end\"\r\n                                        checked={bookingFormData.corner}\r\n                                        name=\"corner\"\r\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, corner: e.target.checked }))}\r\n                                        disabled={!isEditable}\r\n                                        // sx={{ width: 'auto'}}\r\n                                    />\r\n\r\n                                    {/* <Divider orientation=\"vertical\" flexItem /> */}\r\n\r\n                                    <FormControlLabel\r\n                                        className={STYLES.inputContainer}\r\n                                        control={<Checkbox />}\r\n                                        label=\"Park Facing\"\r\n                                        labelPlacement=\"end\"\r\n                                        checked={bookingFormData.parkFacing}\r\n                                        name=\"parkFacing\"\r\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, parkFacing: e.target.checked }))}\r\n                                        disabled={!isEditable}\r\n                                        // sx={{ width: 'auto', marginLeft: 1 }}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Payment Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Payment Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"ModeOfPayment\">Mode Of Payment</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"ModeOfPayment\"\r\n                                        label=\"ModeOfPayment\"\r\n                                        name=\"modeOfPayment\"\r\n                                        defaultValue={bookingFormData.modeOfPayment}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        disabled={!isEditable}\r\n                                    >\r\n                                        {MODE_OF_PAYMENT.map(mop => <MenuItem value={mop} key={mop}>{mop}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <FormControl className={STYLES.inputContainer}>\r\n                                    <InputLabel id=\"PaymentType\">Payment Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"PaymentType\"\r\n                                        label=\"PaymentType\"\r\n                                        name=\"paymentType\"\r\n                                        defaultValue={bookingFormData.paymentType}\r\n                                        // onChange={handelBookingFormDataChange}\r\n                                        disabled={!isEditable}\r\n                                    >\r\n                                        {PAYMENT_TYPE.map(pt => <MenuItem value={pt} key={pt}>{pt}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Booking Amount Paid\"\r\n                                    type=\"number\"\r\n                                    name=\"bookingAmountPaid\"\r\n                                    defaultValue={bookingFormData.bookingAmountPaid}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Discount In Rs (₹)\"\r\n                                    type=\"number\"\r\n                                    name=\"discount\"\r\n                                    defaultValue={bookingFormData.discount}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <Button variant=\"outlined\" data-type=\"PAYMENT_COPY\" onClick={viewUploadedDocuments}>View Payment Confirmation</Button>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={e => setPriceSheetMenuState(e.currentTarget)}\r\n                                    endIcon={<KeyboardArrowDownIcon />}\r\n                                >\r\n                                    Price Sheet\r\n                                </Button>\r\n                            </div>\r\n\r\n                            <StyledMenu\r\n                                id=\"notes-menu\"\r\n                                anchorEl={priceSheetMenuState}\r\n                                open={Boolean(priceSheetMenuState)}\r\n                                onClose={e => setPriceSheetMenuState()}\r\n\r\n                            >\r\n                                <MenuItem data-type=\"PRICE_SHEET\" onClick={viewUploadedDocuments}>\r\n                                    <VisibilityIcon />\r\n                                    View\r\n                                </MenuItem>\r\n                                <MenuItem data-from=\"MENU_ITEM\" disabled={!isEditable} onClick={handelPriceSheetFileSelection}>\r\n                                    <FileUploadIcon />\r\n                                    Upload New\r\n                                </MenuItem>\r\n                            </StyledMenu>\r\n                        </section>\r\n\r\n                        {/* KYC Documents */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    KYC Documents\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Aadhar Number\"\r\n                                    name=\"aadharNumber\"\r\n                                    defaultValue={bookingFormData.aadharNumber}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"PAN Number\"\r\n                                    name=\"PANNumber\"\r\n                                    defaultValue={bookingFormData.PANNumber}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <Button variant=\"outlined\" data-type=\"AADHAR_COPY\" onClick={viewUploadedDocuments}>Photo Copy Of Aadhar</Button>\r\n                                <Button variant=\"outlined\" data-type=\"PAN_COPY\" onClick={viewUploadedDocuments}>Photo Copy Of PAN</Button>\r\n                                <Button variant=\"outlined\" data-type=\"PHOTO_OF_APPLICANT\" onClick={viewUploadedDocuments}>photo copy Of Applicant</Button>\r\n                                {\r\n                                    bookingFormData.wantToAdd_CoApp === 'Yes' &&\r\n                                    <Button variant=\"outlined\" data-type=\"PHOTO_OF_CO_APPLICANT\" onClick={viewUploadedDocuments}>photo copy Of co Applicant</Button>\r\n                                }\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Source / Channel Partner Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Source / Channel Partner Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={sourceData.sourceWithSubSource.map(source => ({ id: source.id, label: source.label }))}\r\n                                    value={bookingFormData.source}\r\n                                    onChange={sourceInputChangeHandler}\r\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                    loadingText='Fetching source infromation'\r\n                                    renderInput={(params) => <TextField {...params} label=\"Source\" required />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                                \r\n                                <Autocomplete\r\n                                    className={STYLES.inputContainer}\r\n                                    disablePortal\r\n                                    options={sourceData.currentSubSourceForSource}\r\n                                    value={bookingFormData.subsource}\r\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, subsource: val }))}\r\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Sub Source\" />}\r\n                                    disabled={!isEditable}\r\n                                />\r\n                                {\r\n                                    cpNameView && \r\n                                    <Autocomplete\r\n                                        className={STYLES.inputContainer}\r\n                                        disablePortal\r\n                                        options={channelPartnerData}\r\n                                        value={bookingFormData.channelpartner}\r\n                                        onChange={(_, val) => setBookingFormData(prev => ({ ...prev, channelpartner: val }))}\r\n                                        isOptionEqualToValue={(opt, val) => opt.id === val.id}\r\n                                        renderInput={(params) => <TextField {...params} label=\"Channel Partner\" required />}\r\n                                        disabled={!isEditable}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Professional Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Professional Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Company Name\"\r\n                                    defaultValue={bookingFormData.companyName}\r\n                                    name=\"companyName\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Profession\"\r\n                                    defaultValue={bookingFormData.profession}\r\n                                    name=\"profession\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Occupation\"\r\n                                    defaultValue={bookingFormData.occupation}\r\n                                    name=\"occupation\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Designation\"\r\n                                    defaultValue={bookingFormData.designation}\r\n                                    name=\"designation\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Industry\"\r\n                                    defaultValue={bookingFormData.industry}\r\n                                    name=\"industry\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Annual Income\"\r\n                                    defaultValue={bookingFormData.annualIncome}\r\n                                    name=\"annualIncome\"\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <div className={STYLES.addressMainContainer}>\r\n                                    <label>Office Address</label>\r\n                                    <div className={STYLES.addressContainer}>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 1\"\r\n                                            defaultValue={bookingFormData.officeAddress?.addressLine1}\r\n                                            name=\"officeAddress.addressLine1\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            label=\"Address Line 2\"\r\n                                            defaultValue={bookingFormData.officeAddress?.addressLine2}\r\n                                            name=\"officeAddress.addressLine2\"\r\n                                            // onChange={handelBookingFormDataChange}\r\n                                            disabled={!isEditable}\r\n                                        />\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"City\"\r\n                                                defaultValue={bookingFormData.officeAddress?.city}\r\n                                                name=\"officeAddress.city\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"State\"\r\n                                                defaultValue={bookingFormData.officeAddress?.state}\r\n                                                name=\"officeAddress.state\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={STYLES.twoInputContainer}>\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Country\"\r\n                                                defaultValue={bookingFormData.officeAddress?.country}\r\n                                                name=\"officeAddress.country\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Pincode\"\r\n                                                defaultValue={bookingFormData.officeAddress?.pincode}\r\n                                                name=\"officeAddress.pincode\"\r\n                                                // onChange={handelBookingFormDataChange}\r\n                                                disabled={!isEditable}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Other Information */}\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Other Information\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                <FormControlLabel\r\n                                    className={STYLES.inputContainer}\r\n                                    control={<Checkbox />}\r\n                                    label=\"Submitted by user\"\r\n                                    labelPlacement=\"end\"\r\n                                    checked={bookingFormData.submittedByUser}\r\n                                    name=\"submittedByUser\"\r\n                                    onChange={e => setBookingFormData(prev => ({ ...prev, submittedByUser: e.target.checked }))}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <FormControlLabel\r\n                                    className={STYLES.inputContainer}\r\n                                    defaultValue={bookingFormData.agreedToTermsAndCondition}\r\n                                    control={<Checkbox />}\r\n                                    label=\"Agreed to terms & condition\"\r\n                                    disabled\r\n                                    labelPlacement=\"end\"\r\n                                />\r\n\r\n                                <TextField\r\n                                    className={STYLES.inputContainer}\r\n                                    label=\"Purpose Of Purchase\"\r\n                                    name=\"purposeOfPurchase\"\r\n                                    defaultValue={bookingFormData.purposeOfPurchase}\r\n                                    // onChange={handelBookingFormDataChange}\r\n                                    disabled={!isEditable}\r\n                                />\r\n\r\n                                <TextField className={STYLES.inputContainer} label=\"Created By\" value={bookingFormData.BookingFormCreatedBy?.name} disabled />\r\n\r\n                                <TextField className={STYLES.inputContainer} label=\"Updated By\" value={bookingFormData.BookingFormUpdatedBy?.name} disabled />\r\n\r\n                                <TextField className={STYLES.inputContainer} label=\"Created At\" value={moment(bookingFormData.createdAt).format('DD/MM/YYYY HH:MM:SS A')} disabled />\r\n\r\n                                <TextField className={STYLES.inputContainer} label=\"Updated At\" value={moment(bookingFormData.updatedAt).format('DD/MM/YYYY HH:MM:SS A')} disabled />\r\n\r\n                            </div>\r\n                        </section>\r\n\r\n                        {/* Save Information */}\r\n                        {\r\n                            isEditable && (\r\n                                <section>\r\n                                    <div className={STYLES.data}>\r\n                                        <Button variant=\"outlined\" onClick={e => navigate('..')}>Cancel</Button>\r\n                                        <Button variant=\"contained\" type=\"submit\">Save</Button>\r\n                                    </div>\r\n                                </section>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </form>\r\n\r\n                <aside>\r\n                    <div className={`${STYLES.container} ${STYLES.bfNotes}`}>\r\n                        <section>\r\n                            <div className={STYLES.headerInformation}>\r\n                                <p>\r\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                        <DoubleArrowIcon />\r\n                                    </IconButton>\r\n                                    Approvals\r\n                                </p>\r\n                            </div>\r\n                            <div className={STYLES.data}>\r\n                                {approverContainerJSX}\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <NoteHandlerComp\r\n                        styles={STYLES}\r\n                        baseURL={props.baseURL}\r\n                        bookingFormData={bookingFormData}\r\n                        isEditable={isEditable}\r\n                    />\r\n\r\n                    <ApprovalsHandler  \r\n                        styles={STYLES}\r\n                        baseURL={props.baseURL}\r\n                        setReloadComp={setReloadComp}\r\n                        isApprover={bookingFormData.isApprover}\r\n                    />\r\n\r\n                    {\r\n                        !isEmpty(bookingFormData.approvalHistory) && displayApprovalHistory &&\r\n                        <div className={`${STYLES.container} ${STYLES.bfActions}`}>\r\n                            <section>\r\n                                <div className={STYLES.headerInformation}>\r\n                                    <p>\r\n                                        <IconButton disableFocusRipple={true} disableRipple={true}>\r\n                                            <DoubleArrowIcon />\r\n                                        </IconButton>\r\n                                        Approval History\r\n                                    </p>\r\n                                </div>\r\n                                <div className={STYLES.data} style={{ maxHeight: '40vh', overflow: 'auto' }}>\r\n                                    {\r\n                                        bookingFormData.approvalHistory.map(history => (\r\n                                            <div className={STYLES.approvalHistoryContainer} key={history.timestamp}>\r\n                                                <div>\r\n                                                    <div className={STYLES.note}>\r\n                                                        <p>\r\n                                                            {history.status + ' '}\r\n                                                            on \r\n                                                            {moment(history.timestamp).isValid(() => {})? moment(history.timestamp).utcOffset('+05:30').format(' DD/MM/YY [at] hh:mm A') : history.timestamp}\r\n                                                        </p>\r\n                                                            {(!isEmpty(history.note)) && <p><strong><em>Note</em> : </strong>{history.note}</p>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    }\r\n\r\n                </aside>\r\n            </main>\r\n\r\n            <CreateUserShareableLink open={genShareableLink} handelModelClose={genShareableLinkPopupCtrl}/>\r\n\r\n            {/* Image Modal */}\r\n            <Modal sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: 'rgba(0,0,0, .8)' }} open={Boolean(modalImageState.imgSrc)} onClose={() => setModalImageState({ imgSrc: '', imgAlt: '' })}>\r\n                <div>\r\n                    <DownloadIcon className={STYLES.downloadIcon} onClick={downloadCurrentlyViewingData} />\r\n                    <CloseIcon className={STYLES.closeIcon} onClick={() => setModalImageState({ imgSrc: '', imgAlt: '' })} />\r\n                    <img className={STYLES.imgViewer} ref={modelImgRef} src={'data:image/png;base64,' + modalImageState.imgSrc} alt={modalImageState.imgAlt} />\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View;\r\n\r\n\r\n\r\n// Email conf\r\n// Filtet\r\n// CP Conf\r\n// Id firld\r\n// payment\r\n// link exp\r\n// note with appr\r\n// send back\r\n// rec notifi\r\n\r\n// Source conf","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"View_container__sQgk9\",\"quick-view-conatiner\":\"View_quick-view-conatiner__45-CY\",\"booking-form-conainter\":\"View_booking-form-conainter__H0lTA\",\"bf-data\":\"View_bf-data__lQfgU\",\"bf-actions\":\"View_bf-actions__olGmT\",\"bf-notes\":\"View_bf-notes__ro1wl\",\"approval-history-container\":\"View_approval-history-container__3Zwp-\",\"note-container\":\"View_note-container__46qHo\",\"note-from\":\"View_note-from__OCOek\",\"note\":\"View_note__37jqP\",\"approval-info\":\"View_approval-info__cVPnW\",\"icon\":\"View_icon__nSRVe\",\"header-information\":\"View_header-information__23IvD\",\"data\":\"View_data__K17TZ\",\"address-main-container\":\"View_address-main-container__JDmxu\",\"input-container\":\"View_input-container__RqOjh\",\"approver-container\":\"View_approver-container__H+Lt2\",\"information\":\"View_information__xlilI\",\"rejected\":\"View_rejected__-zQ4j\",\"pending\":\"View_pending__atfyJ\",\"approved\":\"View_approved__k0V9v\",\"no-after-content\":\"View_no-after-content__Kag9e\",\"img-viewer\":\"View_img-viewer__0FG2C\",\"download-icon\":\"View_download-icon__ELeoh\",\"close-icon\":\"View_close-icon__sVMwx\",\"modal-note-conatiner\":\"View_modal-note-conatiner__bfoCJ\",\"note-inputs-container\":\"View_note-inputs-container__53sF9\",\"note-actions-container\":\"View_note-actions-container__PEmmn\",\"required\":\"View_required__obQNA\",\"address-container\":\"View_address-container__i7E2L\",\"two-input-container\":\"View_two-input-container__F5aH+\",\"wrong-input\":\"View_wrong-input__UFD2n\",\"disabled\":\"View_disabled__TMt2s\"};","// Functional Imports\r\nimport { useState, useMemo } from \"react\";\r\nimport { useRoutes, useNavigate, Navigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { HeaderSliceActions } from \"../store/header-slice\";\r\nimport { useEffect, lazy, Suspense } from \"react\";\r\nimport { useHttpClientWithNavigate } from \"../utility/http-hook\";\r\n\r\n// Component Imports\r\nimport Loading from \"../componets/Loading/Loading\";\r\nimport ViewAll from \"../Apps/BookingForm/ViewAll/ViewAll\";\r\nimport View from \"../Apps/BookingForm/View/View\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Components Imports (Lazy)\r\nconst Root = lazy(() => import(\"../Apps/BookingForm/Root\"))\r\n\r\nfunction BookingFormPages(){\r\n    const dispatcher            = useDispatch();\r\n    const sendRequest           = useHttpClientWithNavigate();\r\n    const navigate              = useNavigate();\r\n    const baseURL               = '/booking-form';\r\n    const [router, setRouter]   = useState([]);\r\n\r\n    const routes = useMemo(() => [\r\n        { \r\n            index: true, \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <Root baseURL={baseURL}/>,\r\n                </Suspense>\r\n            )\r\n        },\r\n        { \r\n            path: 'view', \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <ViewAll baseURL={baseURL}/> \r\n                </Suspense>\r\n            )\r\n        },    \r\n        { \r\n            path: '/:bookingFormId', \r\n            element: <RedirectToBookingFormView baseURL={baseURL}/> \r\n        },    \r\n        { \r\n            path: ':bookingFormId/view', \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <View baseURL={baseURL}/> \r\n                </Suspense>\r\n            )\r\n        },    \r\n        { \r\n            path: 'reports', \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <p>Will be added soon</p> \r\n                </Suspense>\r\n            )\r\n        },    \r\n        { \r\n            path: '*', \r\n            element: (\r\n                <Suspense fallback={<Loading fallback />}>\r\n                    <Navigate to='/error' state={{ statusText: 'Page Not Found!', status: 404 }} />\r\n                </Suspense>\r\n            )\r\n        }    \r\n    ], []);\r\n\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n            try{\r\n                const response = await sendRequest({ url: '/apps/booking-form/app-headers' });\r\n\r\n                if(!response) return\r\n            \r\n                dispatcher( HeaderSliceActions.setHeaders({ \r\n                    currentApp: 'Booking Form', \r\n                    appTabs: response.allowedtabs.map(tab => ({ ...tab, baseURL })),\r\n                    appPermissions: response.permissions\r\n                }) );\r\n\r\n                setRouter(routes);\r\n            } catch( err ){\r\n                navigate('/error', { state: { status: err.status, data: err.msg } });\r\n            }\r\n        })();\r\n        \r\n    }, [dispatcher, navigate, routes, sendRequest]);\r\n\r\n    ;\r\n    \r\n    return useRoutes(router);\r\n}\r\n\r\nfunction RedirectToBookingFormView(props){\r\n    const { bookingFormId } = useParams();\r\n    return <Navigate to={`${props.baseURL}/${bookingFormId}/view`}  replace={true} />\r\n}\r\n\r\nexport default BookingFormPages;","// Functional imports\r\nimport { HeaderSliceName } from \"../store/header-slice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n/**\r\n * Checks whether the user is allowed to access the tab against the current headers \r\n * @param {String} tabEndpoint \r\n * @returns {[isAllowedToAccessTab: boolean, allowedTabs: [(Map<string, string>)]]}\r\n */\r\nfunction useTabAccessVerifier(tabEndpoint){\r\n    const allowedTabs = useSelector(state => state[HeaderSliceName]).appTabs;\r\n    const isAllowedToAccessTab = allowedTabs.filter(tab => tab.endpoint === tabEndpoint);\r\n\r\n    return [isAllowedToAccessTab.length > 0, allowedTabs];\r\n}\r\n\r\nexport default useTabAccessVerifier;"],"names":["STYLES","cssNameSimplifier","boxStyle","position","top","left","transform","width","bgcolor","border","boxShadow","maxHeight","p","props","useMediaQuery","_jsx","Modal","open","children","_jsxs","Box","sx","IconButton","className","closeIcon","onClick","handelModelClose","CloseIcon","title","_Fragment","Typography","variant","component","textAlign","Divider","marginY","childrenContainer","style","marginRight","styles","StyledTableCell","styled","TableCell","_ref","theme","concat","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","_ref2","action","hover","bookingFormDataReducer","state","type","loadMore","data","length","pop","isEmpty","dispatch","useDispatch","sendRequest","useHttpClientWithNavigate","bookingFromState","dispatchBookingFormState","useReducer","async","fetchBookingFormData","currentUrl","URL","window","location","urlWithFilters","baseURL","search","headers","bookingFormData","url","err","_err$msg","AlertSliceActions","showAlert","message","msg","severity","useEffect","tableContainer","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","map","row","index","dataRow","scope","Link","to","id","fullName","emailId","mobileNumber","Project","name","ProjectUnit","status","submittedByUser","CheckIcon","moment","createdAt","format","BookingFormCreatedBy","noDataFound","loadMoreContainer","Button","TOOLBAR_STYLES","viewAllStyles","userDataReducer","newState","JSON","parse","stringify","dataList","currentDataIndex","showIterator","totalDataLength","fetchBy","setFetchBy","useState","userData","userDataDispatcher","handelDataIteration","handelFetchedUserData","method","autoComplete","onSubmit","event","preventDefault","userinfo","target","elements","userInfo","value","response","marginBottom","display","inputGroup","ToggleButtonGroup","exclusive","onChange","_","newFetchBy","ToggleButton","marginTop","TextField","input","label","required","icon","Tooltip","size","CloudSyncIcon","fetchedDataIterator","e","ChevronLeftIcon","ChevronRightIcon","channelPartnerLabels","sourceData","setSourceData","sourceWithSubSource","currentSubSourceForSource","cpNameView","setCpNameViewState","channelPartnerData","setChannelPartnerData","inputChangeHandler","key","setUserData","prev","_props$userData","_props$userData$sourc","source","filter","includes","then","responseData","modifiedChannelPartner","cp","catch","_err$msg2","_source$","subsources","_props$userData$sourc2","_props$userData$sourc3","toLowerCase","Autocomplete","disablePortal","options","val","isOptionEqualToValue","opt","loadingText","renderInput","params","subSource","noOptionsText","channelpartner","VisuallyHiddenInput","clip","clipPath","height","overflow","bottom","whiteSpace","_userData$priceSheet","_userData$priceSheet2","projectState","setProjectState","projects","projectUnits","project","projectUnit","channelPartner","priceSheet","handelInputChange","file","files","fileName","LoaderSliceActions","setDisplayLoader","from","reader","FileReader","readAsDataURL","onload","result","split","onCloseEvent","projectsData","prj","_userData$project","projectUnitsData","prjUnit","PopupModel","FetchDataFromLeadSquare","FirstName","LastName","trim","EmailAddress","Phone","mx_Project_Name","Source","mx_Sub_Source","mx_Channel_Partner_Name","console","log","_err$msg3","inputContainer","role","undefined","tabIndex","startIcon","CloudUploadIcon","accept","Alert","FileIcon","margin","SourceInfoHandler","importStyles","reduceFilterDataProcess","Set","years","filterType","has","delete","add","filterStatus","filterApplied","displayBadge","searchState","setSearchState","filterDisplay","setFilterDisplay","refreshState","setRefreshState","filters","dispatchFilters","projectsList","setProjectlist","filterParams","useSearchParams","searchBoxRef","useRef","createNewView","setCreateNewView","isAllowedToAccessTab","useTabAccessVerifier","navigate","useNavigate","headerSlice","useSelector","HeaderSliceName","isEditable","appPermissions","updateFilterCondition","applyFilter","urlWithfilters","filterData","currentURL","newURLWIthParams","origin","pathname","Object","keys","forEach","filterName","filterParam","join","searchParams","set","composeFilterParams","history","pushState","get","interval","setTimeout","clearTimeout","current","focus","viewContainer","toolBar","ClickAwayListener","onClickAway","searchConatiner","Badge","invisible","SearchIcon","active","notActive","OutlinedInput","endAdornment","InputAdornment","InfoOutlinedIcon","placeholder","autoFocus","inputRef","right","RefreshIcon","FilterAltIcon","disabled","DownloadIcon","AddIcon","TableView","Drawer","drawer","anchor","onClose","List","filtersList","ListItem","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","_filters$status","ListItemButton","ListItemText","primary","Array","Date","getFullYear","_filters$years","year","_filters$projects","submitted","_filters$submittedByU","filterActions","CreateNew","openBase64NewTab","base64Pdf","blob","base64Data","sliceSize","byteCharacters","atob","bytesLength","slicesCount","Math","ceil","byteArrays","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","base64toBlob","navigator","msSaveOrOpenBlob","blobUrl","createObjectURL","StyledMenu","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","spacing","mode","grey","padding","text","secondary","alpha","main","selectedOpacity","bookingFormId","useParams","notesState","setNotesState","noteMenuAndModalState","setNoteMenuAndModalState","menuAnchor","modalType","noteUserInputState","setNoteUserInputState","note","requriesApproval","noteApprover","setIsEditableState","handelNoteProcessing","newURL","notes","noteId","handelNoteMenuAndModal","alert","currentTarget","approval","checked","container","bfNotes","headerInformation","disableFocusRipple","disableRipple","DoubleArrowIcon","justifyContent","noteContainer","noteFrom","approvalInfo","PendingActionsIcon","CheckCircleOutlineIcon","updatedBy","HighlightOffIcon","MoreVertIcon","anchorEl","Boolean","MenuItem","CheckCircleIcon","CancelIcon","EditNoteIcon","DeleteIcon","keepMounted","modalNoteConatiner","noteInputsContainer","noteTextField","fullWidth","multiline","minRows","maxRows","FormControlLabel","control","Checkbox","labelPlacement","noteActionsContainer","setStatus","setNote","employeeRole","employee","submitApprovals","statusReq","closeModal","setReloadComp","autoclose","isApprover","bfActions","endIcon","SettingsBackupRestoreIcon","DoNotDisturbAltIcon","TaskAltIcon","_props$bookingFormDat","_props$bookingFormDat2","_props$bookingFormDat3","_props$bookingFormDat4","_props$bookingFormDat5","_props$bookingFormDat6","_props$bookingFormDat7","_props$bookingFormDat8","_props$bookingFormDat9","_props$bookingFormDat10","indianRupeesFormater","Intl","NumberFormat","currency","quickViewConatiner","orientation","flexItem","currentUnitPrice","discount","totalCost","sqft","copyIconState","setCopyIconState","ContentCopyIcon","copy","userBookingFormLink","useMemo","rel","href","maxWidth","marginInline","clipboard","writeText","DoneIcon","timeout","GENDERS","NATIONALITIES","MARITAL_STATUS","PERMANENT_ADDRESS_TYPES","MODE_OF_PAYMENT","PAYMENT_TYPE","CO_APPLICANT_OPTIONS","VIEW_DATA","aadhar","panCard","applicant","coApplicant","paymentConfirmation","_bookingFormData$pres","_bookingFormData$pres2","_bookingFormData$pres3","_bookingFormData$pres4","_bookingFormData$pres5","_bookingFormData$pres6","_bookingFormData$perm","_bookingFormData$perm2","_bookingFormData$perm3","_bookingFormData$perm4","_bookingFormData$perm5","_bookingFormData$perm6","_bookingFormData$coAp","_bookingFormData$coAp2","_bookingFormData$coAp3","_bookingFormData$coAp4","_bookingFormData$coAp5","_bookingFormData$coAp6","_bookingFormData$coAp7","_bookingFormData$coAp8","_bookingFormData$coAp9","_bookingFormData$coAp10","_bookingFormData$coAp11","_bookingFormData$coAp12","_bookingFormData$offi","_bookingFormData$offi2","_bookingFormData$offi3","_bookingFormData$offi4","_bookingFormData$offi5","_bookingFormData$offi6","_bookingFormData$Book","_bookingFormData$Book2","modelImgRef","modalImageState","setModalImageState","imgSrc","imgAlt","setBookingFormData","reloadComp","priceSheetMenuState","setPriceSheetMenuState","genShareableLink","setGenShareableLinkState","editable","displayApprovalHistory","approverContainerJSX","proceessApprovals","useCallback","containerClassName","information","iconToDisplay","approved","rejected","pending","approvals","projectHeadStatus","projectHead","salesAndmarketingHeadStatus","salesAndMarketingHead","projectDirectorStatus","projectDirector","push","approverContainer","displayMessage","noAfterContent","viewUploadedDocuments","dataset","modalPayload","fetchData","_err$msg5","responsePayload","PAYMENT_COPY","endsWith","AADHAR_COPY","PAN_COPY","PHOTO_OF_APPLICANT","PHOTO_OF_CO_APPLICANT","PRICE_SHEET","genShareableLinkPopupCtrl","reload","_data$source","dateValuesToFormat","jsonStringToParse","autoSelectFormating","Error","error","showLoader","_bookingFormData$Proj","_bookingFormData$sour","_err$msg4","HeaderView","AddLinkIcon","CampaignIcon","confirm","LockOpenIcon","bookingFormConainter","payload","dateOfBirth","coApp_dateOfBirth","subsource","facing","el","processedName","_err$msg6","onKeyDown","bfData","defaultValue","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","disableFuture","date","FormControl","InputLabel","Select","labelId","gender","nationality","nat","alternateMobileNumber","maritalStatus","ms","wantToAdd_CoApp","permanentAddressType","addressMainContainer","addressContainer","presentAddress","addressLine1","addressLine2","twoInputContainer","city","country","pincode","permanentAddress","coApp_FullName","coApp_emailId","coApp_gender","coApp_nationality","coApp_mobileNumber","coApp_alternateMobileNumber","coApp_maritalStatus","coApp_permanentAddressType","coApp_presentAddress","coApp_permanentAddress","FormGroup","marginLeft","corner","parkFacing","modeOfPayment","mop","paymentType","pt","bookingAmountPaid","KeyboardArrowDownIcon","VisibilityIcon","handelPriceSheetFileSelection","inputElement","document","createElement","teardown","removeEventListener","removeChild","addEventListener","appendChild","onchange","click","FileUploadIcon","aadharNumber","PANNumber","isCPSelected","companyName","profession","occupation","designation","industry","annualIncome","officeAddress","agreedToTermsAndCondition","purposeOfPurchase","BookingFormUpdatedBy","updatedAt","NoteHandlerComp","ApprovalsHandler","approvalHistory","approvalHistoryContainer","timestamp","isValid","utcOffset","CreateUserShareableLink","zIndex","downloadIcon","imgViewer","ref","src","alt","Root","lazy","RedirectToBookingFormView","Navigate","replace","dispatcher","router","setRouter","routes","element","Suspense","fallback","Loading","path","ViewAll","View","statusText","HeaderSliceActions","setHeaders","currentApp","appTabs","allowedtabs","tab","permissions","useRoutes","tabEndpoint","allowedTabs","endpoint"],"sourceRoot":""}
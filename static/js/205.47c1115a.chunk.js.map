{"version":3,"file":"static/js/205.47c1115a.chunk.js","mappings":"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","sources":["componets/PopupModel/PopupModel.js","webpack://my-admin/./src/componets/PopupModel/PopupModel.module.css?3bb1","Apps/BookingForm/ViewAll/TableView.js","webpack://my-admin/./src/Apps/BookingForm/ViewAll/TableView.module.css?dc62","webpack://my-admin/./src/Apps/BookingForm/ViewAll/ViewAll.module.css?18dd","Apps/BookingForm/CreateNew/FetchDataFromLeadsquare.js","Apps/BookingForm/CreateNew/SourceInfoHandler.js","Apps/BookingForm/CreateNew/CreateNew.js","webpack://my-admin/./src/Apps/BookingForm/CreateNew/CreateNew.module.css?ed40","Apps/BookingForm/ViewAll/ViewAll.js","Apps/BookingForm/View/ViewHelper.js","Apps/BookingForm/View/NoteHandlerComp.js","Apps/BookingForm/View/ApprovalsHandler.js","Apps/BookingForm/View/HeaderView.js","Apps/BookingForm/View/CreateUserShareableLink.js","Apps/BookingForm/View/View.js","webpack://my-admin/./src/Apps/BookingForm/View/View.module.css?6a72","pages/BookingFormPages.js","utility/tab-access-verifier.js"],"sourcesContent":["// Functional Imports\nimport cssNameSimplifier from \"../../utility/css-name-simplifier\";\n\n// Component Imports\nimport { Box, Modal, IconButton, useMediaQuery, Typography, Divider } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n// Styled Imports\nimport importedStyles from './PopupModel.module.css';\n\nconst STYLES = cssNameSimplifier(importedStyles);\n\nconst boxStyle = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '70vw',\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    maxHeight: '85vh',\n    p: 4,\n};\n\n\nfunction PopupModel(props){\n    boxStyle.width  = useMediaQuery('(min-width:700px)')? '70vw' : '95vw';\n\n    return (\n        <Modal open={props.open}>\n            <Box sx={boxStyle} >\n                <IconButton className={STYLES.closeIcon} onClick={props?.handelModelClose}>\n                    <CloseIcon  />\n                </IconButton>\n\n                {\n                    props.title && (\n                        <>\n                            <Typography variant=\"h5\" component=\"h2\" textAlign=\"center\">\n                                <strong>\n                                    {props.title}\n                                </strong>\n                            </Typography>\n            \n                            <Divider variant='middle' sx={{ marginY: 2 }} />\n                        </>\n                    )\n                }\n\n                <div className={STYLES.childrenContainer}>\n                    <div style={{ marginRight: 10 }}>\n                        {props.children}\n                    </div>\n                </div>\n            </Box>\n        </Modal>\n\n    )\n}\n\nexport default PopupModel;","// extracted by mini-css-extract-plugin\nexport default {\"close-icon\":\"PopupModel_close-icon__UpK-j\",\"children-container\":\"PopupModel_children-container__DVdXK\"};","// Functional Imports\nimport { useReducer } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useEffect } from \"react\";\nimport cssNameSimplifier from '../../../utility/css-name-simplifier';\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\nimport { useDispatch } from 'react-redux';\nimport { AlertSliceActions } from '../../../store/alert-slice';\nimport { Link } from 'react-router-dom';\nimport isEmpty from '../../../utility/is-empty';\nimport moment from 'moment';\n\n\n// Component Imports\nimport { Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\n\n// Style Imports\nimport importStyles from './TableView.module.css';\n\nconst styles = cssNameSimplifier(importStyles);\n\n// Table style config\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n\t[`&.${tableCellClasses.head}`]: {\n\t\tbackgroundColor: theme.palette.common.black,\n\t\tcolor: theme.palette.common.white,\n\t},\n\t[`&.${tableCellClasses.body}`]: {\n\t\tfontSize: 14,\n\t},\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n\t'&:nth-of-type(odd)': {\n\t\tbackgroundColor: theme.palette.action.hover,\n\t},\n\t// hide last border\n\t'&:last-child td, &:last-child th': {\n\t\tborder: 0,\n\t},\n}));\n\n// BookingForm Data Reducer Function\nfunction bookingFormDataReducer(state, action){\n    if(action.type === 'NEW_DATA'){\n        const loadMore = action.data.length > 100\n        if(loadMore) action.data.pop()\n        if(isEmpty(action.data)) return { data: [...state.data], loadMore: false }\n        return { data: [...state.data, ...action.data], loadMore }\n    }\n\n    if(action.type === 'RESET'){\n        return state//{ data: [], loadMore: false }\n    }\n}\n\nfunction TableView(props){\n    const dispatch = useDispatch();\n    const sendRequest = useHttpClientWithNavigate();\n    const [bookingFromState, dispatchBookingFormState] = useReducer(bookingFormDataReducer, { data: [], loadMore: false });\n\n    async function fetchBookingFormData(){\n        const currentUrl = new URL(window.location);\n        const url = props.baseURL + '/view';\n        const urlWithFilters = url + currentUrl.search;\n        const headers = {};\n\n        headers['total_count'] = bookingFromState.data.length;\n\n        try{\n            const bookingFormData = await sendRequest({ url: urlWithFilters, headers });\n            dispatchBookingFormState({ type: 'NEW_DATA', data: bookingFormData });\n        }catch( err ){\n            // navigate(url);\n            dispatch( AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch booking form data!', title: 'Request Failed!', severity: 'error' }) )\n        }\n    }\n\n    useEffect(() => {\n        (async () => await fetchBookingFormData() )();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className={styles.tableContainer}>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align=\"left\">Index</StyledTableCell>\n                            <StyledTableCell>Full Name</StyledTableCell>\n                            <StyledTableCell align=\"center\">Email</StyledTableCell>\n                            <StyledTableCell align=\"center\">Mobile Number</StyledTableCell>\n                            <StyledTableCell align=\"center\">Project Name</StyledTableCell>\n                            <StyledTableCell align=\"center\">Project Unit Name</StyledTableCell>\n                            <StyledTableCell align=\"center\">Status</StyledTableCell>\n                            <StyledTableCell align=\"center\">Submitted</StyledTableCell>\n                            <StyledTableCell align=\"center\">Created Date Time</StyledTableCell>\n                            <StyledTableCell align=\"center\">Created By</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {bookingFromState.data.map((row, index) => (\n                            <StyledTableRow key={row.id} className={styles.dataRow}>\n                                <StyledTableCell align=\"center\">\n                                    {++index}\n                                </StyledTableCell>\n\n                                <StyledTableCell component=\"th\" scope=\"row\">\n                                    <Link to={`${props.baseURL}/${row.id}/view`}>{row.fullName}</Link>\n                                </StyledTableCell>\n                                \n                                <StyledTableCell align=\"center\">\n                                    {row.emailId}\n                                </StyledTableCell>\n                                \n                                <StyledTableCell align=\"center\">\n                                    {row.mobileNumber}\n                                </StyledTableCell>\n                                \n                                <StyledTableCell align=\"center\">\n                                    {row.Project.name}\n                                </StyledTableCell>\n                                \n                                <StyledTableCell align=\"center\">\n                                    {row.ProjectUnit.name}\n                                </StyledTableCell>\n                                \n                                <StyledTableCell align=\"center\">\n                                    {row.status}\n                                </StyledTableCell>\n                                \n                                <StyledTableCell align=\"center\">\n                                    {row.submittedByUser && <CheckIcon />}\n                                </StyledTableCell>\n                                \n                                <StyledTableCell align=\"center\">\n                                    {( moment(row.createdAt) !== 'Invalid Date') && moment(row.createdAt).format('DD/MM/YYYY HH:MM A')}\n                                </StyledTableCell>\n                                \n                                <StyledTableCell align=\"center\">\n                                    <Link to={`/profile/${row.BookingFormCreatedBy.id}/info`}> {row.BookingFormCreatedBy.name}</Link>\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n\n                {isEmpty(bookingFromState.data) && <h3 className={styles.noDataFound}>No Data Found</h3>}\n\n            </TableContainer>\n\n            {\n                bookingFromState.loadMore && \n                <Paper className={styles.loadMoreContainer} onClick={fetchBookingFormData}>\n                    <Button variant=\"outlined\">Load More</Button>\n                </Paper>\n            }\n        </div> \n    );\n}\n\nexport default TableView;","// extracted by mini-css-extract-plugin\nexport default {\"table-container\":\"TableView_table-container__01CF-\",\"no-data-found\":\"TableView_no-data-found__NGn3z\",\"load-more-container\":\"TableView_load-more-container__Q69e6\",\"data-row\":\"TableView_data-row__lLhfJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"view-container\":\"ViewAll_view-container__NRLY4\",\"tool-bar\":\"ViewAll_tool-bar__TADMV\",\"right\":\"ViewAll_right__c8AHx\",\"search-conatiner\":\"ViewAll_search-conatiner__bgcoU\",\"icon\":\"ViewAll_icon__hLQTo\",\"input\":\"ViewAll_input__5Tb4y\",\"active\":\"ViewAll_active__EzUXe\",\"searchbar-animation-in\":\"ViewAll_searchbar-animation-in__Uhjzq\",\"drawer\":\"ViewAll_drawer__lyuVM\",\"filter-actions\":\"ViewAll_filter-actions__iyUbu\",\"filters-list\":\"ViewAll_filters-list__Y5I34\",\"filter\":\"ViewAll_filter__kPNkZ\"};","// Functional Imports\nimport { useState, useReducer, useEffect } from 'react';\nimport isEmpty from '../../../utility/is-empty';\nimport cssNameSimplifier from '../../../utility/css-name-simplifier';\nimport { useDispatch } from 'react-redux';\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\nimport { AlertSliceActions } from '../../../store/alert-slice';\n\n// Components Imports\nimport { Typography, TextField, IconButton, Tooltip, ToggleButtonGroup, ToggleButton } from '@mui/material';\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\n\n// Style Imports0\nimport viewAllStyles from '../ViewAll/ViewAll.module.css';\n\nconst TOOLBAR_STYLES = cssNameSimplifier(viewAllStyles);\n\nfunction userDataReducer(state, action){\n    const newState = JSON.parse(JSON.stringify(state));\n\n    if(action.type === 'NEW'){\n        if(action.data.length > 1){\n            newState.dataList           = action.data;          \n            newState.currentDataIndex   = 0;\n            newState.showIterator       = true;    \n            newState.totalDataLength    = action.data.length; \n            return newState;\n        }\n\n        newState.dataList           = action.data;          \n        newState.currentDataIndex   = 0;\n        newState.showIterator       = false;    \n        newState.totalDataLength    = action.data.length; \n        return newState;\n    }\n\n    if(action.type === 'NEXT'){\n        if((newState.currentDataIndex + 1) >= newState.totalDataLength){\n            newState.currentDataIndex = 0;\n            return newState\n        }\n\n        ++newState.currentDataIndex;\n        return newState\n    }\n\n    if(action.type === 'PREV'){\n        if((newState.currentDataIndex - 1) < 0){\n            newState.currentDataIndex = newState.totalDataLength - 1;\n            return newState\n        }\n\n        --newState.currentDataIndex;\n        return newState\n    }\n}\n\nfunction FetchDataFromLeadSquare(props){\n    const styles                = props.styles;\n    const dispatch              = useDispatch();\n    const sendRequest           = useHttpClientWithNavigate();\n    const [fetchBy, setFetchBy] = useState('phone');\n    const [userData, userDataDispatcher] = useReducer(userDataReducer, { \n        dataList:           null, \n        currentDataIndex:   null, \n        showIterator:       false, \n        totalDataLength:    null \n    })\n\n    // Propogate leadsquare data to parent comp (CreateNew) on currentDataIndex change \n    useEffect(() => {\n        if(userData.currentDataIndex === null || userData.currentDataIndex === 0) return;\n        props.handelFetchedUserData(userData.dataList[userData.currentDataIndex]);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userData.currentDataIndex])\n\n\n    async function handelFormSubmission(event){\n        try{\n            event.preventDefault();\n            const userinfo = event.target.elements.userInfo.value;\n            const url = `${props.baseURL}/get-leadsquare-data?getby=${fetchBy}&userinfo=${userinfo}`;\n\n            if(isEmpty(userinfo)){\n                return dispatch(AlertSliceActions.showAlert({ message: 'User info cannot be empty', title: 'Invalid Request!', severity: 'warning' }))\n            } \n\n            const response = await sendRequest({url});\n\n            if(isEmpty(response)){\n                return dispatch(AlertSliceActions.showAlert({ message: '', title: 'No Records Found!', severity: 'error' }))\n            }\n\n            userDataDispatcher({ type: 'NEW', data: response })\n            props.handelFetchedUserData(response[0]);\n        } catch( err ){\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch user data!', title: 'Request Failed!', severity: 'error' }))\n        }\n    }\n\n    async function handelDataIteration(type){\n        userDataDispatcher({ type });\n    }\n\n    return (\n        <form action='#' method=\"POST\" autoComplete=\"off\" onSubmit={handelFormSubmission}>\n            <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\n                Fetch Data From Leadsquare \n                <Typography variant=\"caption\" display=\"inline-block\">\n                    &nbsp;(optional)\n                </Typography>\n            </Typography>\n            <div className={styles.inputGroup}>\n                <ToggleButtonGroup\n                    color=\"primary\"\n                    exclusive\n                    value={fetchBy}\n                    onChange={(_, newFetchBy) => setFetchBy(newFetchBy)}\n                >\n                <ToggleButton value=\"phone\">Phone</ToggleButton>\n                <ToggleButton value=\"emailaddress\">Email</ToggleButton>\n                <ToggleButton value=\"id\">Leadsquare Id</ToggleButton>\n                </ToggleButtonGroup>\n            </div>\n\n            <div className={styles.inputGroup} style={{ marginTop: 16 }}>\n                <TextField\n                    className={styles.input}\n                    label=\"User Info\"\n                    name=\"userInfo\"\n                    required\n                />\n\n                <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\n                    <Tooltip title=\"Sync Data\">\n                        <IconButton type=\"submit\" sx={{ bgcolor: '#5c5c5c14' }}  size='large'>\n                            <CloudSyncIcon />\n                        </IconButton>\n                    </Tooltip>\n                </span>\n            </div>\n\n            {\n                userData.showIterator && (\n                    <>\n                        <Typography variant=\"body2\" component=\"p\" textAlign=\"center\" color=\"tomato\"  sx={{ marginY: 2 }}>\n                            Multiple user records were discovered! Use the buttons below to navigate the data and find the relevant information.\n                        </Typography>\n                        <div className={`${styles.inputGroup} ${styles.fetchedDataIterator}`}>\n\n                            <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\n                                <Tooltip title=\"View Previous Data\">\n                                    <IconButton size='large' sx={{ bgcolor: '#5c5c5c14' }} onClick={e => handelDataIteration('PREV')} >\n                                        <ChevronLeftIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </span>\n\n                            <Typography variant=\"overline\" component=\"p\" textAlign=\"center\" display=\"inline\" sx={{ marginY: 2 }}>\n                                {userData.currentDataIndex + 1} of {userData.totalDataLength}  \n                            </Typography>\n\n                            <span className={TOOLBAR_STYLES.icon} style={{ backgroundColor: 'transparent'}}>\n                                <Tooltip title=\"View Next Data\">\n                                    <IconButton size='large' sx={{ bgcolor: '#5c5c5c14' }} onClick={e => handelDataIteration('NEXT')}>\n                                        <ChevronRightIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </span>\n                        </div>\n                    </>\n                )\n            }\n        </form>\n    );\n}\n\nexport default FetchDataFromLeadSquare;","// Functional Imports\nimport { useEffect, useState } from 'react';\nimport { AlertSliceActions } from '../../../store/alert-slice';\nimport { useDispatch } from 'react-redux';\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\nimport isEmpty from '../../../utility/is-empty';\n\n// Components Imports\nimport { TextField, Autocomplete } from '@mui/material';\n\nfunction SourceInfoHandler(props){\n    const channelPartnerLabels = [\"cp\", \"c p\", \"channel partner\"];\n    const styles = props.styles;\n    const [sourceData, setSourceData] = useState({ sourceWithSubSource: [], currentSubSourceForSource: [] });\n    const dispatch = useDispatch();\n    const sendRequest = useHttpClientWithNavigate();\n    const [cpNameView, setCpNameViewState]  = useState(false);\n    const [channelPartnerData, setChannelPartnerData] = useState([]);\n\n\n    useEffect(() => {\n        (async() => {\n            try {\n                const url = '/source/retrive-source-with-subsource';\n                const sourceData = await sendRequest({ url });\n                setSourceData(prev => ({ ...prev, sourceWithSubSource: sourceData }))\n            } catch (err) {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\n            }\n        })();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Controlling Sub Source Field and Fethcing Channel Partner Information if cp is selected as source\n    useEffect(() => {\n        if(isEmpty(sourceData.sourceWithSubSource)) return;\n\n        if(isEmpty(props.userData?.source?.id)){\n            setSourceData(prev => ({ ...prev, currentSubSourceForSource: [] }))\n            return;\n        }\n\n        const source = sourceData.sourceWithSubSource.filter(source => source.id === props.userData.source.id);\n\n        // Fethcing channel partner information\n        if(channelPartnerLabels.includes(props.userData.source.label) && isEmpty(channelPartnerData)){\n            const channelPartnerUrl = '/channel-partner/view-all';\n            sendRequest({ url: channelPartnerUrl })\n            .then(responseData => {\n                const modifiedChannelPartner = responseData.map(cp => ({ ...cp, label: cp.name }))\n                setChannelPartnerData(modifiedChannelPartner);\n            })\n            .catch(err => {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\n            })\n        }\n\n        setSourceData(prev => ({ ...prev, currentSubSourceForSource: source[0]?.subsources || null }));\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.userData.source, sourceData.sourceWithSubSource])\n\n    useEffect(() => {\n        setCpNameViewState(channelPartnerLabels.includes(props.userData.source?.label?.toLowerCase()))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.userData.source])\n\n    function inputChangeHandler(key, value){\n        props.setUserData(prev => ({ ...prev, [key]: value }))\n    }\n\n    return (\n        <div className={styles.inputGroup}>\n            <Autocomplete\n                className={styles.input}\n                disablePortal\n                options={sourceData.sourceWithSubSource.map(source => ({ id: source.id, label: source.label }))}\n                value={props.userData.source}\n                onChange={(_, val) => inputChangeHandler('source', val)}\n                isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                loadingText='Fetching source infromation'\n                renderInput={(params) => <TextField {...params} label=\"Source\" required />}\n            />\n            <Autocomplete\n                className={styles.input}\n                disablePortal\n                options={sourceData.currentSubSourceForSource}\n                value={props.userData.subSource}\n                onChange={(_, val) => inputChangeHandler('subSource', val)}\n                isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                noOptionsText = 'Select a source to fetch subsource information'\n                loadingText = 'Fetching subsource information'\n                renderInput={(params) => <TextField {...params} label=\"Sub Source\" />}\n            />\n            {\n                cpNameView && \n                <Autocomplete\n                    className={styles.input}\n                    disablePortal\n                    options={channelPartnerData}\n                    value={props.userData.channelpartner}\n                    onChange={(_, val) => inputChangeHandler('channelpartner', val)}\n                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                    renderInput={(params) => <TextField {...params} label=\"Channel Partner\" required />}\n                />\n            }\n        </div>\n    )\n}\n\nexport default SourceInfoHandler;","// Functional Imports\nimport { useEffect, useState } from \"react\";\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\nimport { useDispatch } from \"react-redux\";\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\nimport { AlertSliceActions } from '../../../store/alert-slice';\nimport isEmpty from \"../../../utility/is-empty\";\n\n// Components Imports\nimport { Typography, TextField, Button, Divider, Autocomplete, styled, Alert } from '@mui/material';\nimport FetchDataFromLeadSquare from \"./FetchDataFromLeadsquare\";\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport FileIcon from '@mui/icons-material/InsertDriveFile';\nimport { LoaderSliceActions } from \"../../../store/loader-slice\";\nimport PopupModel from \"../../../componets/PopupModel/PopupModel\";\nimport SourceInfoHandler from \"./SourceInfoHandler\";\n\n// Styled Imports\nimport importedStyles from './CreateNew.module.css';\n\nconst VisuallyHiddenInput = styled('input')({\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: 1,\n    overflow: 'hidden',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    whiteSpace: 'nowrap',\n    width: 1,\n});\n\nconst STYLES = cssNameSimplifier(importedStyles);\n\nfunction CreateNew(props) {\n    \n    const dispatch                          = useDispatch();\n    const sendRequest                       = useHttpClientWithNavigate();\n    const [projectState, setProjectState]   = useState({ projects: [], projectUnits: [] });\n    const [userData, setUserData]           = useState({ fullName: '', emailId: '', mobileNumber: '', project: '', projectUnit: '', source: '', subSource: '', channelPartner: '', priceSheet: {} });\n    \n    \n    useEffect(() => {\n        // Open is set to false do not make a callout\n        if(!(!!props.open)) return;\n\n        // fetching projects data\n        (async () => {\n            try {\n                const url = '/projects/list-all';\n                const projectsData = await sendRequest({ url });\n                setProjectState(prev => ({ ...prev, projects: projectsData.map(prj => ({ ...prj, label: prj.name })) }))\n            } catch (err) {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects data!', title: 'Request Failed!', severity: 'error' }))\n            }\n        })()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.open]);\n\n    // Change in Project triggers a callout to fetch the related units of the selected project\n    useEffect(() => {\n        // fetching projects unit data\n        (async () => {\n            try {\n                if (!userData?.project?.id) return;\n\n                const url = `/projects/${userData.project.id}/fetch-units`;\n                const projectUnitsData = await sendRequest({ url });\n                setProjectState(prev => ({ ...prev, projectUnits: projectUnitsData.map(prjUnit => ({ ...prjUnit, label: prjUnit.name })) }))\n            } catch (err) {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects unit data!', title: 'Request Failed!', severity: 'error' }))\n            }\n        })()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userData.project])\n\n    function projectChangeHandler(_, val) {\n        setUserData(prev => ({ ...prev, project: val, projectUnit: null }));\n        if (!val) setProjectState(prev => ({ ...prev, projectUnits: [] }))\n    }\n\n    function handelFetchedUserData(data){\n        const fullName          = ((!isEmpty(data.FirstName)? data.FirstName : '') + ' ' + \n                                    (!isEmpty(data.LastName)? data.LastName : '')).trim();\n\n        const emailId           = !isEmpty(data.EmailAddress)               ? data.EmailAddress : '';\n        const mobileNumber      = !isEmpty(data.Phone)                      ? data.Phone : '';\n        const project           = !isEmpty(data.mx_Project_Name)            ? data.mx_Project_Name : '';\n        const source            = !isEmpty(data.Source)                     ? data.Source : '';\n        const subSource         = !isEmpty(data.mx_Sub_Source)              ? data.mx_Sub_Source : '';\n        const channelPartner    = !isEmpty(data.mx_Channel_Partner_Name)    ? data.mx_Channel_Partner_Name : '';\n        const projectUnit       = '';\n        const priceSheet        = {};\n\n        setUserData({ fullName, emailId, mobileNumber, project, projectUnit, source, subSource, channelPartner, priceSheet });\n    }\n\n    function handelInputChange(event){\n        const name = event.target.name;\n        const value = event.target.value;\n        const type = event.target.type;\n\n        if(type === 'file'){\n            const file = event.target.files[0]\n            const type = file.type;\n            const fileName = file.name;\n\n            if (type !== 'application/pdf'){\n                return dispatch(AlertSliceActions.showAlert({ message: 'Only PDF file types are supported!', title: 'Request Failed!', severity: 'error' }))\n            }\n\n            dispatch(LoaderSliceActions.setDisplayLoader({ from: 'PDF Loader', state: true }));\n                \n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => { \n                const data = reader.result.split(',')[1]\n                setUserData(prev => ({ ...prev, priceSheet: { fileName, type, data } }))\n                dispatch(LoaderSliceActions.setDisplayLoader({ from: 'PDF Loader', state: false })); \n            }\n\n            return;\n        }\n\n        setUserData(prev => ({...prev, [name]: value}))\n    }\n\n    async function handelFormSubmission(event){\n        try{\n            event.preventDefault();\n            const url = props.baseURL + '/create-bookingform';\n            const method = 'POST';\n            const headers = { 'content-type': 'application/json' };\n            const body = JSON.stringify(userData);\n\n            const response = await sendRequest({url, method, headers, body});\n            \n            console.log(response);\n        } catch(err) {\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to create bookingform!', title: 'Request Failed!', severity: 'error' }))\n        }\n    }\n\n    function handelModelClose(event){\n        setUserData({ fullName: '', emailId: '', mobileNumber: '', project: '', projectUnit: '', source: '', subSource: '', channelPartner: '', priceSheet: '' })\n        props.onCloseEvent && props.onCloseEvent()\n    }\n\n    return (\n        <PopupModel \n            title=\"Create New Booking Form\" \n            open={props.open} \n            handelModelClose={handelModelClose}\n        >\n            <FetchDataFromLeadSquare baseURL={props.baseURL} styles={STYLES} handelFetchedUserData={handelFetchedUserData} />\n\n            <Divider variant='middle' sx={{ marginY: 2 }} />\n\n            <form autoComplete=\"false\" method=\"POST\" action=\"#\" onSubmit={handelFormSubmission}>\n                <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\n                    Personal Information\n                </Typography>\n\n                <div className={STYLES.inputGroup}>\n                    <TextField\n                        className={STYLES.input}\n                        label=\"Full Name\"\n                        name=\"fullName\"\n                        value={userData.fullName}\n                        onChange={handelInputChange}\n                        required\n                    />\n                    <TextField\n                        className={STYLES.input}\n                        label=\"Email Id\"\n                        name=\"emailId\"\n                        value={userData.emailId}\n                        onChange={handelInputChange}\n                        required\n                    />\n                    <TextField\n                        className={STYLES.input}\n                        label=\"Mobile Number\"\n                        name=\"mobileNumber\"\n                        value={userData.mobileNumber}\n                        onChange={handelInputChange}\n                    />\n                </div>\n\n                <Divider variant='middle' sx={{ marginY: 2 }} />\n\n                <div className={STYLES.inputContainer}>\n                    <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\n                        Project Information\n                    </Typography>\n\n                    <div className={STYLES.inputGroup}>\n                        <Autocomplete\n                            className={STYLES.input}\n                            disablePortal\n                            options={projectState.projects}\n                            value={userData.project}\n                            onChange={projectChangeHandler}\n                            isOptionEqualToValue={(opt, val) => opt.label === val}\n                            noOptionsText=\"Fetching Projects Data..\"\n                            renderInput={(params) => <TextField {...params} label=\"Projects\" required />}\n                        />\n\n                        <Autocomplete\n                            className={STYLES.input}\n                            disablePortal\n                            options={projectState.projectUnits}\n                            value={userData.projectUnit}\n                            onChange={(_, val) => setUserData(prev => ({ ...prev, projectUnit: val }))}\n                            isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                            noOptionsText=\"Please select a project to show its related units\"\n                            renderInput={(params) => <TextField {...params} label=\"Project Units\" required/>}\n                        />\n\n                        <Button\n                            component=\"label\"\n                            role={undefined}\n                            variant=\"outlined\"\n                            tabIndex={-1}\n                            startIcon={<CloudUploadIcon />}\n                        >\n                            Upload Price Sheet\n                            <VisuallyHiddenInput onChange={handelInputChange} type=\"file\" accept=\"application/pdf\" required/>\n                        </Button>\n                    </div>\n                </div>\n\n                {\n                    userData.priceSheet?.data &&\n                    <div className={STYLES.inputContainer}>\n                        <Alert severity=\"info\" icon={<FileIcon />} sx={{ textAlign: 'center', margin: 'auto' }} className={STYLES.input} >\n                            File \"{userData.priceSheet?.fileName}\" has been selected!\n                        </Alert>\n                    </div>\n                }\n\n                <Divider variant='middle' sx={{ marginY: 2 }} />\n\n                <div className={STYLES.inputContainer}>\n                    <Typography variant=\"h6\" component=\"h6\" textAlign=\"left\"  sx={{ marginBottom: 2 }}>\n                        Source Information\n                    </Typography>\n\n                    <SourceInfoHandler styles={STYLES} userData={userData} setUserData={setUserData} />\n                </div>\n\n                <Divider variant='middle' sx={{ marginY: 2 }} />\n\n                <div className={STYLES.inputGroup}>\n                    <Button variant=\"outlined\" onClick={handelModelClose}>Cancel</Button>\n                    <Button variant=\"contained\" type=\"submit\">Create</Button>\n                </div>\n            </form>\n        </PopupModel>\n    )\n}\n\nexport default CreateNew;","// extracted by mini-css-extract-plugin\nexport default {\"input-group\":\"CreateNew_input-group__yuxVJ\",\"fetched-data-iterator\":\"CreateNew_fetched-data-iterator__sDcoe\",\"input\":\"CreateNew_input__znGqw\"};","// Functional Imports\nimport { useState, useEffect, useReducer, useRef } from \"react\";\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\nimport { useDispatch } from \"react-redux\";\nimport { AlertSliceActions } from \"../../../store/alert-slice\";\nimport isEmpty from \"../../../utility/is-empty\";\nimport useTabAccessVerifier from \"../../../utility/tab-access-verifier\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Components Import\nimport { Tooltip, OutlinedInput, InputAdornment, Drawer, Box, Divider, Accordion, AccordionSummary, AccordionDetails } from \"@mui/material\";\nimport { ListItem, List, ListItemText, ListItemButton, Button, IconButton, Typography, Badge, ClickAwayListener } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport CloseIcon from '@mui/icons-material/Close';\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport AddIcon from '@mui/icons-material/Add';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n// import ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport CheckIcon from '@mui/icons-material/Check';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';    \nimport TableView from \"./TableView\";\nimport CreateNew from \"../CreateNew/CreateNew\";\n\n// Styles Import\nimport importStyles from './ViewAll.module.css';\n\nconst styles = cssNameSimplifier(importStyles);\n\n\nfunction View(props) {\n    const [searchState, setSearchState]     = useState(null);       // Handels showing and hiding of search box\n    const [filterDisplay, setFilterDisplay] = useState(false);      // Handels showing and hiding of filter data drawer \n    const [refreshState, setRefreshState]   = useState(0);          // Used to referesh TableView data by incrementing key value\n    const [filters, dispatchFilters]        = useReducer(           // Conatins filter data\n        reduceFilterDataProcess, { \n            search: null, \n            status: new Set(), \n            years: new Set(), \n            projects: new Set(), \n            submittedByUser: new Set(), \n            filterStatus: { displayBadge: false, filterApplied: true } \n        }\n    );\n    const [projectsList, setProjectlist]    = useState([]);                     // Contains user handeled projects             \n    const [filterParams]                    = useSearchParams();                // To access query params\n    const dispatch                          = useDispatch()                     // Redux-Dispatch\n    const sendRequest                       = useHttpClientWithNavigate();      // Used to send out a request\n    const searchBoxRef                      = useRef();                         // Used to focus search box on open\n    const [createNewView, setCreateNewView] = useState(false);\n    const [isAllowedToAccessTab]            = useTabAccessVerifier('view');\n    const navigate                          = useNavigate();\n\n    if(!isAllowedToAccessTab){\n        navigate('/error', { state: { status: 403, msg: 'Your not allowed to access \\'View\\' tab' } })\n    }\n\n    // Checking for filter params and fetching all the projects handled by user\n    useEffect(() => {\n        try{\n            (async () => {\n                const type              = 'INIT';\n                const status            = filterParams.get('status');\n                const years             = filterParams.get('years');\n                const projects          = filterParams.get('projects');\n                const submittedByUser   = filterParams.get('submittedByUser');\n\n                const responseData      = await sendRequest({ url: props.baseURL + '/user-handled-projects'});\n                setProjectlist(responseData);\n                \n                dispatchFilters({ type, status, years, projects, submittedByUser });\n            })()\n        }catch( err ){\n            dispatch( AlertSliceActions.showAlert({ message: 'Failed to fetch projects list!', title: 'Request Failed!', severity: 'error' }) )\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if(filters.search === null) return;\n        const interval = setTimeout(applyFilter, 500);\n        return () => clearTimeout(interval); \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filters.search])\n\n    function updateFilterCondition(filterType, value){\n        dispatchFilters({ type: 'PROCESS_FILTER', filterType, value })\n    }\n\n    function applyFilter(){\n        const urlWithfilters = composeFilterParams(filters);\n        dispatchFilters({ type: 'FILTER_APPLIED' });\n        window.history.pushState({}, '', urlWithfilters);\n        setRefreshState(prev => ++prev);\n    }\n\n    if( searchState ){\n        setTimeout(() => searchBoxRef.current.focus(), 100);\n    }\n\n    return (\n        <>\n            <div className={styles.viewContainer}>\n                <div className={styles.toolBar}>\n                    <div className={styles.left}>\n                        <ClickAwayListener onClickAway={ () => { if(searchState) setSearchState(prev => false) }}>\n                            <div className={styles.searchConatiner}>\n                                <span className={styles.icon} onClick={(e) => setSearchState(prev => !!!prev)}>\n                                    <IconButton>\n                                        {(searchState) ? \n                                            <CloseIcon /> : \n                                            <Badge variant=\"dot\" color=\"success\" invisible={isEmpty(filters.search)}>\n                                                <SearchIcon />\n                                            </Badge>\n                                        }\n                                    </IconButton>\n                                </span>\n                                <div className={`${styles.input} ${(searchState !== null) ? (searchState) ? styles.active : styles.notActive : ''}`}>\n                                    <OutlinedInput\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip title='Search will be compared against Full Name, Mobile No, Email Id and Alternate Mobile No.'>\n                                                    <InfoOutlinedIcon fontSize=\"small\" />\n                                                </Tooltip>\n                                            </InputAdornment>\n                                        }\n                                        placeholder=\"Search\"\n                                        size=\"small\" \n                                        type=\"search\" \n                                        autoFocus={true}\n                                        inputRef={searchBoxRef}\n                                        onChange={e => updateFilterCondition('search', e.target.value)}\n                                    />\n                                </div>\n                            </div>\n                        \n                        </ClickAwayListener>\n                    </div>\n\n                    <div className={styles.right}>\n                        <span className={styles.icon} onClick={(e) => setRefreshState(prev => ++prev)}>\n                            <Tooltip title=\"Refresh\">\n                                <IconButton>\n                                    <RefreshIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </span>\n                        <span className={styles.icon} onClick={(event) => setFilterDisplay(true)} >\n                            <Tooltip title=\"Filters\">\n                                <IconButton>\n                                    <Badge variant=\"dot\" color={(filters.filterStatus.filterApplied)?'success':'warning'} invisible={!filters.filterStatus.displayBadge}>\n                                        <FilterAltIcon />\n                                    </Badge>\n                                </IconButton>\n                            </Tooltip>\n                        </span>\n                        <span className={styles.icon} onClick={(e) => e}>\n                            <Tooltip title=\"Download\">\n                                <IconButton disabled>\n                                    <DownloadIcon/>\n                                </IconButton>\n                            </Tooltip>\n                        </span>\n                        <span className={styles.icon} onClick={(e) => e}>\n                            <Tooltip title=\"Create New\">\n                                <IconButton onClick={e => setCreateNewView(true)}>\n                                    <AddIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </span>\n                    </div>\n                </div>\n                <TableView baseURL={props.baseURL} key={refreshState} />\n            </div>\n\n            {/* Filter Menu / Drawer */}\n            <Drawer className={styles.drawer} anchor='right' open={filterDisplay} onClose={(e) => setFilterDisplay(false)} >\n                <main>\n                    <Box sx={{ width: 350 }} role=\"presentation\">\n                        <List className={styles.filtersList}>\n                            <ListItem>\n                                <h3>Filters</h3>\n                            </ListItem>\n\n                            <Divider variant=\"middle\" />\n\n                            <ListItem className={styles.filter}>\n                                <Accordion defaultExpanded>\n                                    <AccordionSummary expandIcon={<ExpandMoreIcon />} >\n                                        <Typography>Status</Typography>\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                        <List\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 200, overflow: 'auto' }}\n                                            component=\"nav\"\n                                        >\n                                            {[\"Approved\", \"Rejected\", \"Pending\"].map(status => (\n                                                <ListItemButton key={status} onClick={e => updateFilterCondition('status', status)}>\n                                                    <ListItemText primary={status} />\n                                                    {filters.status?.has(status) && <CheckIcon />}\n                                                </ListItemButton>\n                                            ))}\n                                        </List>\n                                    </AccordionDetails>\n                                </Accordion>\n                            </ListItem>\n\n                            <ListItem className={styles.filter}>\n                                <Accordion defaultExpanded={filters.years.size > 0}>\n                                    <AccordionSummary expandIcon={<ExpandMoreIcon />} >\n                                        <Typography>Years</Typography>\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                        <List\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 400, overflow: 'auto' }}\n                                            component=\"nav\"\n                                        >\n                                            {[...Array(( new Date().getFullYear() + 1) - 1995)].map((_,index) => {\n                                                const year = new Date().getFullYear() - index;\n                                                return (\n                                                    <ListItemButton key={year} onClick={e => updateFilterCondition('years', `${year}`)}>\n                                                        <ListItemText primary={year} />\n                                                        {filters.years?.has(`${year}`) && <CheckIcon />}\n                                                    </ListItemButton>\n                                                )\n                                            })}\n                                        </List>\n                                    </AccordionDetails>\n                                </Accordion>\n                            </ListItem>\n\n                            <ListItem className={styles.filter}>\n                                <Accordion disabled={projectsList.length <= 1} defaultExpanded={filters.projects.size > 1}>\n                                    <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                    >\n                                        <Typography>Projects</Typography>\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                        <List\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 350, overflow: 'auto' }}\n                                            component=\"nav\"\n                                        >\n                                            {projectsList.map(project => (\n                                                <ListItemButton key={project.id} disabled={projectsList.length <= 1}  onClick={e => updateFilterCondition('projects', project.id)} >\n                                                    <ListItemText primary={project.name} />\n                                                    {filters.projects?.has(project.id) && <CheckIcon />}\n                                                </ListItemButton>\n                                            ))}\n                                        </List>\n                                    </AccordionDetails>\n                                </Accordion>\n                            </ListItem>\n\n                            <ListItem className={styles.filter}>\n                                <Accordion defaultExpanded={filters.submittedByUser.size > 0}>\n                                    <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                    >\n                                        <Typography>Submitted By User</Typography>\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                        <List\n                                            sx={{ width: '100%', bgcolor: 'background.paper', maxHeight: 200, overflow: 'auto' }}\n                                            component=\"nav\"\n                                        >\n                                            {[{ key: \"Submitted\", value: 'true' }, { key: \"Not Submited\", value: 'false' }].map(submitted => (\n                                                <ListItemButton key={submitted.key} onClick={e => updateFilterCondition('submittedByUser', submitted.value )}>\n                                                    <ListItemText primary={submitted.key} />\n                                                    {filters.submittedByUser?.has(submitted.value) && <CheckIcon />}\n                                                </ListItemButton>\n                                            ))}\n                                        </List>\n                                    </AccordionDetails>\n                                </Accordion>\n                            </ListItem>\n\n                        </List>\n                    </Box>\n                </main>\n\n                <footer>\n                    <Divider />\n                    <div className={styles.filterActions}>\n                        <Button variant=\"outlined\" onClick={e => dispatchFilters({type: 'RESET'})}>Reset</Button>\n                        <Button variant=\"contained\" onClick={applyFilter} disabled={filters.filterStatus.filterApplied}>Apply</Button>\n                    </div>\n                </footer>\n            </Drawer>\n\n            <CreateNew baseURL={props.baseURL} open={createNewView} onCloseEvent={e => setCreateNewView(false)} />\n\n            {/* Main Menu */}\n            {/* <StyledMenuList\n                anchorEl={uiFilterState.mainMenuAnchor}\n                open={Boolean(uiFilterState.mainMenuAnchor)}\n                onClose={e => dispatchUIFilterState({ type: 'CLOSE_ALL_MENU' })}\n            >\n                <MenuItem\n                    disableRipple\n                    onClick={(event) => dispatchUIFilterState({ type: 'STATUS_MENU_EVENT', event })}\n                >\n                    Status\n                    <ArrowRightIcon />\n                </MenuItem>\n                <MenuItem onClick={handleClose} disableRipple>\n                    Year\n                    <ArrowRightIcon />\n                </MenuItem>\n                <MenuItem onClick={handleClose} disableRipple>\n                    Project\n                    <ArrowRightIcon />\n                </MenuItem>\n                <MenuItem onClick={handleClose} disableRipple>\n                    <Typography variant=\"inherit\" noWrap>\n                        Submitted By User\n                    </Typography>\n                    <ArrowRightIcon />\n                </MenuItem>\n            </StyledMenuList> */}\n\n            {/* Status Menu */}\n            {/* <StyledMenuList\n                anchorEl={uiFilterState.statusMenuAnchor}\n                open={Boolean(uiFilterState.statusMenuAnchor)}\n                onClose={e => dispatchUIFilterState({ type: 'CLOSE_ALL_MENU' })}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <MenuItem>\n                    <CheckIcon />\n                    Approved\n                </MenuItem>\n                <MenuItem>\n                    <CheckIcon />\n                    Rejected\n                </MenuItem>\n                <MenuItem>\n                    <CheckIcon />\n                    Pending\n                </MenuItem>\n            </StyledMenuList> */}\n        </>\n    );\n}\n\nfunction reduceFilterDataProcess(state, action){\n    const newState = {...state};\n\n    if(action.type === 'INIT'){\n        if(action.search){\n            newState.search = action.search.trim();\n        }\n\n        if(action.status){\n            newState.status = new Set(action.status.split(';').map(value => value.trim()));\n        }\n\n        if(action.years){\n            newState.years = new Set(action.years.split(';').map(value => value.trim()));\n        }\n\n        if(action.projects){\n            newState.projects = new Set(action.projects.split(';').map(value => value.trim()));\n        }\n\n        if(action.submittedByUser){\n            newState.submittedByUser = new Set(action.submittedByUser.split(';').map(value => value.trim()));\n        }\n    }\n\n    if(action.type === 'PROCESS_FILTER'){\n        if( action.filterType === 'search' ){\n            newState[action.filterType] = action.value\n        } else {\n            if( newState[action.filterType].has(action.value) ){\n                newState[action.filterType].delete(action.value);\n            } else {\n                newState[action.filterType].add(action.value);\n            }\n\n            newState.filterStatus.filterApplied = false;\n        }\n    }\n\n    if(action.type === 'RESET'){\n        return { \n            search: state.search, \n            status: new Set(),\n            years: new Set(), \n            projects: new Set(), \n            submittedByUser: new Set(), \n            filterStatus: { \n                displayBadge: false, \n                filterApplied: false \n            } \n        };\n    }\n\n    if(action.type === 'FILTER_APPLIED'){\n        newState.filterStatus.filterApplied = true;\n    }\n\n    newState.filterStatus.displayBadge = newState.status.size > 0 || newState.years.size > 0 || newState.projects.size > 0 || newState.submittedByUser.size > 0\n\n    return newState;\n}\n\nfunction composeFilterParams(filterData){\n    const currentURL = new URL(window.location);\n    const newURLWIthParams = new URL(currentURL.origin + currentURL.pathname);\n\n    Object.keys(filterData).forEach( filterName => {\n        if('filterStatus' === filterName) return;\n        if( filterData[filterName] === null || filterData[filterName].size <= 0 ) return;\n        if( 'search' === filterName && isEmpty( filterData[filterName] ) ) return;\n\n        const filterParam = ('search' === filterName)? filterData[filterName] : [...filterData[filterName]].join(';');\n\n        newURLWIthParams.searchParams.set(filterName, filterParam);\n    });\n\n    return newURLWIthParams;\n}\n\nexport default View;","export function openBase64NewTab(base64Pdf){\n    var blob = base64toBlob( base64Pdf );\n    if (window.navigator && window.navigator.msSaveOrOpenBlob ) {\n        window.navigator.msSaveOrOpenBlob(blob, \"pdfBase64.pdf\");\n    } else {\n        const blobUrl = URL.createObjectURL(blob);\n        window.open(blobUrl);\n    }\n}\n\nexport function base64toBlob(base64Data) {\n    const sliceSize = 1024;\n    const byteCharacters = atob(base64Data);\n    const bytesLength = byteCharacters.length;\n    const slicesCount = Math.ceil(bytesLength / sliceSize);\n    const byteArrays = new Array(slicesCount);\n\n    for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n        const begin = sliceIndex * sliceSize;\n        const end = Math.min(begin + sliceSize, bytesLength);\n        const bytes = new Array(end - begin);\n\n        for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n            bytes[i] = byteCharacters[offset].charCodeAt(0);\n        }\n        byteArrays[sliceIndex] = new Uint8Array(bytes);\n    }\n    return new Blob(byteArrays, { type: \"application/pdf\" });\n}","// Functional Imports\nimport { useEffect, useState } from \"react\";\nimport isEmpty from \"../../../utility/is-empty\";\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertSliceActions } from '../../../store/alert-slice';\nimport { HeaderSliceName } from \"../../../store/header-slice\";\nimport { useParams } from \"react-router-dom\";\n\n// Component Imports\nimport { IconButton, MenuItem, Menu, styled, alpha, Modal, TextField, FormControlLabel, Button, Checkbox, Divider } from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditNoteIcon from '@mui/icons-material/EditNote';\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport PendingActionsIcon from '@mui/icons-material/PendingActions';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst StyledMenu = styled(\n    props => (\n    <Menu\n        elevation={0}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        {...props}\n    />\n    ))(({ theme }) => ({\n        '& .MuiPaper-root': {\n            borderRadius: 6,\n            marginTop: theme.spacing(1),\n            minWidth: 180,\n            color:\n                theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n            boxShadow:\n                'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n            '& .MuiMenu-list': {\n                padding: '4px 0',\n            },\n            '& .MuiMenuItem-root': {\n                '& .MuiSvgIcon-root': {\n                    fontSize: 18,\n                    color: theme.palette.text.secondary,\n                    marginRight: theme.spacing(1.5),\n                },\n                '&:active': {\n                    backgroundColor: alpha(\n                        theme.palette.primary.main,\n                        theme.palette.action.selectedOpacity,\n                    ),\n                },\n            },\n        },\n})\n);\n\nfunction NoteHandlerComp(props){\n    const STYLES                                            = props.styles;\n    const { bookingFormId }                                 = useParams();  \n    const dispatch                                          = useDispatch();\n    const [notesState, setNotesState]                       = useState([]);\n    const [noteMenuAndModalState, setNoteMenuAndModalState] = useState({ menuAnchor: null, modalType: null });\n    const [noteUserInputState, setNoteUserInputState]       = useState({ id: '', note: '', requriesApproval: false });\n    const sendRequest                                       = useHttpClientWithNavigate();\n    const headerSlice                                       = useSelector(state => state[HeaderSliceName].appPermissions);\n    const { noteApprover }                                  = headerSlice;\n    const [isEditable, setIsEditableState]                  = useState(null);\n\n    useEffect(() => {\n        setNotesState(props.bookingFormData.notes);\n    }, [props.bookingFormData])\n\n    useEffect(() => {\n        setIsEditableState(props.isEditable)\n    }, [props.isEditable])\n\n    async function handelNoteProcessing(type){\n        try{\n            const url = props.baseURL + '/' + bookingFormId + '/note';\n            const method = 'POST';\n            const headers = {\"Content-Type\": \"application/json\"};\n    \n            if(type === 'NEW'){\n                const newURL = url + '?type=NEW';\n                const body = JSON.stringify({ \n                    note: noteUserInputState.note, \n                    requriesApproval: noteUserInputState.requriesApproval \n                });\n                \n                const response = await sendRequest({ url: newURL, method, body, headers });\n    \n                if(response.notes) setNotesState(response.notes)\n    \n                return dispatch( AlertSliceActions.showAlert({ message: 'Record created', title: 'Request Completed!', severity: 'success' }) )\n            }\n    \n            if(type === 'EDIT'){\n                const newURL = url + '?type=EDIT';\n                const body = JSON.stringify({ \n                    id: noteUserInputState.id,\n                    note: noteUserInputState.note, \n                    requriesApproval: noteUserInputState.requriesApproval \n                });\n                \n                const response = await sendRequest({ url: newURL, method, body, headers });\n    \n                if(response.notes) setNotesState(response.notes)\n    \n                return dispatch( AlertSliceActions.showAlert({ message: 'Record updated!', title: 'Request Completed!', severity: 'success' }) )\n            }\n    \n            if(type === 'DELETE'){\n                const newURL = url + '?type=DELETE';\n                const body = JSON.stringify({ id: noteUserInputState.id });\n                const response = await sendRequest({ url: newURL, body, method, headers });\n    \n                if(response.notes) setNotesState(response.notes)\n                return dispatch( AlertSliceActions.showAlert({ message: 'Record deleted!', title: 'Request Completed!', severity: 'success' }) )\n            }\n\n            if(type === 'NOTE_APPROVE' || type === 'NOTE_REJECT'){\n                const newURL = props.baseURL + '/' + bookingFormId + '/note-processing';\n                const status = (type === 'NOTE_APPROVE')? 'APPROVE' : 'REJECT';\n                const noteId = noteUserInputState.id;\n                const body = JSON.stringify({ noteId, status });\n                const headers = {\"Content-Type\": \"application/json\"};\n\n                const response = await sendRequest({ url: newURL, body, method, headers });\n                \n                if(response.notes) setNotesState(response.notes)\n                return dispatch( AlertSliceActions.showAlert({ message: response.msg || 'Record processed!', title: 'Request Completed!', severity: 'success' }) )\n            }\n    \n            dispatch( AlertSliceActions.showAlert({ message: 'Type mismatch', title: 'Request Failed!', severity: 'warning' }) )\n        } catch ( err ){\n            dispatch( AlertSliceActions.showAlert({ message: err.msg ?? `Failed to process request`, title: 'Request Failed!', severity: 'error' }) )\n        }\n    }\n    \n    function handelNoteMenuAndModal({type, id, event}){\n        if(type === 'MENU_OPEN'){\n            const note = notesState.filter(note => note.id === id)[0];\n\n            if(!note) return alert('Failed to find note');\n\n            setNoteMenuAndModalState({ menuAnchor: event.currentTarget, modalType: null });\n            setNoteUserInputState({ id: note.id, note: note.note, requriesApproval: !!note.approval });\n        }\n        \n        if(type === 'MODAL_OPEN_IN_EDIT'){\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: 'EDIT' });\n        }\n        \n        if(type === 'MODAL_OPEN_IN_NEW'){\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: 'NEW' });\n        }\n\n        if(type === 'CLOSE'){\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\n        }\n\n        if(type === 'PROCESS_SUBMISSION'){\n            handelNoteProcessing(noteMenuAndModalState.modalType);\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\n        }\n\n        if(type === 'DELETE_RECORD'){\n            handelNoteProcessing('DELETE');\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\n            setNoteUserInputState({ id: '', note: '', requriesApproval: false });\n        }\n\n        if(type === 'TRACK_NOTE_UPDATE'){\n            const name = event.target.name;\n            const value = (name === 'note')? event.target.value : event.target.checked;\n            setNoteUserInputState(prev => ({ ...prev, [name]: value }))\n        }\n\n        if(type === 'NOTE_APPROVE' || type === 'NOTE_REJECT'){\n            handelNoteProcessing(type);\n            setNoteMenuAndModalState({ menuAnchor: null, modalType: null });\n        }\n    }\n\n    return (\n        <>\n            <div className={`${STYLES.container} ${STYLES.bfNotes}`}>\n                <section>\n                    <div className={STYLES.headerInformation}>\n                        <p>\n                            <IconButton disableFocusRipple={true} disableRipple={true}>\n                                <DoubleArrowIcon />\n                            </IconButton>\n                            Notes\n                        </p>\n                    </div>\n                    <div className={STYLES.data} style={{ justifyContent: \"flex-start\" }}>\n                        {\n                            isEmpty(notesState) && <p style={{ textAlign: 'center', width: '100%' }}>No notes found!</p>\n                        }\n                        { \n                            !isEmpty(notesState) && \n                            notesState.map( (note, index) => (\n                                <div className={STYLES.noteContainer} key={note.id}>\n                                    <div>\n                                        {\n                                            index > 0 && \n                                            notesState[index-1].from !== note.from && // Checks if the previous note is the same user or not\n                                            <div className={STYLES.noteFrom}>\n                                                <h3>{note.from}</h3> \n                                            </div>\n                                        }\n                                        {\n                                            index <= 0 && \n                                            <div className={STYLES.noteFrom}>\n                                                <h3>{note.from}</h3> \n                                            </div>\n                                        }\n                                        <div className={STYLES.note}>\n                                            {\n                                                note.approval &&\n                                                <div className={STYLES.approvalInfo}>\n                                                    { \n                                                        note.approval.status === null &&\n                                                        <>\n                                                            <PendingActionsIcon className={STYLES.icon} /> \n                                                            <p>\n                                                                Approval Pending\n                                                            </p>\n                                                        </>\n                                                    }\n                                                    { \n                                                        note.approval.status === true && \n                                                        <>\n                                                            <CheckCircleOutlineIcon className={STYLES.icon} /> \n                                                            <p>\n                                                                Approved By {note.approval.updatedBy}\n                                                            </p>\n                                                        </>\n                                                    }\n                                                    { \n                                                        note.approval.status === false && \n                                                        <>\n                                                            <HighlightOffIcon className={STYLES.icon} /> \n                                                            <p>\n                                                                Rejected By {note.approval.updatedBy}\n                                                            </p>\n                                                        </>\n                                                    }\n                                                </div>\n                                            }\n                                            <p>{note.note}</p>    \n                                        </div>\n                                    </div>\n                                    <div>\n                                        <IconButton onClick={event => handelNoteMenuAndModal({ type: 'MENU_OPEN', id: note.id, event })}>\n                                            <MoreVertIcon />\n                                        </IconButton>\n                                    </div>\n                                </div>\n                            ))\n                        }\n\n                        <StyledMenu\n                            id=\"notes-menu\"\n                            anchorEl={noteMenuAndModalState.menuAnchor}\n                            open={Boolean(noteMenuAndModalState.menuAnchor)}\n                            onClose={e => handelNoteMenuAndModal({ type: 'CLOSE' })}\n                        >\n                            {\n                                noteApprover && noteUserInputState.requriesApproval && [\n                                    (\n                                        <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'NOTE_APPROVE' })} key=\"MenuItem_Approve\">\n                                            <CheckCircleIcon />\n                                            Approve\n                                        </MenuItem>\n                                    ), (\n                                        <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'NOTE_REJECT' })} key=\"MenuItem_Reject\">\n                                            <CancelIcon />\n                                            Reject\n                                        </MenuItem>\n                                    ), (\n                                        <Divider  key=\"MenuItem_Divider\"/>\n                                    )\n                                ]\n                            }\n                            <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'MODAL_OPEN_IN_EDIT' })}>\n                                <EditNoteIcon />\n                                Edit\n                            </MenuItem>\n                            <MenuItem onClick={e => handelNoteMenuAndModal({ type: 'DELETE_RECORD' })}>\n                                <DeleteIcon />\n                                Delete\n                            </MenuItem>\n                        </StyledMenu>\n                    </div> \n                    {\n                        isEditable && (\n                            <div className={STYLES.data} style={{ justifyContent: \"flex-end\"}}>\n                                <IconButton style={{ backgroundColor: '#90caf9'}} onClick={e => handelNoteMenuAndModal({ type: 'MODAL_OPEN_IN_NEW' })}>\n                                    <AddIcon sx={{ color: '#000', fontSize: 30 }} />\n                                </IconButton>\n                            </div>\n                        )\n                    }\n                </section>\n            </div>\n\n            {/* Notes Modal */}\n            <Modal open={Boolean(noteMenuAndModalState.modalType)} keepMounted={false} onClose={e => handelNoteMenuAndModal({type: 'CLOSE'})} >\n                <div className={STYLES.container + ' ' + STYLES.modalNoteConatiner}>\n                    <CloseIcon className={STYLES.closeIcon} onClick={e => handelNoteMenuAndModal({ type: 'CLOSE'})} />\n\n                    <div className={STYLES.noteInputsContainer}>\n                        <TextField \n                            className={STYLES.noteTextField}\n                            label=\"Note\"\n                            placeholder=\"Add a note\"  \n                            name=\"note\"\n                            fullWidth\n                            multiline \n                            minRows={2}\n                            maxRows={20}\n                            disabled={!isEditable}\n                            value={noteUserInputState.note}\n                            required\n                            onChange={event => handelNoteMenuAndModal({ type: 'TRACK_NOTE_UPDATE', event })}\n                        />\n\n                        <FormControlLabel \n                            className={STYLES.inputContainer} \n                            control={<Checkbox />} \n                            label=\"Requires Approval?\" \n                            labelPlacement=\"start\"\n                            name=\"requriesApproval\"\n                            disabled={!isEditable} \n                            sx={{ justifyContent: 'flex-end' }}\n                            checked={noteUserInputState.requriesApproval}\n                            onChange={event => handelNoteMenuAndModal({ type: 'TRACK_NOTE_UPDATE', event })}\n                        />\n                        {\n                            isEditable && \n                            <div className={STYLES.noteActionsContainer}>\n                                <Button data-mode=\"MODAL\" data-type=\"CLOSE\" onClick={e => handelNoteMenuAndModal({ type: 'CLOSE'})}>Cancel</Button>\n                                <Button \n                                    variant=\"contained\"\n                                    onClick={e => handelNoteMenuAndModal({ type: 'PROCESS_SUBMISSION' })}\n                                >\n                                    {noteMenuAndModalState.modalType === 'EDIT'? 'Update' : 'Submit'}\n                                </Button>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </Modal>\n        </>\n    );\n}\n\nexport default NoteHandlerComp;\nexport { StyledMenu };","// Functional Imports\nimport { useState } from \"react\";\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HeaderSliceName } from \"../../../store/header-slice\";\nimport { AlertSliceActions } from '../../../store/alert-slice';\nimport { useParams } from \"react-router-dom\";\n\n// Component Imports\nimport { Button, IconButton, Modal, TextField } from \"@mui/material\";\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\nimport SettingsBackupRestoreIcon from '@mui/icons-material/SettingsBackupRestore';\nimport DoNotDisturbAltIcon from '@mui/icons-material/DoNotDisturbAlt';\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\nimport CloseIcon from '@mui/icons-material/Close';\n\n\n// Styles Import\n\nfunction ApprovalsHandler(props){\n    const styles = props.styles;\n    const sendRequest = useHttpClientWithNavigate();\n    const [status, setStatus] = useState();\n    const [note, setNote] = useState();\n    const dispatch = useDispatch();\n    const { bookingFormId } = useParams();  \n    const headerSlice = useSelector(state => state[HeaderSliceName]);\n    const employeeRole = headerSlice.employee.role;\n\n    async function submitApprovals(statusReq){\n        closeModal();\n        try {\n            const url = props.baseURL + '/' + bookingFormId + '/bookingform-processing';\n            const method = 'POST';\n            const headers = { \"Content-Type\": \"application/json\" };\n            \n            if((statusReq === 'RE_PROCESS' || statusReq === 'REJECT') && !status) return setStatus(statusReq);\n\n            const body = JSON.stringify({ status: statusReq, note });\n\n            const response = await sendRequest({ url, method, headers, body });\n\n            props.setReloadComp(prev => !prev);\n            dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Request processed', title: 'Request Submitted', severity: 'success' }));\n        } catch (err) {\n            if(err.status === 412){\n                return dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to submit request!', title: 'Request Failed!', severity: 'warning', autoclose: false }))\n            }\n\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to submit request!', title: 'Request Failed!', severity: 'error' }))\n        }\n    }\n\n    function closeModal(){\n        setStatus();\n        setNote();\n    }\n\n    return (props.isApprover || props.isApprover === false) && (\n        <>\n            <div className={`${styles.container} ${styles.bfActions}`}>\n                <section>\n                    <div className={styles.headerInformation}>\n                        <p>\n                            <IconButton disableFocusRipple={true} disableRipple={true}>\n                                <DoubleArrowIcon />\n                            </IconButton>\n                            Form Actions\n                        </p>\n                    </div>\n                    <div className={styles.data}>\n                        {\n                            employeeRole !== 'Project Head' &&\n                            <Button\n                                variant=\"outlined\"\n                                endIcon={<SettingsBackupRestoreIcon />}\n                                disabled={!props.isApprover}\n                                onClick={e => submitApprovals(\"RE_PROCESS\")}\n                            >\n                                Re-Process\n                            </Button>\n                        }\n                        <Button\n                            variant=\"outlined\"\n                            endIcon={<DoNotDisturbAltIcon />}\n                            disabled={!props.isApprover}\n                            onClick={e => submitApprovals(\"REJECT\")}\n                        >\n                            Reject\n                        </Button>\n\n                        <Button\n                            variant=\"contained\"\n                            endIcon={<TaskAltIcon />}\n                            disabled={!props.isApprover}\n                            onClick={e => submitApprovals(\"APPROVE\")}\n                        >\n                            Approve\n                        </Button>\n                    </div>\n                </section>\n            </div>\n                        \n            {/* Notes Modal */}\n            <Modal open={Boolean(status)} keepMounted={false} onClose={closeModal} >\n                <div className={styles.container + ' ' + styles.modalNoteConatiner}>\n                    <CloseIcon className={styles.closeIcon} onClick={closeModal} />\n\n                    <div className={styles.noteInputsContainer}>\n                        <p>\n                            <strong>Would you like to add a note for {(status === 'RE_PROCESS')? 're-processing' : 'rejection'}?</strong>\n                        </p>\n                        <TextField \n                            className={styles.noteTextField}\n                            placeholder=\"Add a note\"  \n                            name=\"note\"\n                            value={note}\n                            fullWidth\n                            multiline \n                            minRows={2}\n                            maxRows={15}\n                            onChange={e => setNote(e.target.value)}\n                        />\n \n                        <div className={styles.noteActionsContainer}>\n                            <Button data-mode=\"MODAL\" data-type=\"CLOSE\" onClick={closeModal}>Cancel</Button>\n                            <Button \n                                variant=\"contained\"\n                                onClick={e => submitApprovals(status)}\n                            >\n                                Submit\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n\nexport default ApprovalsHandler;","// Functional imports\n\n\n// Components imports\nimport { Divider } from \"@mui/material\";\n\n// Styles imports\n\n\nfunction HeaderView(props){\n    const styles = props.styles;\n    const indianRupeesFormater = new Intl.NumberFormat('en-IN', { currency: 'INR' });\n\n\n    return (\n        <div className={styles.container + ' ' + styles.quickViewConatiner}>\n            <div>\n                <h3>Project</h3>\n                <p>{props?.bookingFormData?.Project?.name}</p>\n            </div>\n            \n            <Divider orientation=\"vertical\" flexItem />\n\n            <div>\n                <h3>Project Unit</h3>\n                <p>{props?.bookingFormData?.ProjectUnit?.name}</p>\n            </div>\n\n            <Divider orientation=\"vertical\" flexItem />\n\n            <div>\n                <h3>Current Unit Price</h3>\n                <p style={{ textAlign: 'center' }}>\n                    {\n                        (props?.bookingFormData?.currentUnitPrice)?\n                            indianRupeesFormater.format(props.bookingFormData.currentUnitPrice) : '-----'\n                    }\n                </p>\n            </div>\n\n            <Divider orientation=\"vertical\" flexItem />\n\n            <div>\n                <h3>Discount (₹)</h3>\n                <p style={{ textAlign: 'center' }}>\n                    {\n                        (props?.bookingFormData?.discount)?\n                            indianRupeesFormater.format(props.bookingFormData.discount) : '-----'\n                    }\n                </p>\n            </div>\n\n            <Divider orientation=\"vertical\" flexItem />\n\n            <div>\n                <h3>After Discount (₹)</h3>\n                <p style={{ textAlign: 'center' }}>\n                    {\n                        (props?.bookingFormData?.currentUnitPrice && props?.bookingFormData?.discount)?\n                            indianRupeesFormater.format((props?.bookingFormData.currentUnitPrice - props?.bookingFormData.discount)) : '-----'\n                    }\n                </p>\n            </div>\n\n            <Divider orientation=\"vertical\" flexItem />\n\n            <div>\n                <h3>Realization Price</h3>\n                <p style={{textAlign: 'center'}}>\n                    {\n                        (props?.bookingFormData?.totalCost && props?.bookingFormData?.sqft)? \n                            indianRupeesFormater.format((props?.bookingFormData.totalCost / props?.bookingFormData.sqft)) : '-----'\n                    }\n                </p>\n            </div>\n\n        </div>\n    );\n}\n\nexport default HeaderView;","// Functional imports\nimport { useState, useMemo } from \"react\";\n\n// Components Import\nimport PopupModel from \"../../../componets/PopupModel/PopupModel\";\nimport { Link, IconButton, Tooltip } from \"@mui/material\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport DoneIcon from '@mui/icons-material/Done';\n\n// Style Imports\n\n\nfunction CreateUserShareableLink(props){\n    const [copyIconState, setCopyIconState] = useState({ icon: <ContentCopyIcon />, copy: true, title: 'Copy Link' });\n\n    const userBookingFormLink = useMemo(() => {\n        const url = new URL(window.location);\n        // return url.protocol + '//' + url.host + '/U/boooking-form/' + url.pathname.split('/')[2] + '/email-verify'\n        return 'http://localhost:3001?f=' + url.pathname.split('/')[2];\n    }, []);\n\n\n    function handelModelClose(){\n        props.handelModelClose && props.handelModelClose();\n    }\n\n    function copyLink(){\n        if(!copyIconState.copy) return;\n\n        navigator.clipboard.writeText(userBookingFormLink);\n        setCopyIconState({ icon: <DoneIcon />, copy: false, title: 'Copied!' });\n\n        const timeout = setTimeout(() => {\n            setCopyIconState({ icon: <ContentCopyIcon />, copy: true, title: 'Copy Link' });\n            clearTimeout(timeout)\n        }, 5000);\n    }\n\n    return (\n        <PopupModel title=\"Shareable URL\" handelModelClose={handelModelClose} open={props.open}>\n            <Link \n                sx={{ display: 'block', textAlign: 'center', marginY: 2 }} \n                target=\"_blank\" \n                rel=\"noreferrer\" \n                href={userBookingFormLink}\n            >\n                {userBookingFormLink}\n            </Link>\n        \n            <div style={{ maxWidth: 'fit-content', marginInline: 'auto' }}>\n                <Tooltip title={copyIconState.title} >\n                    <IconButton onClick={copyLink}>\n                        {copyIconState.icon}\n                    </IconButton>\n                </Tooltip>\n            </div>\n        </PopupModel>\n    )\n}\n\nexport default CreateUserShareableLink;","// Functional imports\nimport { useEffect, useRef, useState, useCallback } from \"react\";\nimport cssNameSimplifier from \"../../../utility/css-name-simplifier\";\nimport isEmpty from \"../../../utility/is-empty\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertSliceActions } from '../../../store/alert-slice';\nimport { HeaderSliceName } from \"../../../store/header-slice\";\nimport { useHttpClientWithNavigate } from \"../../../utility/http-hook\";\nimport moment from \"moment\";\nimport { openBase64NewTab } from \"./ViewHelper\";\n\n// Comonents importd\nimport {\n    IconButton, InputLabel, MenuItem, FormControl, Select, Button, Modal, TextField, FormControlLabel, Checkbox, Autocomplete, Tooltip, Divider, FormGroup\n} from \"@mui/material\";\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment'\nimport CloseIcon from '@mui/icons-material/Close';\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport PendingActionsIcon from '@mui/icons-material/PendingActions';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport CampaignIcon from '@mui/icons-material/Campaign';\nimport NoteHandlerComp, { StyledMenu } from \"./NoteHandlerComp\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\nimport ApprovalsHandler from \"./ApprovalsHandler\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport AddLinkIcon from '@mui/icons-material/AddLink';\nimport HeaderView from \"./HeaderView\";\n\n// Styles imports\nimport importStyles from './View.module.css';\nimport viewAllStyles from '../ViewAll/ViewAll.module.css';\nimport CreateUserShareableLink from \"./CreateUserShareableLink\";\n\nconst STYLES = cssNameSimplifier(importStyles);\nconst TOOLBAR_STYLES = cssNameSimplifier(viewAllStyles);\n\nconst GENDERS = [\"Male\", \"Female\", \"Other\"];\nconst NATIONALITIES = ['Indian', 'NRI'];\nconst MARITAL_STATUS = ['Single', 'Married'];\nconst PERMANENT_ADDRESS_TYPES = ['Same As Present Address', 'Different'];\nconst MODE_OF_PAYMENT = ['Self', 'Home Loan'];\nconst PAYMENT_TYPE = ['UPI', 'Cheque', 'Online Banking', 'Cash Payment'];\nconst CO_APPLICANT_OPTIONS = ['Yes', 'No'];\n\nconst VIEW_DATA = { \n    aadhar: { fileName: null, data: null }, \n    panCard: { fileName: null, data: null }, \n    applicant: { fileName: null, data: null }, \n    priceSheet: { fileName: null, data: null }, \n    coApplicant: { fileName: null, data: null }, \n    paymentConfirmation: { fileName: null, data: null }, \n};\n\nfunction View(props) {\n    const { bookingFormId } = useParams();\n    const dispatch          = useDispatch();\n    const modelImgRef       = useRef();\n    const sendRequest       = useHttpClientWithNavigate();\n    const navigate          = useNavigate();\n    \n    const [modalImageState, setModalImageState]         = useState({ imgSrc: '', imgAlt: '', type: '' });\n    const [projectState, setProjectState]               = useState({ projects: [], projectUnits: [] });\n    const [bookingFormData, setBookingFormData]         = useState(); // Used to store bookingform data e.g.. { error: 'Error Message' } || {..data}\n    const [reloadComp, setReloadComp]                   = useState(null);\n    const [priceSheetMenuState, setPriceSheetMenuState] = useState();\n    const [cpNameView, setCpNameViewState]              = useState(false);\n    const [genShareableLink, setGenShareableLinkState]  = useState(false);\n\n    \n    const headerSlice                                       = useSelector(state => state[HeaderSliceName]);\n    const {isEditable: editable, displayApprovalHistory}    = headerSlice.appPermissions;\n    const [isEditable, setIsEditableState]                  = useState(null);\n    const [sourceData, setSourceData]                       = useState({ sourceWithSubSource: [], currentSubSourceForSource: [] });\n    const [channelPartnerData, setChannelPartnerData]       = useState([]);\n    const channelPartnerLabels                              = [\"cp\", \"c p\", \"channel partner\"];\n    \n    const approverContainerJSX = [];\n\n    const proceessApprovals = useCallback((status) => {\n        let containerClassName = STYLES.information + ' ';\n        let iconToDisplay = <></>;\n\n        // eslint-disable-next-line default-case\n        switch (status) {\n            case true:\n                containerClassName += STYLES.approved;\n                iconToDisplay = <CheckCircleOutlineIcon className={STYLES.icon} />\n                break;\n\n            case false:\n                containerClassName += STYLES.rejected;\n                iconToDisplay = <HighlightOffIcon className={STYLES.icon} />\n                break;\n\n            case null:\n                containerClassName += STYLES.pending;\n                iconToDisplay = <PendingActionsIcon className={STYLES.icon} />\n                break;\n        }\n\n        return { containerClassName, iconToDisplay };\n    }, []);\n\n    if (bookingFormData?.approvals) {\n        const projectHeadStatus = proceessApprovals(bookingFormData.approvals.projectHead.status);\n        \n        const salesAndmarketingHeadStatus = proceessApprovals(\n            bookingFormData.approvals.projectHead.status === null || bookingFormData.approvals.projectHead.status ?\n                bookingFormData.approvals.salesAndMarketingHead.status :\n                false\n        );\n        \n        const projectDirectorStatus = proceessApprovals(\n            (bookingFormData.approvals.projectHead.status === null || bookingFormData.approvals.projectHead.status) &&\n                (bookingFormData.approvals.salesAndMarketingHead.status === null || bookingFormData.approvals.salesAndMarketingHead.status) ?\n                bookingFormData.approvals.projectDirector.status :\n                false\n        );\n\n        approverContainerJSX.push((\n            <div className={STYLES.approverContainer} key={1}>\n                <div className={projectHeadStatus.containerClassName}>\n                    {projectHeadStatus.iconToDisplay}\n                    <p>{bookingFormData.approvals.projectHead.displayMessage}</p>\n                </div>\n            </div>\n        ));\n\n        approverContainerJSX.push((\n            <div className={STYLES.approverContainer} key={2}>\n                <div className={salesAndmarketingHeadStatus.containerClassName}>\n                    {salesAndmarketingHeadStatus.iconToDisplay}\n                    <p>{bookingFormData.approvals.salesAndMarketingHead.displayMessage}</p>\n                </div>\n            </div>\n        ));\n\n        approverContainerJSX.push((\n            <div className={STYLES.approverContainer} key={3}>\n                <div className={STYLES.noAfterContent + ' ' + projectDirectorStatus.containerClassName}>\n                    {projectDirectorStatus.iconToDisplay}\n                    <p>{bookingFormData.approvals.projectDirector.displayMessage}</p>\n                </div>\n            </div>\n        ));\n    }\n\n    // To reload window\n    useEffect(() => {\n        if(!reloadComp) return;\n        window.location.reload()\n    }, [reloadComp])\n\n    // Initial Load\n    useEffect(() => {\n        // Fetching booking form data\n        (async () => {\n            try {\n                const url = props.baseURL + '/' + bookingFormId + '/view';\n                const data = await sendRequest({ url });\n\n                const dateValuesToFormat = ['coApp_dateOfBirth', 'dateOfBirth'];\n                const jsonStringToParse = ['presentAddress', 'permanentAddress', 'coApp_presentAddress', 'coApp_permanentAddress', 'officeAddress', 'notes', 'approvalHistory'];\n                const autoSelectFormating = ['Project', 'ProjectUnit'];\n\n                if (isEmpty(data)) throw Error('No Data Found');\n\n                Object.keys(data).forEach(key => {\n                    if (data[key] === null) {\n                        data[key] = (dateValuesToFormat.includes(key)) ? null : '';\n                        return;\n                    }\n\n                    if (jsonStringToParse.includes(key) && typeof data[key] !== 'object') {\n                        data[key] = JSON.parse(data[key])\n                        return\n                    }\n\n                    if (dateValuesToFormat.includes(key)) {\n                        data[key] = moment(data[key])\n                        return\n                    }\n\n                    if (autoSelectFormating.includes(key)) {\n                        data[key] = { ...data[key], label: data[key].name }\n                    }\n                });\n\n                VIEW_DATA.paymentConfirmation   = { fileName: null, data: null };\n                VIEW_DATA.aadhar                = { fileName: null, data: null };\n                VIEW_DATA.panCard               = { fileName: null, data: null };\n                VIEW_DATA.applicant             = { fileName: null, data: null };\n                VIEW_DATA.coApplicant           = { fileName: null, data: null };\n                VIEW_DATA.priceSheet            = { fileName: null, data: null };\n\n                setBookingFormData(data);\n                setCpNameViewState(channelPartnerLabels.includes((data?.source?.label)? data.source.label.toLowerCase() : ''))\n            } catch (error) {\n                setBookingFormData({ error });\n            }\n        })();\n\n        // fetching projects data\n        (async () => {\n            try {\n                const url = '/projects/list-all';\n                const projectsData = await sendRequest({ url });\n                setProjectState(prev => ({ ...prev, projects: projectsData.map(prj => ({ ...prj, label: prj.name })) }))\n            } catch (err) {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects data!', title: 'Request Failed!', severity: 'error' }))\n            }\n        })();\n\n        // fetching source data\n        (async() => {\n            try {\n                const url = '/source/retrive-source-with-subsource';\n                const sourceData = await sendRequest({ url });\n                setSourceData(prev => ({ ...prev, sourceWithSubSource: sourceData }))\n            } catch (err) {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\n            }\n        })();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Change in Project triggers a callout to fetch the related units of the selected project\n    useEffect(() => {\n        // fetching projects unit data\n        (async () => {\n            try {\n                if (!bookingFormData?.Project?.id) return;\n\n                const url = `/projects/${bookingFormData?.Project.id}/fetch-units`;\n                const projectUnitsData = await sendRequest({ url });\n                setProjectState(prev => ({ ...prev, projectUnits: projectUnitsData.map(prjUnit => ({ ...prjUnit, label: prjUnit.name })) }))\n            } catch (err) {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch projects unit data!', title: 'Request Failed!', severity: 'error' }))\n            }\n        })()\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bookingFormData?.Project])\n\n    // Input disable controller : Disables user input if the bookingform is approved or if the user does not have the edit access\n    useEffect(() => {\n        if (bookingFormData?.status === undefined || (editable && bookingFormData.status === isEditable)) return;\n        setIsEditableState(editable && bookingFormData.status !== 'Approved');\n    }, [editable, bookingFormData?.status, isEditable])\n\n    // Controlling Sub Source Field and Fethcing Channel Partner Information if cp is selected as source\n    useEffect(() => {\n        if(isEmpty(sourceData.sourceWithSubSource)) return;\n\n        if(isEmpty(bookingFormData?.source?.id)){\n            setSourceData(prev => ({ ...prev, currentSubSourceForSource: [] }))\n            return;\n        }\n\n        const source = sourceData.sourceWithSubSource.filter(source => source.id === bookingFormData.source.id);\n\n        // Fethcing channel partner information\n        if(channelPartnerLabels.includes(bookingFormData.source.label) && isEmpty(channelPartnerData)){\n            const channelPartnerUrl = '/channel-partner/view-all';\n            sendRequest({ url: channelPartnerUrl })\n            .then(responseData => {\n                const modifiedChannelPartner = responseData.map(cp => ({ ...cp, label: cp.name }))\n                setChannelPartnerData(modifiedChannelPartner);\n            })\n            .catch(err => {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? 'Failed to fetch source data!', title: 'Request Failed!', severity: 'error' }))\n            })\n        }\n\n        setSourceData(prev => ({ ...prev, currentSubSourceForSource: source[0]?.subsources || null }));\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [bookingFormData?.source, sourceData.sourceWithSubSource])\n\n    // Used to fetch or display locally cached user uploaded documents\n    async function viewUploadedDocuments(event) {\n        const type = event.target.dataset.type;\n        const modalPayload = { imgSrc: '', imgAlt: '', type };\n\n        async function fetchData() {\n            try {\n                const url = props.baseURL + '/' + bookingFormId + '/retrieve-attachments?retrieve=' + type;\n                return await sendRequest({ url });\n            } catch (err) {\n                dispatch(AlertSliceActions.showAlert({ message: err.msg ?? `Failed to fetch ${type}!`, title: 'Request Failed!', severity: 'error' }))\n                return null;\n            }\n        }\n\n        if (type === 'PAYMENT_COPY') {\n            if (isEmpty(VIEW_DATA.paymentConfirmation.data)) {\n                const responsePayload = await fetchData();\n                if (responsePayload === null) return;\n                VIEW_DATA.paymentConfirmation.fileName = responsePayload.fileName;\n                VIEW_DATA.paymentConfirmation.data = responsePayload.PAYMENT_COPY;\n            }\n\n            if (VIEW_DATA.paymentConfirmation.fileName.endsWith('.pdf')){\n                openBase64NewTab(VIEW_DATA.paymentConfirmation.data);\n                return;\n            }\n\n            modalPayload.imgSrc = VIEW_DATA.paymentConfirmation.data;\n            modalPayload.imgAlt = 'Payment Confirmation: ' + VIEW_DATA.paymentConfirmation.fileName;\n        }\n\n        if (type === 'AADHAR_COPY') {\n            if (isEmpty(VIEW_DATA.aadhar.data)) {\n                const responsePayload = await fetchData();\n                if (responsePayload === null) return;\n                VIEW_DATA.aadhar.fileName = responsePayload.fileName;\n                VIEW_DATA.aadhar.data = responsePayload.AADHAR_COPY;\n            }\n\n            if (VIEW_DATA.aadhar.fileName.endsWith('.pdf')){\n                openBase64NewTab(VIEW_DATA.aadhar.data);\n                return;\n            }\n\n            modalPayload.imgSrc = VIEW_DATA.aadhar.data;\n            modalPayload.imgAlt = 'Aadhar Card: ' + VIEW_DATA.aadhar.fileName;\n        }\n\n        if (type === 'PAN_COPY') {\n            if (isEmpty(VIEW_DATA.panCard.data)) {\n                const responsePayload = await fetchData();\n                if (responsePayload === null) return;\n                VIEW_DATA.panCard.fileName = responsePayload.fileName;\n                VIEW_DATA.panCard.data = responsePayload.PAN_COPY;\n            }\n\n            if (VIEW_DATA.panCard.fileName.endsWith('.pdf')){\n                openBase64NewTab(VIEW_DATA.panCard.data);\n                return;\n            }\n\n            modalPayload.imgSrc = VIEW_DATA.panCard.data;\n            modalPayload.imgAlt = 'Pan Card: ' + VIEW_DATA.panCard.fileName;\n        }\n\n        if (type === 'PHOTO_OF_APPLICANT') {\n            if (isEmpty(VIEW_DATA.applicant.data)) {\n                const responsePayload = await fetchData();\n                if (responsePayload === null) return;\n                VIEW_DATA.applicant.fileName = responsePayload.fileName;\n                VIEW_DATA.applicant.data = responsePayload.PHOTO_OF_APPLICANT;\n            }\n\n            if (VIEW_DATA.applicant.fileName.endsWith('.pdf')){\n                openBase64NewTab(VIEW_DATA.applicant.data);\n                return;\n            }\n\n            modalPayload.imgSrc = VIEW_DATA.applicant.data;\n            modalPayload.imgAlt = 'Photo Of Applicant: ' + VIEW_DATA.applicant.fileName;\n        }\n\n        if (type === 'PHOTO_OF_CO_APPLICANT') {\n            if (isEmpty(VIEW_DATA.coApplicant.data)) {\n                const responsePayload = await fetchData();\n                if (responsePayload === null) return;\n                VIEW_DATA.coApplicant.fileName = responsePayload.fileName;\n                VIEW_DATA.coApplicant.data = responsePayload.PHOTO_OF_CO_APPLICANT;\n            }\n\n            if (VIEW_DATA.coApplicant.fileName.endsWith('.pdf')){\n                openBase64NewTab(VIEW_DATA.coApplicant.data);\n                return;\n            }\n\n            modalPayload.imgSrc = VIEW_DATA.coApplicant.data;\n            modalPayload.imgAlt = 'Photo Of Co-Applicant: ' + VIEW_DATA.coApplicant.fileName;\n        }\n\n        if (type === 'PRICE_SHEET') {\n                if (isEmpty(VIEW_DATA.priceSheet.data)) {\n                    const responsePayload = await fetchData();\n                    if (responsePayload === null) return;\n                    VIEW_DATA.priceSheet.fileName = responsePayload.fileName;\n                    VIEW_DATA.priceSheet.data = responsePayload.PRICE_SHEET;\n                }\n\n                setPriceSheetMenuState();\n                openBase64NewTab(VIEW_DATA.priceSheet.data);\n        }\n\n        setModalImageState(modalPayload);\n    }\n\n    function downloadCurrentlyViewingData(){\n        \n    }\n\n    // Submits the user form inputs\n    async function handelFormSubmission(event) {\n        try {\n            event.preventDefault();\n            const payload = { id: bookingFormId };\n\n            if(bookingFormData.dateOfBirth)         payload.dateOfBirth         = bookingFormData.dateOfBirth;\n            if(bookingFormData.coApp_dateOfBirth)   payload.coApp_dateOfBirth   = bookingFormData.coApp_dateOfBirth;\n            if(bookingFormData.Project)             payload.Project             = bookingFormData.Project;\n            if(bookingFormData.ProjectUnit)         payload.ProjectUnit         = bookingFormData.ProjectUnit;\n            if(bookingFormData.source)              payload.source              = bookingFormData.source;\n            if(bookingFormData.subsource)           payload.subsource           = bookingFormData.subsource;\n            if(bookingFormData.channelpartner)      payload.channelpartner      = bookingFormData.channelpartner;\n            if(bookingFormData.facing)              payload.facing              = bookingFormData.facing;\n\n            for (const el of event.target.elements) {\n                const type = el.type;\n                const name = el.name;\n                const value = el.value;\n\n                if (!['text', 'checkbox', 'number'].includes(type)) continue;\n\n                if (!name) continue;\n\n                if (name.includes('.')) {\n                    const processedName = name.split('.');\n                    if (!payload[processedName[0]]) payload[processedName[0]] = {};\n                    payload[processedName[0]][processedName[1]] = value;\n                    continue;\n                }\n\n                payload[name] = (type === 'checkbox') ? el.checked : value;\n            }\n\n            const url = props.baseURL + '/' + bookingFormId + '/update';\n            const method = 'POST';\n            const body = JSON.stringify(payload);\n            const headers = { \"Content-Type\": \"application/json\" };\n\n            const response = await sendRequest({ url, method, body, headers });\n\n            dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Record updated!', title: 'Request Completed!', severity: 'success' }))\n\n            setReloadComp(prev => !prev);\n        } catch (err) {\n            dispatch(AlertSliceActions.showAlert({ message: err.msg ?? `Failed to update record`, title: 'Request Failed!', severity: 'error' }))\n        }\n    }\n\n    function handelPriceSheetFileSelection(event) {\n        const from = event.target.dataset.from;\n\n        if (from === 'MENU_ITEM') {\n            const inputElement = document.createElement('input');\n            inputElement.style.display = 'none';\n            inputElement.type = 'file';\n            inputElement.accept = 'application/pdf';\n            inputElement.dataset['from'] = 'INPUT_ELEM';\n            const teardown = () => {\n                document.body.removeEventListener('focus', teardown, true);\n                setTimeout(() => {\n                    document.body.removeChild(inputElement);\n                }, 1000);\n            }\n            document.body.addEventListener('focus', teardown, true);\n            document.body.appendChild(inputElement);\n            inputElement.onchange = handelPriceSheetFileSelection;\n            inputElement.click();\n        }\n\n        if (from === 'INPUT_ELEM') {\n            const file = event.target.files[0]\n            const type = file.type;\n            const fileName = file.name;\n\n            if (type !== 'application/pdf')\n                return dispatch(AlertSliceActions.showAlert({ message: 'Only PDF file types are supported!', title: 'Request Failed!', severity: 'error' }))\n\n            if (!window.confirm(`Filename: ${fileName}\\nAre you sure that you want to upload this file?`)) return;\n\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = async () => {\n                try {\n                    const url = props.baseURL + '/' + bookingFormId + '/upload-attachments?upload=PRICE_SHEET';\n                    const method = 'POST';\n                    const headers = { 'content-type': 'application/json' };\n                    const data = reader.result.split(',')[1];\n                    const body = JSON.stringify({ fileName, type, data });\n\n                    const response = await sendRequest({ url, method, body, headers });\n\n                    VIEW_DATA.priceSheet.fileName = fileName;\n                    VIEW_DATA.priceSheet.data = data;\n                    dispatch(AlertSliceActions.showAlert({ message: response.msg || 'Document upload successfully', title: 'Request Completed!', severity: 'success' }));\n                    setPriceSheetMenuState();\n                } catch (error) {\n                    dispatch(AlertSliceActions.showAlert({ message: error.msg || 'Document upload failed', title: 'Request Failed!', severity: 'error' }))\n                }\n            }\n        }\n    }\n\n    async function resetApprovalsForUnlockingBookingForm(){\n        try{\n            if(!window.confirm('All the approval\\'s progress will be lost. Would you like to proceed?')) return;\n\n            const url = props.baseURL + '/' + bookingFormId + '/reset-approvals-and-unlock-bookingform';\n            const method = 'POST';\n            const headers = { 'content-type': 'application/json' };\n\n            await sendRequest({ url, method, headers });\n\n            setReloadComp(prev => !prev);\n        } catch(err){\n            dispatch(AlertSliceActions.showAlert({ message: err.msg || 'Failed to process request', title: 'Request Failed!', severity: 'error' }))\n        }\n    }\n\n    function projectChangeHandler(_, val) {\n        setBookingFormData(prev => ({ ...prev, Project: val, ProjectUnit: null }));\n        if (!val) setProjectState(prev => ({ ...prev, projectUnits: [] }))\n    }\n\n    function sourceInputChangeHandler(_, val){        \n        const isCPSelected = channelPartnerLabels.includes(val.label.toLowerCase());\n        setCpNameViewState(isCPSelected);\n        setBookingFormData(prev => ({ \n            ...prev, \n            source: val, \n            subsource: null, \n            channelpartner: isCPSelected? prev.channelpartner : null\n        }))\n    }\n\n    function genShareableLinkPopupCtrl(event){\n        setGenShareableLinkState(Boolean(event?.target));\n    }\n\n    /* If error occured while fetcing the data rendering error msg instead of data view*/\n    if (bookingFormData?.error){\n        console.log(bookingFormData.error);\n        return (\n            <div className={STYLES.container}>\n                <h2 style={{ textAlign: 'center' }}>{bookingFormData.error.msg || `Failed to fetch booking form data from \"${bookingFormId}\"`}</h2>\n            </div>\n        )\n    }\n\n    return bookingFormData && (\n        <>\n            <HeaderView styles={STYLES} bookingFormData={bookingFormData} />\n\n            <div className={STYLES.container}>\n                <div className={TOOLBAR_STYLES.toolBar}>\n                    <div className={TOOLBAR_STYLES.left} />\n\n                    <div className={TOOLBAR_STYLES.right}>\n                        <span className={TOOLBAR_STYLES.icon}>\n                            <Tooltip title=\"New shareable link\">\n                                <IconButton onClick={genShareableLinkPopupCtrl}>\n                                    <AddLinkIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </span>\n\n                        <span className={TOOLBAR_STYLES.icon}>\n                            <Tooltip title=\"Refresh\">\n                                <IconButton onClick={(e) => setReloadComp(prev => !prev)}>\n                                    <RefreshIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </span>\n\n                        <span className={TOOLBAR_STYLES.icon}>\n                            <Tooltip title=\"Download\">\n                                <span>\n                                    <IconButton disabled>\n                                        <DownloadIcon />\n                                    </IconButton>\n                                </span>\n                            </Tooltip>\n                        </span>\n\n                        <span className={TOOLBAR_STYLES.icon}>\n                            <Tooltip title=\"Re-Notify for approvals\">\n                                <span>\n                                    <IconButton disabled>\n                                        <CampaignIcon />\n                                    </IconButton>\n                                </span>\n                            </Tooltip>\n                        </span>\n\n                        <span className={TOOLBAR_STYLES.icon}>\n                            <Tooltip title=\"Unlock Booking Form\">\n                                <span>\n                                    <IconButton disabled={bookingFormData.status === 'Pending'} onClick={resetApprovalsForUnlockingBookingForm}>\n                                        <LockOpenIcon />\n                                    </IconButton>\n                                </span>\n                            </Tooltip>\n                        </span>\n\n                        <span className={TOOLBAR_STYLES.icon}>\n                            <Tooltip title=\"Soft Delete\">\n                                <span>\n                                    <IconButton disabled>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </span>\n                            </Tooltip>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <main className={STYLES.bookingFormConainter}>\n                <form onSubmit={handelFormSubmission} onKeyDown={e => e.key === 'Enter' ? e.preventDefault() : ''}>\n                    <div className={`${STYLES.container} ${STYLES.bfData}`}>\n                        {/* Personal Information */}\n                        <section>\n                            <div className={STYLES.headerInformation}>\n                                <p>\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\n                                        <DoubleArrowIcon />\n                                    </IconButton>\n                                    Personal Information\n                                </p>\n                            </div>\n                            <div className={STYLES.data}>\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Full Name\"\n                                    name=\"fullName\"\n                                    defaultValue={bookingFormData.fullName}\n                                    disabled={!isEditable}\n                                    // onChange={handelBookingFormDataChange}\n                                    required\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Email Id\"\n                                    name=\"emailId\"\n                                    defaultValue={bookingFormData.emailId}\n                                    disabled={!isEditable}\n                                // onChange={handelBookingFormDataChange}\n                                />\n\n                                <LocalizationProvider dateAdapter={AdapterMoment}>\n                                    <DatePicker\n                                        className={STYLES.inputContainer}\n                                        label=\"Date Of Birth\"\n                                        defaultValue={bookingFormData.dateOfBirth}\n                                        name='dateOfBirth'\n                                        disabled={!isEditable}\n                                        disableFuture\n                                        onChange={date => setBookingFormData(prev => ({ ...prev, dateOfBirth: date }))}\n                                    />\n                                </LocalizationProvider>\n\n                                <FormControl className={STYLES.inputContainer}>\n                                    <InputLabel id=\"Gender\">Gender</InputLabel>\n                                    <Select\n                                        labelId=\"Gender\"\n                                        defaultValue={bookingFormData.gender}\n                                        name=\"gender\"\n                                        label=\"Gender\"\n                                        disabled={!isEditable}\n                                    // onChange={handelBookingFormDataChange}\n                                    >\n                                        {GENDERS.map(gender => <MenuItem value={gender} key={`PI-${gender}`}>{gender}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n\n                                <FormControl className={STYLES.inputContainer}>\n                                    <InputLabel id=\"Nationality\">Nationality</InputLabel>\n                                    <Select\n                                        labelId=\"Nationality\"\n                                        defaultValue={bookingFormData.nationality}\n                                        name=\"nationality\"\n                                        label=\"Nationality\"\n                                        disabled={!isEditable}\n                                    // onChange={handelBookingFormDataChange}\n                                    >\n                                        {NATIONALITIES.map(nat => <MenuItem value={nat} key={`PI-${nat}`}>{nat}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Mobile Number\"\n                                    defaultValue={bookingFormData.mobileNumber}\n                                    name=\"mobileNumber\"\n                                    disabled={!isEditable}\n                                // onChange={handelBookingFormDataChange}\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Alternate Mobile Number\"\n                                    defaultValue={bookingFormData.alternateMobileNumber}\n                                    name=\"alternateMobileNumber\"\n                                    disabled={!isEditable}\n                                // onChange={handelBookingFormDataChange}\n                                />\n\n                                <FormControl className={STYLES.inputContainer}>\n                                    <InputLabel id=\"MaritalStatus\">Marital Status</InputLabel>\n                                    <Select\n                                        labelId=\"MaritalStatus\"\n                                        label=\"MaritalStatus\"\n                                        defaultValue={bookingFormData.maritalStatus}\n                                        name=\"maritalStatus\"\n                                        disabled={!isEditable}\n                                    // onChange={handelBookingFormDataChange}\n                                    >\n                                        {MARITAL_STATUS.map(ms => <MenuItem value={ms} key={`PI-${ms}`}>{ms}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n\n                                <FormControl className={STYLES.inputContainer}>\n                                    <InputLabel id=\"wantToAdd_CoApp\">Want to add Co Applicant?</InputLabel>\n                                    <Select\n                                        labelId=\"wantToAdd_CoApp\"\n                                        label=\"PresentAddressType\"\n                                        defaultValue={bookingFormData.wantToAdd_CoApp}\n                                        name=\"wantToAdd_CoApp\"\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, wantToAdd_CoApp: e.target.value }))}\n                                    >\n                                        {CO_APPLICANT_OPTIONS.map(opt => <MenuItem value={opt} key={`PI-${opt}`}>{opt}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n\n                                <FormControl className={STYLES.inputContainer} disabled>\n                                    <InputLabel id=\"PresentAddressType\" disabled>Present Address Type</InputLabel>\n                                    <Select\n                                        labelId=\"PresentAddressType\"\n                                        label=\"PresentAddressType\"\n                                        defaultValue={bookingFormData.permanentAddressType}\n                                        name=\"permanentAddressType\"\n                                        disabled\n                                    >\n                                        {PERMANENT_ADDRESS_TYPES.map(type => <MenuItem value={type} key={`PI-${type}`}>{type}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n                            </div>\n\n                            <div className={STYLES.data}>\n                                <div className={STYLES.addressMainContainer}>\n                                    <label>Present Address</label>\n                                    <div className={STYLES.addressContainer}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Address Line 1\"\n                                            defaultValue={bookingFormData.presentAddress?.addressLine1}\n                                            name=\"presentAddress.addressLine1\"\n                                            // onChange={handelBookingFormDataChange}\n                                            disabled={!isEditable}\n                                        />\n\n                                        <TextField\n                                            fullWidth\n                                            label=\"Address Line 2\"\n                                            defaultValue={bookingFormData.presentAddress?.addressLine2}\n                                            name=\"presentAddress.addressLine2\"\n                                            // onChange={handelBookingFormDataChange}\n                                            disabled={!isEditable}\n                                        />\n                                        <div className={STYLES.twoInputContainer}>\n                                            <TextField\n                                                fullWidth\n                                                label=\"City\"\n                                                defaultValue={bookingFormData.presentAddress?.city}\n                                                name=\"presentAddress.city\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                            <TextField\n                                                fullWidth\n                                                label=\"State\"\n                                                defaultValue={bookingFormData.presentAddress?.state}\n                                                name=\"presentAddress.state\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                        </div>\n                                        <div className={STYLES.twoInputContainer}>\n                                            <TextField\n                                                fullWidth\n                                                label=\"Country\"\n                                                defaultValue={bookingFormData.presentAddress?.country}\n                                                name=\"presentAddress.country\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                            <TextField\n                                                fullWidth\n                                                label=\"Pincode\"\n                                                defaultValue={bookingFormData.presentAddress?.pincode}\n                                                name=\"presentAddress.pincode\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className={STYLES.addressMainContainer}>\n                                    <label>Permanent Address</label>\n                                    <div className={STYLES.addressContainer}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Address Line 1\"\n                                            defaultValue={bookingFormData.permanentAddress?.addressLine1}\n                                            name=\"permanentAddress.addressLine1\"\n                                            // onChange={handelBookingFormDataChange}\n                                            disabled={!isEditable}\n                                        />\n\n                                        <TextField\n                                            fullWidth\n                                            label=\"Address Line 2\"\n                                            defaultValue={bookingFormData.permanentAddress?.addressLine2}\n                                            name=\"permanentAddress.addressLine2\"\n                                            // onChange={handelBookingFormDataChange}\n                                            disabled={!isEditable}\n                                        />\n                                        <div className={STYLES.twoInputContainer}>\n                                            <TextField\n                                                fullWidth\n                                                label=\"City\"\n                                                defaultValue={bookingFormData.permanentAddress?.city}\n                                                name=\"permanentAddress.city\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                            <TextField\n                                                fullWidth\n                                                label=\"State\"\n                                                defaultValue={bookingFormData.permanentAddress?.state}\n                                                name=\"permanentAddress.state\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                        </div>\n                                        <div className={STYLES.twoInputContainer}>\n                                            <TextField\n                                                fullWidth\n                                                label=\"Country\"\n                                                defaultValue={bookingFormData.permanentAddress?.country}\n                                                name=\"permanentAddress.country\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                            <TextField\n                                                fullWidth\n                                                label=\"Pincode\"\n                                                defaultValue={bookingFormData.permanentAddress?.pincode}\n                                                name=\"permanentAddress.pincode\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n\n                        {/* Co-Applicant Information */}\n                        {\n                            bookingFormData.wantToAdd_CoApp === 'Yes' &&\n                            <section>\n                                <div className={STYLES.headerInformation}>\n                                    <p>\n                                        <IconButton disableFocusRipple={true} disableRipple={true}>\n                                            <DoubleArrowIcon />\n                                        </IconButton>\n                                        Co-Applicant Information\n                                    </p>\n                                </div>\n                                <div className={STYLES.data}>\n                                    <TextField\n                                        className={STYLES.inputContainer}\n                                        label=\"Co-Applicant's Full Name\"\n                                        name=\"coApp_FullName\"\n                                        defaultValue={bookingFormData.coApp_FullName}\n                                        disabled={!isEditable}\n                                    // onChange={handelBookingFormDataChange}\n                                    />\n\n                                    <TextField\n                                        className={STYLES.inputContainer}\n                                        label=\"Co-Applicant's Email Id\"\n                                        name=\"coApp_emailId\"\n                                        defaultValue={bookingFormData.coApp_emailId}\n                                        disabled={!isEditable}\n                                    // onChange={handelBookingFormDataChange}\n                                    />\n\n                                    <LocalizationProvider dateAdapter={AdapterMoment}>\n                                        <DatePicker\n                                            className={STYLES.inputContainer}\n                                            label=\"Co-Applicant's Date Of Birth\"\n                                            defaultValue={bookingFormData.coApp_dateOfBirth}\n                                            name='coApp_dateOfBirth'\n                                            disabled={!isEditable}\n                                            disableFuture\n                                            onChange={date => setBookingFormData(prev => ({ ...prev, coApp_dateOfBirth: date }))}\n                                        />\n                                    </LocalizationProvider>\n\n                                    <FormControl className={STYLES.inputContainer}>\n                                        <InputLabel id=\"Co-Applicant's Gender\">Co-Applicant's Gender</InputLabel>\n                                        <Select\n                                            labelId=\"Co-Applicant's Gender\"\n                                            defaultValue={bookingFormData.coApp_gender}\n                                            name=\"coApp_gender\"\n                                            label=\"Co-Applicant's Gender\"\n                                            disabled={!isEditable}\n                                        // onChange={handelBookingFormDataChange}\n                                        >\n                                            {GENDERS.map(gender => <MenuItem value={gender} key={`PI-${gender}`}>{gender}</MenuItem>)}\n                                        </Select>\n                                    </FormControl>\n\n                                    <FormControl className={STYLES.inputContainer}>\n                                        <InputLabel id=\"Co-Applicant's Nationality\">Co-Applicant's Nationality</InputLabel>\n                                        <Select\n                                            labelId=\"Co-Applicant's Nationality\"\n                                            defaultValue={bookingFormData.coApp_nationality}\n                                            name=\"coApp_nationality\"\n                                            label=\"Co-Applicant's Nationality\"\n                                            disabled={!isEditable}\n                                        // onChange={handelBookingFormDataChange}\n                                        >\n                                            {NATIONALITIES.map(nat => <MenuItem value={nat} key={`PI-${nat}`}>{nat}</MenuItem>)}\n                                        </Select>\n                                    </FormControl>\n\n                                    <TextField\n                                        className={STYLES.inputContainer}\n                                        label=\"Co-Applicant's Mobile Number\"\n                                        defaultValue={bookingFormData.coApp_mobileNumber}\n                                        name=\"coApp_mobileNumber\"\n                                        disabled={!isEditable}\n                                    // onChange={handelBookingFormDataChange}\n                                    />\n\n                                    <TextField\n                                        className={STYLES.inputContainer}\n                                        label=\"Co-Applicant's Alternate Mobile Number\"\n                                        defaultValue={bookingFormData.coApp_alternateMobileNumber}\n                                        name=\"coApp_alternateMobileNumber\"\n                                        disabled={!isEditable}\n                                    // onChange={handelBookingFormDataChange}\n                                    />\n\n                                    <FormControl className={STYLES.inputContainer}>\n                                        <InputLabel id=\"coApp_maritalStatus\">Co-Applicant's Marital Status</InputLabel>\n                                        <Select\n                                            labelId=\"coApp_maritalStatus\"\n                                            label=\"Co-Applicant's Marital Status\"\n                                            defaultValue={bookingFormData.coApp_maritalStatus}\n                                            name=\"coApp_maritalStatus\"\n                                            disabled={!isEditable}\n                                        // onChange={handelBookingFormDataChange}\n                                        >\n                                            {MARITAL_STATUS.map(ms => <MenuItem value={ms} key={`PI-${ms}`}>{ms}</MenuItem>)}\n                                        </Select>\n                                    </FormControl>\n\n                                    <FormControl className={STYLES.inputContainer} disabled>\n                                        <InputLabel id=\"Co-Applicant's PresentAddressType\" disabled>Co-Applicant's PresentAddressType</InputLabel>\n                                        <Select\n                                            labelId=\"Co-Applicant's PresentAddressType\"\n                                            label=\"Co-Applicant's PresentAddressType\"\n                                            defaultValue={bookingFormData.coApp_permanentAddressType}\n                                            name=\"coApp_permanentAddressType\"\n                                            disabled\n                                        >\n                                            {PERMANENT_ADDRESS_TYPES.map(type => <MenuItem value={type} key={`PI-${type}`}>{type}</MenuItem>)}\n                                        </Select>\n                                    </FormControl>\n                                </div>\n\n                                <div className={STYLES.data}>\n                                    <div className={STYLES.addressMainContainer}>\n                                        <label>Co-Applicant's Present Address</label>\n                                        <div className={STYLES.addressContainer}>\n                                            <TextField\n                                                fullWidth\n                                                label=\"Address Line 1\"\n                                                defaultValue={bookingFormData.coApp_presentAddress?.addressLine1}\n                                                name=\"coApp_presentAddress.addressLine1\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n\n                                            <TextField\n                                                fullWidth\n                                                label=\"Address Line 2\"\n                                                defaultValue={bookingFormData.coApp_presentAddress?.addressLine2}\n                                                name=\"coApp_presentAddress.addressLine2\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                            <div className={STYLES.twoInputContainer}>\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"City\"\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.city}\n                                                    name=\"coApp_presentAddress.city\"\n                                                    // onChange={handelBookingFormDataChange}\n                                                    disabled={!isEditable}\n                                                />\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"State\"\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.state}\n                                                    name=\"coApp_presentAddress.state\"\n                                                    // onChange={handelBookingFormDataChange}\n                                                    disabled={!isEditable}\n                                                />\n                                            </div>\n                                            <div className={STYLES.twoInputContainer}>\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Country\"\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.country}\n                                                    name=\"coApp_presentAddress.country\"\n                                                    // onChange={handelBookingFormDataChange}\n                                                    disabled={!isEditable}\n                                                />\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Pincode\"\n                                                    defaultValue={bookingFormData.coApp_presentAddress?.pincode}\n                                                    name=\"coApp_presentAddress.pincode\"\n                                                    // onChange={handelBookingFormDataChange}\n                                                    disabled={!isEditable}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={STYLES.addressMainContainer}>\n                                        <label>Co-Applicant's Permanent Address</label>\n                                        <div className={STYLES.addressContainer}>\n                                            <TextField\n                                                fullWidth\n                                                label=\"Address Line 1\"\n                                                defaultValue={bookingFormData.coApp_permanentAddress?.addressLine1}\n                                                name=\"coApp_permanentAddress.addressLine1\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n\n                                            <TextField\n                                                fullWidth\n                                                label=\"Address Line 2\"\n                                                defaultValue={bookingFormData.coApp_permanentAddress?.addressLine2}\n                                                name=\"coApp_permanentAddress.addressLine2\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                            <div className={STYLES.twoInputContainer}>\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"City\"\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.city}\n                                                    name=\"coApp_permanentAddress.city\"\n                                                    // onChange={handelBookingFormDataChange}\n                                                    disabled={!isEditable}\n                                                />\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"State\"\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.state}\n                                                    name=\"coApp_permanentAddress.state\"\n                                                    // onChange={handelBookingFormDataChange}\n                                                    disabled={!isEditable}\n                                                />\n                                            </div>\n                                            <div className={STYLES.twoInputContainer}>\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Country\"\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.country}\n                                                    name=\"coApp_permanentAddress.country\"\n                                                    // onChange={handelBookingFormDataChange}\n                                                    disabled={!isEditable}\n                                                />\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Pincode\"\n                                                    defaultValue={bookingFormData.coApp_permanentAddress?.pincode}\n                                                    name=\"coApp_permanentAddress.pincode\"\n                                                    // onChange={handelBookingFormDataChange}\n                                                    disabled={!isEditable}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </section>\n                        }\n\n                        {/* Project Information */}\n                        <section>\n                            <div className={STYLES.headerInformation}>\n                                <p>\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\n                                        <DoubleArrowIcon />\n                                    </IconButton>\n                                    Project Information\n                                </p>\n                            </div>\n                            <div className={STYLES.data}>\n                                <Autocomplete\n                                    className={STYLES.inputContainer}\n                                    disablePortal\n                                    options={projectState.projects}\n                                    value={bookingFormData.Project}\n                                    onChange={projectChangeHandler}\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                                    noOptionsText=\"Fetching Projects Data..\"\n                                    renderInput={(params) => <TextField {...params} label=\"Projects\" required />}\n                                    disabled={!isEditable}\n                                />\n\n                                <Autocomplete\n                                    className={STYLES.inputContainer}\n                                    disablePortal\n                                    options={projectState.projectUnits}\n                                    value={bookingFormData.ProjectUnit}\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, ProjectUnit: val }))}\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                                    noOptionsText=\"Please select a project to show its related units\"\n                                    renderInput={(params) => <TextField {...params} label=\"Project Units\" required />}\n                                    disabled={!isEditable}\n                                />\n                            </div>\n                                \n                            <div className={STYLES.data}>\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Current Unit Price\"\n                                    name=\"currentUnitPrice\"\n                                    defaultValue={bookingFormData.currentUnitPrice}\n                                    type=\"number\"\n                                    disabled={!isEditable}\n                                    required\n                                />\n                            \n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Total cost\"\n                                    name=\"totalCost\"\n                                    defaultValue={bookingFormData.totalCost}\n                                    type=\"number\"\n                                    disabled={!isEditable}\n                                    required\n                                />\n                        \n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Land Area / BUA / SBA (Sft)\"\n                                    name=\"sqft\"\n                                    type=\"number\"\n                                    defaultValue={bookingFormData.sqft}\n                                    disabled={!isEditable}\n                                    required\n                                />\n\n                                <Autocomplete\n                                    className={STYLES.inputContainer}\n                                    disablePortal\n                                    options={['North', 'South', 'East', 'West']}\n                                    value={bookingFormData.facing}\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, facing: val }))}\n                                    isOptionEqualToValue={(opt, val) => opt === val}\n                                    renderInput={(params) => <TextField {...params} label=\"Facing\" required />}\n                                    disabled={!isEditable}\n                                />\n                            </div>\n\n                            <div className={STYLES.data}>\n                                <FormGroup row sx={{ justifyContent: 'center'}}>\n                                    <FormControlLabel\n                                        className={STYLES.inputContainer}\n                                        control={<Checkbox />}\n                                        label=\"Corner\"\n                                        labelPlacement=\"end\"\n                                        checked={bookingFormData.corner}\n                                        name=\"corner\"\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, corner: e.target.checked }))}\n                                        disabled={!isEditable}\n                                        sx={{ width: 'auto'}}\n                                    />\n\n                                    <Divider orientation=\"vertical\" flexItem />\n\n                                    <FormControlLabel\n                                        className={STYLES.inputContainer}\n                                        control={<Checkbox />}\n                                        label=\"Park Facing\"\n                                        labelPlacement=\"end\"\n                                        checked={bookingFormData.parkFacing}\n                                        name=\"parkFacing\"\n                                        onChange={e => setBookingFormData(prev => ({ ...prev, parkFacing: e.target.checked }))}\n                                        disabled={!isEditable}\n                                        sx={{ width: 'auto', marginLeft: 1 }}\n                                    />\n                                </FormGroup>\n                            </div>\n                        </section>\n\n                        {/* Payment Information */}\n                        <section>\n                            <div className={STYLES.headerInformation}>\n                                <p>\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\n                                        <DoubleArrowIcon />\n                                    </IconButton>\n                                    Payment Information\n                                </p>\n                            </div>\n                            <div className={STYLES.data}>\n                                <FormControl className={STYLES.inputContainer}>\n                                    <InputLabel id=\"ModeOfPayment\">Mode Of Payment</InputLabel>\n                                    <Select\n                                        labelId=\"ModeOfPayment\"\n                                        label=\"ModeOfPayment\"\n                                        name=\"modeOfPayment\"\n                                        defaultValue={bookingFormData.modeOfPayment}\n                                        // onChange={handelBookingFormDataChange}\n                                        disabled={!isEditable}\n                                    >\n                                        {MODE_OF_PAYMENT.map(mop => <MenuItem value={mop} key={mop}>{mop}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n\n                                <FormControl className={STYLES.inputContainer}>\n                                    <InputLabel id=\"PaymentType\">Payment Type</InputLabel>\n                                    <Select\n                                        labelId=\"PaymentType\"\n                                        label=\"PaymentType\"\n                                        name=\"paymentType\"\n                                        defaultValue={bookingFormData.paymentType}\n                                        // onChange={handelBookingFormDataChange}\n                                        disabled={!isEditable}\n                                    >\n                                        {PAYMENT_TYPE.map(pt => <MenuItem value={pt} key={pt}>{pt}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Booking Amount Paid\"\n                                    type=\"number\"\n                                    name=\"bookingAmountPaid\"\n                                    defaultValue={bookingFormData.bookingAmountPaid}\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Discount In Rs (₹)\"\n                                    type=\"number\"\n                                    name=\"discount\"\n                                    defaultValue={bookingFormData.discount}\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n                            </div>\n                            <div className={STYLES.data}>\n                                <Button variant=\"outlined\" data-type=\"PAYMENT_COPY\" onClick={viewUploadedDocuments}>View Payment Confirmation</Button>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={e => setPriceSheetMenuState(e.currentTarget)}\n                                    endIcon={<KeyboardArrowDownIcon />}\n                                >\n                                    Price Sheet\n                                </Button>\n                            </div>\n\n                            <StyledMenu\n                                id=\"notes-menu\"\n                                anchorEl={priceSheetMenuState}\n                                open={Boolean(priceSheetMenuState)}\n                                onClose={e => setPriceSheetMenuState()}\n\n                            >\n                                <MenuItem data-type=\"PRICE_SHEET\" onClick={viewUploadedDocuments}>\n                                    <VisibilityIcon />\n                                    View\n                                </MenuItem>\n                                <MenuItem data-from=\"MENU_ITEM\" disabled={!isEditable} onClick={handelPriceSheetFileSelection}>\n                                    <FileUploadIcon />\n                                    Upload New\n                                </MenuItem>\n                            </StyledMenu>\n                        </section>\n\n                        {/* KYC Documents */}\n                        <section>\n                            <div className={STYLES.headerInformation}>\n                                <p>\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\n                                        <DoubleArrowIcon />\n                                    </IconButton>\n                                    KYC Documents\n                                </p>\n                            </div>\n                            <div className={STYLES.data}>\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Aadhar Number\"\n                                    name=\"aadharNumber\"\n                                    defaultValue={bookingFormData.aadharNumber}\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"PAN Number\"\n                                    name=\"PANNumber\"\n                                    defaultValue={bookingFormData.PANNumber}\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <Button variant=\"outlined\" data-type=\"AADHAR_COPY\" onClick={viewUploadedDocuments}>Photo Copy Of Aadhar</Button>\n                                <Button variant=\"outlined\" data-type=\"PAN_COPY\" onClick={viewUploadedDocuments}>Photo Copy Of PAN</Button>\n                                <Button variant=\"outlined\" data-type=\"PHOTO_OF_APPLICANT\" onClick={viewUploadedDocuments}>photo copy Of Applicant</Button>\n                                {\n                                    bookingFormData.wantToAdd_CoApp === 'Yes' &&\n                                    <Button variant=\"outlined\" data-type=\"PHOTO_OF_CO_APPLICANT\" onClick={viewUploadedDocuments}>photo copy Of co Applicant</Button>\n                                }\n                            </div>\n                        </section>\n\n                        {/* Source / Channel Partner Information */}\n                        <section>\n                            <div className={STYLES.headerInformation}>\n                                <p>\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\n                                        <DoubleArrowIcon />\n                                    </IconButton>\n                                    Source / Channel Partner Information\n                                </p>\n                            </div>\n                            <div className={STYLES.data}>\n                                <Autocomplete\n                                    className={STYLES.inputContainer}\n                                    disablePortal\n                                    options={sourceData.sourceWithSubSource.map(source => ({ id: source.id, label: source.label }))}\n                                    value={bookingFormData.source}\n                                    onChange={sourceInputChangeHandler}\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                                    loadingText='Fetching source infromation'\n                                    renderInput={(params) => <TextField {...params} label=\"Source\" required />}\n                                    disabled={!isEditable}\n                                />\n                                \n                                <Autocomplete\n                                    className={STYLES.inputContainer}\n                                    disablePortal\n                                    options={sourceData.currentSubSourceForSource}\n                                    value={bookingFormData.subsource}\n                                    onChange={(_, val) => setBookingFormData(prev => ({ ...prev, subsource: val }))}\n                                    isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                                    renderInput={(params) => <TextField {...params} label=\"Sub Source\" />}\n                                    disabled={!isEditable}\n                                />\n                                {\n                                    cpNameView && \n                                    <Autocomplete\n                                        className={STYLES.inputContainer}\n                                        disablePortal\n                                        options={channelPartnerData}\n                                        value={bookingFormData.channelpartner}\n                                        onChange={(_, val) => setBookingFormData(prev => ({ ...prev, channelpartner: val }))}\n                                        isOptionEqualToValue={(opt, val) => opt.id === val.id}\n                                        renderInput={(params) => <TextField {...params} label=\"Channel Partner\" required />}\n                                        disabled={!isEditable}\n                                    />\n                                }\n                            </div>\n                        </section>\n\n                        {/* Professional Information */}\n                        <section>\n                            <div className={STYLES.headerInformation}>\n                                <p>\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\n                                        <DoubleArrowIcon />\n                                    </IconButton>\n                                    Professional Information\n                                </p>\n                            </div>\n                            <div className={STYLES.data}>\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Company Name\"\n                                    defaultValue={bookingFormData.companyName}\n                                    name=\"companyName\"\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Profession\"\n                                    defaultValue={bookingFormData.profession}\n                                    name=\"profession\"\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Occupation\"\n                                    defaultValue={bookingFormData.occupation}\n                                    name=\"occupation\"\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Designation\"\n                                    defaultValue={bookingFormData.designation}\n                                    name=\"designation\"\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Industry\"\n                                    defaultValue={bookingFormData.industry}\n                                    name=\"industry\"\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Annual Income\"\n                                    defaultValue={bookingFormData.annualIncome}\n                                    name=\"annualIncome\"\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <div className={STYLES.addressMainContainer}>\n                                    <label>Office Address</label>\n                                    <div className={STYLES.addressContainer}>\n                                        <TextField\n                                            fullWidth\n                                            label=\"Address Line 1\"\n                                            defaultValue={bookingFormData.officeAddress?.addressLine1}\n                                            name=\"officeAddress.addressLine1\"\n                                            // onChange={handelBookingFormDataChange}\n                                            disabled={!isEditable}\n                                        />\n\n                                        <TextField\n                                            fullWidth\n                                            label=\"Address Line 2\"\n                                            defaultValue={bookingFormData.officeAddress?.addressLine2}\n                                            name=\"officeAddress.addressLine2\"\n                                            // onChange={handelBookingFormDataChange}\n                                            disabled={!isEditable}\n                                        />\n                                        <div className={STYLES.twoInputContainer}>\n                                            <TextField\n                                                fullWidth\n                                                label=\"City\"\n                                                defaultValue={bookingFormData.officeAddress?.city}\n                                                name=\"officeAddress.city\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                            <TextField\n                                                fullWidth\n                                                label=\"State\"\n                                                defaultValue={bookingFormData.officeAddress?.state}\n                                                name=\"officeAddress.state\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                        </div>\n                                        <div className={STYLES.twoInputContainer}>\n                                            <TextField\n                                                fullWidth\n                                                label=\"Country\"\n                                                defaultValue={bookingFormData.officeAddress?.country}\n                                                name=\"officeAddress.country\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                            <TextField\n                                                fullWidth\n                                                label=\"Pincode\"\n                                                defaultValue={bookingFormData.officeAddress?.pincode}\n                                                name=\"officeAddress.pincode\"\n                                                // onChange={handelBookingFormDataChange}\n                                                disabled={!isEditable}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n\n                        {/* Other Information */}\n                        <section>\n                            <div className={STYLES.headerInformation}>\n                                <p>\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\n                                        <DoubleArrowIcon />\n                                    </IconButton>\n                                    Other Information\n                                </p>\n                            </div>\n                            <div className={STYLES.data}>\n                                <FormControlLabel\n                                    className={STYLES.inputContainer}\n                                    control={<Checkbox />}\n                                    label=\"Submitted by user\"\n                                    labelPlacement=\"end\"\n                                    checked={bookingFormData.submittedByUser}\n                                    name=\"submittedByUser\"\n                                    onChange={e => setBookingFormData(prev => ({ ...prev, submittedByUser: e.target.checked }))}\n                                    disabled={!isEditable}\n                                />\n\n                                <FormControlLabel\n                                    className={STYLES.inputContainer}\n                                    defaultValue={bookingFormData.agreedToTermsAndCondition}\n                                    control={<Checkbox />}\n                                    label=\"Agreed to terms & condition\"\n                                    disabled\n                                    labelPlacement=\"end\"\n                                />\n\n                                <TextField\n                                    className={STYLES.inputContainer}\n                                    label=\"Purpose Of Purchase\"\n                                    name=\"purposeOfPurchase\"\n                                    defaultValue={bookingFormData.purposeOfPurchase}\n                                    // onChange={handelBookingFormDataChange}\n                                    disabled={!isEditable}\n                                />\n\n                                <TextField className={STYLES.inputContainer} label=\"Created By\" value={bookingFormData.BookingFormCreatedBy?.name} disabled />\n\n                                <TextField className={STYLES.inputContainer} label=\"Updated By\" value={bookingFormData.BookingFormUpdatedBy?.name} disabled />\n\n                                <TextField className={STYLES.inputContainer} label=\"Created At\" value={moment(bookingFormData.createdAt).format('DD/MM/YYYY HH:MM:SS A')} disabled />\n\n                                <TextField className={STYLES.inputContainer} label=\"Updated At\" value={moment(bookingFormData.updatedAt).format('DD/MM/YYYY HH:MM:SS A')} disabled />\n\n                            </div>\n                        </section>\n\n                        {/* Save Information */}\n                        {\n                            isEditable && (\n                                <section>\n                                    <div className={STYLES.data}>\n                                        <Button variant=\"outlined\" onClick={e => navigate('..')}>Cancel</Button>\n                                        <Button variant=\"contained\" type=\"submit\">Save</Button>\n                                    </div>\n                                </section>\n                            )\n                        }\n                    </div>\n                </form>\n\n                <aside>\n                    <div className={`${STYLES.container} ${STYLES.bfNotes}`}>\n                        <section>\n                            <div className={STYLES.headerInformation}>\n                                <p>\n                                    <IconButton disableFocusRipple={true} disableRipple={true}>\n                                        <DoubleArrowIcon />\n                                    </IconButton>\n                                    Approvals\n                                </p>\n                            </div>\n                            <div className={STYLES.data}>\n                                {approverContainerJSX}\n                            </div>\n                        </section>\n                    </div>\n\n                    <NoteHandlerComp\n                        styles={STYLES}\n                        baseURL={props.baseURL}\n                        bookingFormData={bookingFormData}\n                        isEditable={isEditable}\n                    />\n\n                    <ApprovalsHandler  \n                        styles={STYLES}\n                        baseURL={props.baseURL}\n                        setReloadComp={setReloadComp}\n                        isApprover={bookingFormData.isApprover}\n                    />\n\n                    {\n                        !isEmpty(bookingFormData.approvalHistory) && displayApprovalHistory &&\n                        <div className={`${STYLES.container} ${STYLES.bfActions}`}>\n                            <section>\n                                <div className={STYLES.headerInformation}>\n                                    <p>\n                                        <IconButton disableFocusRipple={true} disableRipple={true}>\n                                            <DoubleArrowIcon />\n                                        </IconButton>\n                                        Approval History\n                                    </p>\n                                </div>\n                                <div className={STYLES.data} style={{ maxHeight: '40vh', overflow: 'auto' }}>\n                                    {\n                                        bookingFormData.approvalHistory.map(history => (\n                                            <div className={STYLES.approvalHistoryContainer} key={history.timestamp}>\n                                                <div>\n                                                    <div className={STYLES.note}>\n                                                        <p>\n                                                            {history.status + ' '}\n                                                            on \n                                                            {moment(history.timestamp).isValid(() => {})? moment(history.timestamp).utcOffset('+05:30').format(' DD/MM/YY [at] hh:mm A') : history.timestamp}\n                                                        </p>\n                                                            {(!isEmpty(history.note)) && <p><strong><em>Note</em> : </strong>{history.note}</p>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ))\n                                    }\n                                </div>\n                            </section>\n                        </div>\n                    }\n\n                </aside>\n            </main>\n\n            <CreateUserShareableLink open={genShareableLink} handelModelClose={genShareableLinkPopupCtrl}/>\n\n            {/* Image Modal */}\n            <Modal sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: 'rgba(0,0,0, .8)' }} open={Boolean(modalImageState.imgSrc)} onClose={() => setModalImageState({ imgSrc: '', imgAlt: '' })}>\n                <div>\n                    <DownloadIcon className={STYLES.downloadIcon} onClick={downloadCurrentlyViewingData} />\n                    <CloseIcon className={STYLES.closeIcon} onClick={() => setModalImageState({ imgSrc: '', imgAlt: '' })} />\n                    <img className={STYLES.imgViewer} ref={modelImgRef} src={'data:image/png;base64,' + modalImageState.imgSrc} alt={modalImageState.imgAlt} />\n                </div>\n            </Modal>\n        </>\n    )\n}\n\nexport default View;\n\n\n\n// Email conf\n// Filtet\n// CP Conf\n// Id firld\n// payment\n// link exp\n// note with appr\n// send back\n// rec notifi\n\n// Source conf","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"View_container__h270y\",\"quick-view-conatiner\":\"View_quick-view-conatiner__A5yCD\",\"booking-form-conainter\":\"View_booking-form-conainter__XwLZs\",\"bf-data\":\"View_bf-data__gcymx\",\"bf-actions\":\"View_bf-actions__0pHgg\",\"bf-notes\":\"View_bf-notes__G54kl\",\"approval-history-container\":\"View_approval-history-container__D3vgE\",\"note-container\":\"View_note-container__lO1yG\",\"note-from\":\"View_note-from__yRnF4\",\"note\":\"View_note__eT1Oi\",\"approval-info\":\"View_approval-info__Vlz3A\",\"icon\":\"View_icon__CFsNV\",\"header-information\":\"View_header-information__9k21a\",\"data\":\"View_data__-dJN6\",\"address-main-container\":\"View_address-main-container__++CaF\",\"input-container\":\"View_input-container__BsUYT\",\"approver-container\":\"View_approver-container__ThAGe\",\"information\":\"View_information__7Igpi\",\"rejected\":\"View_rejected__VPLJL\",\"pending\":\"View_pending__ZL0op\",\"approved\":\"View_approved__QVv4h\",\"no-after-content\":\"View_no-after-content__URCb1\",\"img-viewer\":\"View_img-viewer__GbTPi\",\"download-icon\":\"View_download-icon__jS7sW\",\"close-icon\":\"View_close-icon__OTmo+\",\"modal-note-conatiner\":\"View_modal-note-conatiner__SpWhl\",\"note-inputs-container\":\"View_note-inputs-container__XsX9i\",\"note-actions-container\":\"View_note-actions-container__HbcHR\",\"required\":\"View_required__hjOXm\",\"address-container\":\"View_address-container__qnwod\",\"two-input-container\":\"View_two-input-container__UOfWe\",\"wrong-input\":\"View_wrong-input__HYPZ6\",\"disabled\":\"View_disabled__fWxoM\"};","// Functional Imports\nimport { useState, useMemo } from \"react\";\nimport { useRoutes, useNavigate, Navigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { HeaderSliceActions } from \"../store/header-slice\";\nimport { useEffect, lazy, Suspense } from \"react\";\nimport { useHttpClientWithNavigate } from \"../utility/http-hook\";\n\n// Component Imports\nimport Loading from \"../componets/Loading/Loading\";\nimport ViewAll from \"../Apps/BookingForm/ViewAll/ViewAll\";\nimport View from \"../Apps/BookingForm/View/View\";\nimport { useParams } from \"react-router-dom\";\n\n// Components Imports (Lazy)\nconst Root = lazy(() => import(\"../Apps/BookingForm/Root\"))\n\nfunction BookingFormPages(){\n    const dispatcher            = useDispatch();\n    const sendRequest           = useHttpClientWithNavigate();\n    const navigate              = useNavigate();\n    const baseURL               = '/booking-form';\n    const [router, setRouter]   = useState([]);\n\n    const routes = useMemo(() => [\n        { \n            index: true, \n            element: (\n                <Suspense fallback={<Loading fallback />}>\n                    <Root baseURL={baseURL}/>,\n                </Suspense>\n            )\n        },\n        { \n            path: 'view', \n            element: (\n                <Suspense fallback={<Loading fallback />}>\n                    <ViewAll baseURL={baseURL}/> \n                </Suspense>\n            )\n        },    \n        { \n            path: '/:bookingFormId', \n            element: (\n                <Suspense fallback={<Loading fallback />}>\n                    <RedirectToBookingFormView baseURL={baseURL}/> \n                </Suspense>\n            )\n        },    \n        { \n            path: ':bookingFormId/view', \n            element: (\n                <Suspense fallback={<Loading fallback />}>\n                    <View baseURL={baseURL}/> \n                </Suspense>\n            )\n        },    \n        { \n            path: 'reports', \n            element: (\n                <Suspense fallback={<Loading fallback />}>\n                    <p>Will be added soon</p> \n                </Suspense>\n            )\n        },    \n        { \n            path: '*', \n            element: (\n                <Suspense fallback={<Loading fallback />}>\n                    <Navigate to='/error' state={{ statusText: 'Page Not Found!', status: 404 }} />\n                </Suspense>\n            )\n        }    \n    ], []);\n\n    useEffect(() => {\n\n        (async () => {\n            try{\n                const response = await sendRequest({ url: '/apps/booking-form/app-headers' });\n\n                if(!response) return\n            \n                dispatcher( HeaderSliceActions.setHeaders({ \n                    currentApp: 'Booking Form', \n                    appTabs: response.allowedtabs.map(tab => ({ ...tab, baseURL })),\n                    appPermissions: response.permissions\n                }) );\n\n                setRouter(routes);\n            } catch( err ){\n                navigate('/error', { state: { status: err.status, data: err.msg } });\n            }\n        })();\n        \n    }, [dispatcher, navigate, routes, sendRequest]);\n\n    ;\n    \n    return useRoutes(router);\n}\n\nfunction RedirectToBookingFormView(props){\n    const { bookingFormId } = useParams();\n    return <Navigate to={`${props.baseURL}/${bookingFormId}/view`}  replace={true} />\n}\n\nexport default BookingFormPages;","// Functional imports\nimport { HeaderSliceName } from \"../store/header-slice\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * Checks whether the user is allowed to access the tab against the current headers \n * @param {String} tabEndpoint \n * @returns {[isAllowedToAccessTab: boolean, allowedTabs: [(Map<string, string>)]]}\n */\nfunction useTabAccessVerifier(tabEndpoint){\n    const allowedTabs = useSelector(state => state[HeaderSliceName]).appTabs;\n    const isAllowedToAccessTab = allowedTabs.filter(tab => tab.endpoint === tabEndpoint);\n\n    return [isAllowedToAccessTab.length > 0, allowedTabs];\n}\n\nexport default useTabAccessVerifier;"],"names":["STYLES","cssNameSimplifier","boxStyle","position","top","left","transform","width","bgcolor","border","boxShadow","maxHeight","p","props","useMediaQuery","_jsx","Modal","open","children","_jsxs","Box","sx","IconButton","className","closeIcon","onClick","handelModelClose","CloseIcon","title","_Fragment","Typography","variant","component","textAlign","Divider","marginY","childrenContainer","style","marginRight","styles","StyledTableCell","styled","TableCell","_ref","theme","concat","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","_ref2","action","hover","bookingFormDataReducer","state","type","loadMore","data","length","pop","isEmpty","dispatch","useDispatch","sendRequest","useHttpClientWithNavigate","bookingFromState","dispatchBookingFormState","useReducer","async","fetchBookingFormData","currentUrl","URL","window","location","urlWithFilters","baseURL","search","headers","bookingFormData","url","err","_err$msg","AlertSliceActions","showAlert","message","msg","severity","useEffect","tableContainer","TableContainer","Paper","Table","minWidth","TableHead","align","TableBody","map","row","index","dataRow","scope","Link","to","id","fullName","emailId","mobileNumber","Project","name","ProjectUnit","status","submittedByUser","CheckIcon","moment","createdAt","format","BookingFormCreatedBy","noDataFound","loadMoreContainer","Button","TOOLBAR_STYLES","viewAllStyles","userDataReducer","newState","JSON","parse","stringify","dataList","currentDataIndex","showIterator","totalDataLength","fetchBy","setFetchBy","useState","userData","userDataDispatcher","handelDataIteration","handelFetchedUserData","method","autoComplete","onSubmit","event","preventDefault","userinfo","target","elements","userInfo","value","response","marginBottom","display","inputGroup","ToggleButtonGroup","exclusive","onChange","_","newFetchBy","ToggleButton","marginTop","TextField","input","label","required","icon","Tooltip","size","CloudSyncIcon","fetchedDataIterator","e","ChevronLeftIcon","ChevronRightIcon","channelPartnerLabels","sourceData","setSourceData","sourceWithSubSource","currentSubSourceForSource","cpNameView","setCpNameViewState","channelPartnerData","setChannelPartnerData","inputChangeHandler","key","setUserData","prev","_props$userData","_props$userData$sourc","source","filter","includes","then","responseData","modifiedChannelPartner","cp","catch","_err$msg2","_source$","subsources","_props$userData$sourc2","_props$userData$sourc3","toLowerCase","Autocomplete","disablePortal","options","val","isOptionEqualToValue","opt","loadingText","renderInput","params","subSource","noOptionsText","channelpartner","VisuallyHiddenInput","clip","clipPath","height","overflow","bottom","whiteSpace","_userData$priceSheet","_userData$priceSheet2","projectState","setProjectState","projects","projectUnits","project","projectUnit","channelPartner","priceSheet","handelInputChange","file","files","fileName","LoaderSliceActions","setDisplayLoader","from","reader","FileReader","readAsDataURL","onload","result","split","onCloseEvent","projectsData","prj","_userData$project","projectUnitsData","prjUnit","PopupModel","FetchDataFromLeadSquare","FirstName","LastName","trim","EmailAddress","Phone","mx_Project_Name","Source","mx_Sub_Source","mx_Channel_Partner_Name","console","log","_err$msg3","inputContainer","role","undefined","tabIndex","startIcon","CloudUploadIcon","accept","Alert","FileIcon","margin","SourceInfoHandler","importStyles","reduceFilterDataProcess","Set","years","filterType","has","delete","add","filterStatus","filterApplied","displayBadge","searchState","setSearchState","filterDisplay","setFilterDisplay","refreshState","setRefreshState","filters","dispatchFilters","projectsList","setProjectlist","filterParams","useSearchParams","searchBoxRef","useRef","createNewView","setCreateNewView","isAllowedToAccessTab","useTabAccessVerifier","navigate","useNavigate","updateFilterCondition","applyFilter","urlWithfilters","filterData","currentURL","newURLWIthParams","origin","pathname","Object","keys","forEach","filterName","filterParam","join","searchParams","set","composeFilterParams","history","pushState","get","interval","setTimeout","clearTimeout","current","focus","viewContainer","toolBar","ClickAwayListener","onClickAway","searchConatiner","Badge","invisible","SearchIcon","active","notActive","OutlinedInput","endAdornment","InputAdornment","InfoOutlinedIcon","placeholder","autoFocus","inputRef","right","RefreshIcon","FilterAltIcon","disabled","DownloadIcon","AddIcon","TableView","Drawer","drawer","anchor","onClose","List","filtersList","ListItem","Accordion","defaultExpanded","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","_filters$status","ListItemButton","ListItemText","primary","Array","Date","getFullYear","_filters$years","year","_filters$projects","submitted","_filters$submittedByU","filterActions","CreateNew","openBase64NewTab","base64Pdf","blob","base64Data","sliceSize","byteCharacters","atob","bytesLength","slicesCount","Math","ceil","byteArrays","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","base64toBlob","navigator","msSaveOrOpenBlob","blobUrl","createObjectURL","StyledMenu","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","spacing","mode","grey","padding","text","secondary","alpha","main","selectedOpacity","bookingFormId","useParams","notesState","setNotesState","noteMenuAndModalState","setNoteMenuAndModalState","menuAnchor","modalType","noteUserInputState","setNoteUserInputState","note","requriesApproval","headerSlice","useSelector","HeaderSliceName","appPermissions","noteApprover","isEditable","setIsEditableState","handelNoteProcessing","newURL","notes","noteId","handelNoteMenuAndModal","alert","currentTarget","approval","checked","container","bfNotes","headerInformation","disableFocusRipple","disableRipple","DoubleArrowIcon","justifyContent","noteContainer","noteFrom","approvalInfo","PendingActionsIcon","CheckCircleOutlineIcon","updatedBy","HighlightOffIcon","MoreVertIcon","anchorEl","Boolean","MenuItem","CheckCircleIcon","CancelIcon","EditNoteIcon","DeleteIcon","keepMounted","modalNoteConatiner","noteInputsContainer","noteTextField","fullWidth","multiline","minRows","maxRows","FormControlLabel","control","Checkbox","labelPlacement","noteActionsContainer","setStatus","setNote","employeeRole","employee","submitApprovals","statusReq","closeModal","setReloadComp","autoclose","isApprover","bfActions","endIcon","SettingsBackupRestoreIcon","DoNotDisturbAltIcon","TaskAltIcon","_props$bookingFormDat","_props$bookingFormDat2","_props$bookingFormDat3","_props$bookingFormDat4","_props$bookingFormDat5","_props$bookingFormDat6","_props$bookingFormDat7","_props$bookingFormDat8","_props$bookingFormDat9","_props$bookingFormDat10","indianRupeesFormater","Intl","NumberFormat","currency","quickViewConatiner","orientation","flexItem","currentUnitPrice","discount","totalCost","sqft","copyIconState","setCopyIconState","ContentCopyIcon","copy","userBookingFormLink","useMemo","rel","href","maxWidth","marginInline","clipboard","writeText","DoneIcon","timeout","GENDERS","NATIONALITIES","MARITAL_STATUS","PERMANENT_ADDRESS_TYPES","MODE_OF_PAYMENT","PAYMENT_TYPE","CO_APPLICANT_OPTIONS","VIEW_DATA","aadhar","panCard","applicant","coApplicant","paymentConfirmation","_bookingFormData$pres","_bookingFormData$pres2","_bookingFormData$pres3","_bookingFormData$pres4","_bookingFormData$pres5","_bookingFormData$pres6","_bookingFormData$perm","_bookingFormData$perm2","_bookingFormData$perm3","_bookingFormData$perm4","_bookingFormData$perm5","_bookingFormData$perm6","_bookingFormData$coAp","_bookingFormData$coAp2","_bookingFormData$coAp3","_bookingFormData$coAp4","_bookingFormData$coAp5","_bookingFormData$coAp6","_bookingFormData$coAp7","_bookingFormData$coAp8","_bookingFormData$coAp9","_bookingFormData$coAp10","_bookingFormData$coAp11","_bookingFormData$coAp12","_bookingFormData$offi","_bookingFormData$offi2","_bookingFormData$offi3","_bookingFormData$offi4","_bookingFormData$offi5","_bookingFormData$offi6","_bookingFormData$Book","_bookingFormData$Book2","modelImgRef","modalImageState","setModalImageState","imgSrc","imgAlt","setBookingFormData","reloadComp","priceSheetMenuState","setPriceSheetMenuState","genShareableLink","setGenShareableLinkState","editable","displayApprovalHistory","approverContainerJSX","proceessApprovals","useCallback","containerClassName","information","iconToDisplay","approved","rejected","pending","approvals","projectHeadStatus","projectHead","salesAndmarketingHeadStatus","salesAndMarketingHead","projectDirectorStatus","projectDirector","push","approverContainer","displayMessage","noAfterContent","viewUploadedDocuments","dataset","modalPayload","fetchData","_err$msg5","responsePayload","PAYMENT_COPY","endsWith","AADHAR_COPY","PAN_COPY","PHOTO_OF_APPLICANT","PHOTO_OF_CO_APPLICANT","PRICE_SHEET","genShareableLinkPopupCtrl","reload","_data$source","dateValuesToFormat","jsonStringToParse","autoSelectFormating","Error","error","_bookingFormData$Proj","_bookingFormData$sour","_err$msg4","HeaderView","AddLinkIcon","CampaignIcon","confirm","LockOpenIcon","bookingFormConainter","payload","dateOfBirth","coApp_dateOfBirth","subsource","facing","el","processedName","_err$msg6","onKeyDown","bfData","defaultValue","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","disableFuture","date","FormControl","InputLabel","Select","labelId","gender","nationality","nat","alternateMobileNumber","maritalStatus","ms","wantToAdd_CoApp","permanentAddressType","addressMainContainer","addressContainer","presentAddress","addressLine1","addressLine2","twoInputContainer","city","country","pincode","permanentAddress","coApp_FullName","coApp_emailId","coApp_gender","coApp_nationality","coApp_mobileNumber","coApp_alternateMobileNumber","coApp_maritalStatus","coApp_permanentAddressType","coApp_presentAddress","coApp_permanentAddress","FormGroup","corner","parkFacing","marginLeft","modeOfPayment","mop","paymentType","pt","bookingAmountPaid","KeyboardArrowDownIcon","VisibilityIcon","handelPriceSheetFileSelection","inputElement","document","createElement","teardown","removeEventListener","removeChild","addEventListener","appendChild","onchange","click","FileUploadIcon","aadharNumber","PANNumber","isCPSelected","companyName","profession","occupation","designation","industry","annualIncome","officeAddress","agreedToTermsAndCondition","purposeOfPurchase","BookingFormUpdatedBy","updatedAt","NoteHandlerComp","ApprovalsHandler","approvalHistory","approvalHistoryContainer","timestamp","isValid","utcOffset","CreateUserShareableLink","zIndex","downloadIcon","imgViewer","ref","src","alt","Root","lazy","RedirectToBookingFormView","Navigate","replace","dispatcher","router","setRouter","routes","element","Suspense","fallback","Loading","path","ViewAll","View","statusText","HeaderSliceActions","setHeaders","currentApp","appTabs","allowedtabs","tab","permissions","useRoutes","tabEndpoint","allowedTabs","endpoint"],"sourceRoot":""}
{"version":3,"file":"static/js/217.0318b4d0.chunk.js","mappings":"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","sources":["Apps/AccountSetings/Profile/Profile.js","webpack://my-admin/./src/Apps/AccountSetings/Profile/Profile.module.css?0281","pages/AccountSettingsPages.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["// Functional imports\nimport cssNameSimplifier from '../../../utility/css-name-simplifier';\nimport { useEffect, useState } from 'react';\nimport { useHttpClientWithNavigate } from '../../../utility/http-hook';\nimport { HeaderSliceName } from '../../../store/header-slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AlertSliceActions } from '../../../store/alert-slice';\nimport { useParams } from 'react-router-dom';\nimport isEmpty from '../../../utility/is-empty';\n\n// Components imports\nimport { Box, Paper, Avatar, Typography, Button, Divider } from '@mui/material';\nimport { FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\n\n\n// Style Imports\nimport importedStyles from './Profile.module.css';\n\nconst STYLES = cssNameSimplifier(importedStyles);\n\nfunction Profile(props) {\n    const [disabled, setDisabledState]  = useState(true);\n    const [userData, setUserData]       = useState({});\n    const sendRequest                   = useHttpClientWithNavigate();\n    const dispatch                      = useDispatch()                   \n    const { employeeId }                = useParams();\n    const loggedInUserId                = useSelector(state => state[HeaderSliceName]).employee.id;\n    const isCurrentLoggedInUser         = (isEmpty(employeeId))? true : loggedInUserId === employeeId;\n\n    useEffect(() => {\n        (async () => {\n            try{\n                const url = props.baseURL + ((isEmpty(employeeId))?  '/info' : `/${employeeId}/info`);\n                const method = 'GET';\n        \n                const data = await sendRequest({ url, method });\n\n                data.avatarName = '';\n                const employeeName = data.name.trim().split(' ');\n                \n                if (employeeName?.length > 1) {\n                    data.avatarName = employeeName[0].charAt(0).toUpperCase() + employeeName[1].charAt(0).toUpperCase()\n                } else {\n                    data.avatarName = employeeName[0].charAt(0).toUpperCase();\n                }\n                \n                setUserData({ ...data, old: data });\n            } catch(err) {\n                dispatch( AlertSliceActions.showAlert({ message: err.msg || 'Failed to fetch user info', title: 'Request Failed!', severity: 'error' }) );\n            }\n        })()\n    }, [dispatch, employeeId, props.baseURL, sendRequest]);\n\n    function toggleInputDisable(){\n        if(!disabled){\n            setUserData(prev => ({ ...prev.old, old: prev.old }))\n        }\n\n        setDisabledState(prev => !prev);\n    }\n\n    function handelValueChange(event){\n        const name = event.target.name;\n        const value = event.target.value;\n\n        setUserData(prev => ({...prev, [name]: value}));\n    }\n\n    async function handelFormSubmit(event){\n        try {\n            event.preventDefault();\n\n            const url       = props.baseURL + '/profile/update';\n            const method    = 'POST';\n            const headers   = { 'content-type': 'application/json' };\n\n            const body      = JSON.stringify({ name: userData.name, phone: userData.phone, id: userData.id });\n\n            const response = await sendRequest({ url, method, body, headers });\n\n            dispatch( AlertSliceActions.showAlert({ message: response.msg || 'Updated Successfully', title: 'Request Completed!', severity: 'success' }) );\n\n            setDisabledState(true);\n        } catch (err) {\n            dispatch( AlertSliceActions.showAlert({ message: err.msg || 'Failed to update user info', title: 'Request Failed!', severity: 'error' }) );\n        }\n    }\n\n    return (\n        <div className={STYLES.container}>\n            <Box sx={{ textAlign: \"center\" }}>\n                <Paper elevation={3} sx={{ p: 2 }}>\n                    <Avatar sx={{ width: 76, height: 76, margin: 'auto', fontSize: 40 }}>{userData.avatarName}</Avatar>\n                    <Typography variant=\"h4\" component=\"h2\" marginTop={2}>\n                        {userData.id?.toUpperCase()}\n                    </Typography>\n                </Paper>\n            </Box>\n\n            <form onSubmit={handelFormSubmit}>\n                <div className={STYLES.data}> \n                    <FormControl variant=\"outlined\" className={STYLES.inputContainer} >\n                        <InputLabel htmlFor='role'>Role</InputLabel>\n                        <OutlinedInput\n                            id='role'\n                            label='role'\n                            disabled\n                            defaultValue='Role'\n                            value={userData.Role?.name}\n                        />\n                    </FormControl>\n\n                    <FormControl variant=\"outlined\" className={STYLES.inputContainer} >\n                        <InputLabel htmlFor='email'>Email</InputLabel>\n                        <OutlinedInput\n                            id='email'\n                            label='Email'\n                            disabled\n                            defaultValue='Email'\n                            value={userData.email}\n                        />\n                    </FormControl>\n\n                    <FormControl variant=\"outlined\" className={STYLES.inputContainer} required>\n                        <InputLabel htmlFor='name'>Full Name</InputLabel>\n                        <OutlinedInput\n                            id='name'\n                            endAdornment={\n                                disabled && isCurrentLoggedInUser &&\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle edit option\"\n                                        edge=\"end\"\n                                        onClick={toggleInputDisable}\n                                    >\n                                        <EditIcon fontSize='small' />\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            label='Full Name'\n                            name='name'\n                            defaultValue='Full Name'\n                            disabled={disabled}\n                            onChange={handelValueChange}\n                            required\n                            value={userData.name}\n                        />\n                    </FormControl>\n\n\n                    <FormControl variant=\"outlined\" className={STYLES.inputContainer} required>\n                        <InputLabel htmlFor='phone'>Phone</InputLabel>\n                        <OutlinedInput\n                            id='phone'\n                            endAdornment={\n                                disabled && isCurrentLoggedInUser &&\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle edit option\"\n                                        edge=\"end\"\n                                        onClick={toggleInputDisable}\n                                    >\n                                        <EditIcon fontSize='small' />\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            label='Phone'\n                            name='phone'\n                            defaultValue='Phone'\n                            disabled={disabled}\n                            onChange={handelValueChange}\n                            required\n                            value={userData.phone}\n                        />\n                    </FormControl>\n                </div>\n\n                {\n                    !disabled && isCurrentLoggedInUser &&\n                    <>\n                        <Divider sx={{ marginTop: 2 }} />\n\n                        <div className={STYLES.data}>\n                            <Button variant=\"outlined\" onClick={toggleInputDisable}>Cancel</Button>\n                            <Button variant=\"contained\" type=\"submit\">Save</Button>\n                        </div>\n                    </>\n                }\n            </form>\n        </div>\n    )\n}\n\nexport default Profile;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__GGmEg\",\"data\":\"Profile_data__1AeJ-\",\"input-container\":\"Profile_input-container__lGpS4\"};","// Functional Imports\nimport { Navigate, useRoutes } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { HeaderSliceActions } from \"../store/header-slice\";\nimport { useParams } from \"react-router-dom\";\n\n// Components Imports\nimport Profile from \"../Apps/AccountSetings/Profile/Profile\";\n\n\nfunction AccountSettingsPages(props){\n    const dispatcher = useDispatch();\n    const baseURL = '/profile';\n\n    dispatcher( HeaderSliceActions.setHeaders({ \n        currentApp: 'Account Settings', \n        appTabs: [\n            { name: 'Profile', endpoint: 'info', baseURL }\n        ],\n        appPermissions: {}\n    }) );\n\n    const routes = useRoutes([\n        { index: true, element: <Navigate to='info' relative='path' replace={true} /> },\n        { path: ':employeeId', element: <RedirectToProfileView baseURL={baseURL} /> },\n        { path: ':employeeId/info', element: <Profile baseURL={baseURL} /> },\n        { path: 'info', element: <Profile baseURL={baseURL} /> },    \n        { path: '*', element: <Navigate to='/error' state={{ statusText: 'Page Not Found!', status: 404 }} /> }    \n    ]);\n\n    return routes;\n}\n\nfunction RedirectToProfileView(props){\n    const { employeeId } = useParams();\n    return <Navigate to={`${props.baseURL}/${employeeId}/view`} replace={true} />\n}\n\nexport default AccountSettingsPages;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["STYLES","cssNameSimplifier","props","_userData$id","_userData$Role","disabled","setDisabledState","useState","userData","setUserData","sendRequest","useHttpClientWithNavigate","dispatch","useDispatch","employeeId","useParams","loggedInUserId","useSelector","state","HeaderSliceName","employee","id","isCurrentLoggedInUser","isEmpty","toggleInputDisable","prev","old","handelValueChange","event","name","target","value","useEffect","url","baseURL","concat","method","data","avatarName","employeeName","trim","split","length","charAt","toUpperCase","err","AlertSliceActions","showAlert","message","msg","title","severity","_jsxs","className","container","children","_jsx","Box","sx","textAlign","Paper","elevation","p","Avatar","width","height","margin","fontSize","Typography","variant","component","marginTop","onSubmit","async","preventDefault","headers","body","JSON","stringify","phone","response","FormControl","inputContainer","InputLabel","htmlFor","OutlinedInput","label","defaultValue","Role","email","required","endAdornment","InputAdornment","position","IconButton","edge","onClick","EditIcon","onChange","_Fragment","Divider","Button","type","RedirectToProfileView","Navigate","to","replace","dispatcher","HeaderSliceActions","setHeaders","currentApp","appTabs","endpoint","appPermissions","useRoutes","index","element","relative","path","Profile","statusText","status","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}